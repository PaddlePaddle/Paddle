namespace { 
const std::unordered_map<std::string, std::string> op_def_map =  { 
{"affine_channel",R"(type: "affine_channel"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  inputs {
    name: "Bias"
  }
  attrs {
    name: "data_layout"
    type: STRING
  }
  outputs {
    name: "Out"
  }
}
)"},
{"batch_norm",R"(type: "batch_norm"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  inputs {
    name: "Bias"
  }
  inputs {
    name: "Mean"
  }
  inputs {
    name: "Variance"
  }
  inputs {
    name: "MomentumTensor"
  }
  outputs {
    name: "Y"
  }
  outputs {
    name: "MeanOut"
  }
  outputs {
    name: "VarianceOut"
  }
  outputs {
    name: "SavedMean"
  }
  outputs {
    name: "SavedVariance"
  }
  outputs {
    name: "ReserveSpace"
  }
  attrs {
    name: "epsilon"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "momentum"
    type: FLOAT
  }
  attrs {
    name: "Y0_threshold"
    type: FLOAT
  }
  attrs {
    name: "data_layout"
    type: STRING
  }
  attrs {
    name: "fuse_with_relu"
    type: BOOLEAN
  }
  attrs {
    name: "use_global_stats"
    type: BOOLEAN
  }
  attrs {
    name: "trainable_statistics"
    type: BOOLEAN
  }
}

)"},
{"concat",R"(type: "concat"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "AxisTensor"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
)"},
{"conv2d",R"(type: "conv2d"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "Filter"
  }
  inputs {
    name: "Bias"
  }
  inputs {
    name: "ResidualData"
  }
  outputs {
    name: "Output"
  }
  attrs {
    name: "strides"
    type: INTS
  }
  attrs {
    name: "paddings"
    type: INTS
  }
  attrs {
    name: "padding_algorithm"
    type: STRING
  }
  attrs {
    name: "groups"
    type: INT
  }
  attrs {
    name: "dilations"
    type: INTS
  }
  attrs {
    name: "data_format"
    type: STRING
  }
}
extra {
  attrs {
    name: "Input_scale"
    type: FLOAT
  }
  attrs {
    name: "Input0_threshold"
    type: FLOAT
  }
  attrs {
    name: "weight_scale"
    type: FLOAT
  }
  attrs {
    name: "quantization_type"
    type: STRING
  } 
  attrs {
    name: "bit_length"
    type: INT
  }
  attrs {
    name: "out_threshold"
    type: FLOAT
  }
  attrs {
    name: "skip_quant"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu_before_depthwise_conv"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_brelu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_brelu_threshold"
    type: FLOAT
  }
  attrs {
    name: "fuse_activation"
    type: STRING
  }
  attrs {
    name: "fuse_alpha"
    type: FLOAT
  }
  attrs {
    name: "fuse_beta"
    type: FLOAT
  }
  attrs {
    name: "use_addto"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_residual_connection"
    type: BOOLEAN
  }
  attrs {
    name: "Scale_in"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "Scale_in_eltwise"
    type: FLOAT
  }
  attrs {
    name: "Scale_weights"
    type: FLOATS
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "workspace_size_MB"
    type: INT
  }
  attrs {
    name: "exhaustive_search"
    type: BOOLEAN
  }
}

)"},
{"conv2d_transpose",R"(type: "conv2d_transpose"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "Filter"
  }
  inputs {
    name: "Bias"
  }  
  outputs {
    name: "Output"
  }
  attrs {
    name: "output_padding"
    type: INTS
  }
  attrs {
    name: "output_size"
    type: INTS
  }
  attrs {
    name: "groups"
    type: INT
  }
  attrs {
    name: "dilations"
    type: INTS
  }
  attrs {
    name: "strides"
    type: INTS
  }
  attrs {
    name: "paddings"
    type: INTS
  }
  attrs {
    name: "padding_algorithm"
    type: STRING
  }
  attrs {
    name: "data_format"
    type: STRING
  }
}
extra {
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_activation"
    type: STRING
  }
  attrs {
    name: "fuse_alpha"
    type: FLOAT
  }
  attrs {
    name: "fuse_beta"
    type: FLOAT
  }
  attrs {
    name: "workspace_size_MB"
    type: INT
  }
}

)"},
{"conv3d",R"(type: "conv3d"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "Filter"
  }
  inputs {
    name: "ResidualData"
  }
  outputs {
    name: "Output"
  }
  attrs {
    name: "strides"
    type: INTS
  }
  attrs {
    name: "paddings"
    type: INTS
  }
  attrs {
    name: "padding_algorithm"
    type: STRING
  }
  attrs {
    name: "groups"
    type: INT
  }
  attrs {
    name: "dilations"
    type: INTS
  }
  attrs {
    name: "data_format"
    type: STRING
  }
}
extra {
  attrs {
    name: "fuse_relu_before_depthwise_conv"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_activation"
    type: STRING
  }
  attrs {
    name: "fuse_alpha"
    type: FLOAT
  }
  attrs {
    name: "fuse_beta"
    type: FLOAT
  }
  attrs {
    name: "use_addto"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_residual_connection"
    type: BOOLEAN
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "workspace_size_MB"
    type: INT
  }
  attrs {
    name: "exhaustive_search"
    type: BOOLEAN
  }
}

)"},
{"cvm",R"(type: "cvm"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "CVM"
  }
  outputs {
    name: "Y"
  }
  attrs {
    name: "use_cvm"
    type: BOOLEAN
  }
}

)"},
{"depthwise_conv2d",R"(type: "depthwise_conv2d"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "Filter"
  }
  inputs {
    name: "Bias"
  }
  inputs {
    name: "ResidualData"
  }
  outputs {
    name: "Output"
  }
  attrs {
    name: "strides"
    type: INTS
  }
  attrs {
    name: "paddings"
    type: INTS
  }
  attrs {
    name: "padding_algorithm"
    type: STRING
  }
  attrs {
    name: "groups"
    type: INT
  }
  attrs {
    name: "dilations"
    type: INTS
  }
  attrs {
    name: "data_format"
    type: STRING
  }
}
extra {
  attrs {
    name: "Input_scale"
    type: FLOAT
  }
  attrs {
    name: "quantization_type"
    type: STRING
  } 
  attrs {
    name: "bit_length"
    type: INT
  }
  attrs {
    name: "out_threshold"
    type: FLOAT
  }
  attrs {
    name: "skip_quant"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu_before_depthwise_conv"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_relu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_brelu"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_brelu_threshold"
    type: FLOAT
  }
  attrs {
    name: "fuse_activation"
    type: STRING
  }
  attrs {
    name: "fuse_alpha"
    type: FLOAT
  }
  attrs {
    name: "fuse_beta"
    type: FLOAT
  }
  attrs {
    name: "use_addto"
    type: BOOLEAN
  }
  attrs {
    name: "fuse_residual_connection"
    type: BOOLEAN
  }
  attrs {
    name: "Scale_in"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "Scale_in_eltwise"
    type: FLOAT
  }
  attrs {
    name: "Scale_weights"
    type: FLOATS
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "workspace_size_MB"
    type: INT
  }
  attrs {
    name: "exhaustive_search"
    type: BOOLEAN
  }
}

)"},
{"dequantize_linear",R"(type: "dequantize_linear"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  inputs {
    name: "ZeroPoint"
  }
  outputs {
    name: "Y"
  }
  attrs {
    name: "bit_length"
    type: INT
  }
  attrs {
    name: "quant_axis"
    type: INT
  }
}
extra {
}
)"},
{"elementwise_add",R"(type: "elementwise_add"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "out_threshold"
    type: FLOAT
  }
  attrs {
    name: "Out0_threshold"
    type: FLOAT
  }  
  attrs {
    name: "x_data_format"
    type: STRING
  }
  attrs {
    name: "y_data_format"
    type: STRING
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
}
)"},
{"elementwise_div",R"(type: "elementwise_div"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "x_data_format"
    type: STRING
  }
  attrs {
    name: "y_data_format"
    type: STRING
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "act"
    type: STRING
  }
}
)"},
{"elementwise_mul",R"(type: "elementwise_mul"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "x_data_format"
    type: STRING
  }
  attrs {
    name: "y_data_format"
    type: STRING
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
}
)"},
{"elementwise_pow",R"(type: "elementwise_pow"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "x_data_format"
    type: STRING
  }
  attrs {
    name: "y_data_format"
    type: STRING
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "act"
    type: STRING
  }
}
)"},
{"elementwise_sub",R"(type: "elementwise_sub"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "x_data_format"
    type: STRING
  }
  attrs {
    name: "y_data_format"
    type: STRING
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "act"
    type: STRING
  }
}
)"},
{"fake_channel_wise_dequantize_max_abs",R"(type: "fake_channel_wise_dequantize_max_abs"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scales"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "quant_bits"
    type: INTS
  }
  attrs {
    name: "quant_axis"
    type: INT
  }
  attrs {
    name: "x_num_col_dims"
    type: INT
  }
}
)"},
{"fake_channel_wise_quantize_abs_max",R"(type: "fake_channel_wise_quantize_abs_max"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  attrs {
    name: "quant_axis"
    type: INT
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
)"},
{"fake_channel_wise_quantize_dequantize_abs_max",R"(type: "fake_channel_wise_quantize_dequantize_abs_max"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  attrs {
    name: "quant_axis"
    type: INT
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fake_dequantize_max_abs",R"(type: "fake_dequantize_max_abs"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "max_range"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fake_quantize_abs_max",R"(type: "fake_quantize_abs_max"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fake_quantize_dequantize_abs_max",R"(type: "fake_quantize_dequantize_abs_max"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fake_quantize_moving_average_abs_max",R"(type: "fake_quantize_moving_average_abs_max"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "InScale"
  }
  inputs {
    name: "InAccum"
  }
  inputs {
    name: "InState"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  outputs {
    name: "OutState"
  }
  outputs {
    name: "OutAccum"
  }
  attrs {
    name: "moving_rate"
    type: FLOAT
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fake_quantize_range_abs_max",R"(type: "fake_quantize_range_abs_max"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "InScale"
  }
  inputs {
    name: "Iter"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "OutScale"
  }
  outputs {
    name: "OutScales"
  }
  attrs {
    name: "window_size"
    type: INT
  }
  attrs {
    name: "bit_length"
    type: INT
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"fc",R"(type: "fc"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "W"
  }
  inputs {
    name: "Bias"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "in_num_col_dims"
    type: INT
  }
  attrs {
    name: "activation_type"
    type: STRING
  }
}
extra {
  attrs {
    name: "padding_weights"
    type: BOOLEAN
  }
  attrs {
    name: "@ALL_KERNELS_MUST_COMPUTE_RUNTIME_SHAPE@"
    type: BOOLEAN
  }
  attrs {
    name: "Scale_in"
    type: FLOAT
  }
  attrs {
    name: "Scale_weights"
    type: FLOAT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
}
)"},
{"fill_constant",R"(type: "fill_constant"
def {
  inputs {
    name: "ValueTensor"
  }
  inputs {
    name: "ShapeTensor"
  }
  inputs {
    name: "ShapeTensorList"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "dtype"
    type: INT
  }
  attrs {
    name: "shape"
    type: LONGS
  }
  attrs {
    name: "value"
    type: FLOAT
  }
}
extra {
    attrs {
    name: "str_value"
    type: STRING
  }
  attrs {
    name: "force_cpu"
    type: BOOLEAN
  }
  attrs {
    name: "place_type"
    type: INT
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
}
)"},
{"flatten2",R"(type: "flatten2"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "XShape"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"gelu",R"(type: "gelu"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "approximate"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
}

)"},
{"gru",R"(type: "gru"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "H0"
  }
  inputs {
    name: "Weight"
  }
  inputs {
    name: "Bias"
  }
  outputs {
    name: "BatchGate"
  }
  outputs {
    name: "BatchResetHiddenPrev"
  }
  outputs {
    name: "BatchHidden"
  }
  outputs {
    name: "Hidden"
  }
  attrs {
    name: "activation"
    type: STRING
  }
  attrs {
    name: "gate_activation"
    type: STRING
  }
  attrs {
    name: "is_reverse"
    type: BOOLEAN
  }
  attrs {
    name: "origin_mode"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"hard_sigmoid",R"(type: "hard_sigmoid"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "slope"
    type: FLOAT
  }
  attrs {
    name: "offset"
    type: FLOAT
  }
}
)"},
{"hard_swish",R"(type: "hard_swish"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "threshold"
    type: FLOAT
  }
  attrs {
    name: "scale"
    type: FLOAT
  }
  attrs {
    name: "offset"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "name"
    type: STRING
  }
  attrs {
    name: "@ENABLE_CACHE_RUNTIME_CONTEXT@"
    type: BOOLEAN
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"layer_norm",R"(type: "layer_norm"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  inputs {
    name: "Bias"
  }
  outputs {
    name: "Y"
  }
  outputs {
    name: "Mean"
  }
  outputs {
    name: "Variance"
  }
  attrs {
    name: "epsilon"
    type: FLOAT
  }
  attrs {
    name: "begin_norm_axis"
    type: INT
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"leaky_relu",R"(type: "leaky_relu"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "alpha"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "name"
    type: STRING
  }
  attrs {
    name: "@ENABLE_CACHE_RUNTIME_CONTEXT@"
    type: BOOLEAN
  }
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"lstm",R"(type: "lstm"
def {
  inputs {
    name: "Input"
  }
  inputs {
    name: "H0"
  }
  inputs {
    name: "C0"
  }
  inputs {
    name: "Weight"
  }
  inputs {
    name: "Bias"
  }
  outputs {
    name: "Hidden"
  }
  outputs {
    name: "Cell"
  }
  outputs {
    name: "BatchGate"
  }
  outputs {
    name: "BatchCellPreAct"
  }
  attrs {
    name: "use_peepholes"
    type: BOOLEAN
  }
  attrs {
    name: "is_reverse"
    type: BOOLEAN
  }
  attrs {
    name: "gate_activation"
    type: STRING
  }
  attrs {
    name: "cell_activation"
    type: STRING
  }
  attrs {
    name: "candidate_activation"
    type: STRING
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"matmul",R"(type: "matmul"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "alpha"
    type: FLOAT
  }
  attrs {
    name: "transpose_X"
    type: BOOLEAN
  }
  attrs {
    name: "transpose_Y"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "head_number"
    type: INT
  }
  attrs {
    name: "Scale_out"
    type: FLOAT
  }
  attrs {
    name: "Scale_x"
    type: FLOAT
  }
  attrs {
    name: "Scale_y"
    type: FLOAT
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
  attrs {
    name: "use_quantizer"
    type: BOOLEAN
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "fused_reshape_Out"
    type: INTS
  }
  attrs {
    name: "fused_reshape_X"
    type: INTS
  }
  attrs {
    name: "fused_reshape_Y"
    type: INTS
  }
  attrs {
    name: "fused_transpose_Out"
    type: INTS
  }
  attrs {
    name: "fused_transpose_X"
    type: INTS
  }
  attrs {
    name: "fused_transpose_Y"
    type: INTS
  }
}
)"},
{"matmul_v2",R"(type: "matmul_v2"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "trans_x"
    type: BOOLEAN
  }
  attrs {
    name: "trans_y"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
  attrs {
    name: "fused_reshape_X"
    type: INTS
  }
  attrs {
    name: "fused_reshape_Y"
    type: INTS
  }
  attrs {
    name: "fused_transpose_X"
    type: INTS
  }
  attrs {
    name: "fused_transpose_Y"
    type: INTS
  }
  attrs {
    name: "fused_reshape_Out"
    type: INTS
  }
  attrs {
    name: "fused_transpose_Out"
    type: INTS
  }
}
)"},
{"mul",R"(type: "mul"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "x_num_col_dims"
    type: INT
  }
  attrs {
    name: "y_num_col_dims"
    type: INT
  }
}
extra {
  attrs {
    name: "Out0_threshold"
    type: FLOAT
  } 
  attrs {
    name: "bit_length"
    type: INT
  }
  attrs {
    name: "quantization_type"
    type: STRING
  } 
  attrs {
    name: "skip_quant"
    type: BOOLEAN
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "scale_x"
    type: FLOAT
  }
  attrs {
    name: "scale_y"
    type: FLOATS
  }
  attrs {
    name: "scale_out"
    type: FLOAT
  }
  attrs {
    name: "force_fp32_output"
    type: BOOLEAN
  }
  attrs {
    name: "enable_int8"
    type: BOOLEAN
  }
  attrs {
    name: "Input_scale"
    type: FLOAT
  }
  attrs {
    name: "out_threshold"
    type: FLOAT
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }

}
)"},
{"pool2d",R"(type: "pool2d"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "pooling_type"
    type: STRING
  }
  attrs {
    name: "ksize"
    type: INTS
  }
  attrs {
    name: "global_pooling"
    type: BOOLEAN
  }
  attrs {
    name: "strides"
    type: INTS
  }
  attrs {
    name: "paddings"
    type: INTS
  }
  attrs {
    name: "exclusive"
    type: BOOLEAN
  }
  attrs {
    name: "adaptive"
    type: BOOLEAN
  }
  attrs {
    name: "ceil_mode"
    type: BOOLEAN
  }
  attrs {
    name: "data_format"
    type: STRING
  }
  attrs {
    name: "padding_algorithm"
    type: STRING
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_quantizer"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"quantize_linear",R"(type: "quantize_linear"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Scale"
  }
  inputs {
    name: "ZeroPoint"
  }
  outputs {
    name: "Y"
  }
  attrs {
    name: "bit_length"
    type: INT
  }
  attrs {
    name: "quant_axis"
    type: INT
  }
}
extra {
}
)"},
{"reduce_mean",R"(type: "reduce_mean"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "dim"
    type: INTS
  }
  attrs {
    name: "keep_dim"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "reduce_all"
    type: BOOLEAN
  }
  attrs {
    name: "in_dtype"
    type: INT
  }
  attrs {
    name: "out_dtype"
    type: INT
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"relu",R"(type: "relu"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}
extra {
  attrs {
    name: "X0_threshold"
    type: FLOAT
  }
  attrs {
    name: "X0_threshold"
    type: FLOAT
  }
  attrs {
    name: "out_threshold"
    type: FLOAT
  }
  attrs {
    name: "Out0_threshold"
    type: FLOAT
  }
}
)"},
{"relu6",R"(type: "relu6"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "threshold"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "name"
    type: STRING
  }
  attrs {
    name: "is_test"
    type: FLOAT
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "@ENABLE_CACHE_RUNTIME_CONTEXT@"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"reshape2",R"(type: "reshape2"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Shape"
  }
  inputs {
    name: "ShapeTensor"
  }
  outputs {
    name: "XShape"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "shape"
    type: INTS
  }
}
extra {
  attrs {
    name: "use_quantizer"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"scale",R"(type: "scale"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "bias"
    type: FLOAT
  }
  attrs {
    name: "scale"
    type: FLOAT
  }
  attrs {
    name: "bias_after_scale"
    type: BOOLEAN
  }
}
extra {
  attrs {
    name: "name"
    type: STRING
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"sequence_conv",R"(type: "sequence_conv"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Filter"
  }
  inputs {
    name: "PaddingData"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "contextLength"
    type: INT
   }
  attrs {
    name: "contextStart"
    type: INT
   }
  attrs {
    name: "contextStride"
    type: INT
   }  
}
extra {
  attrs {
    name: "paddingTrainable"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }   
}
)"},
{"sequence_expand",R"(type: "sequence_expand"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Y"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "ref_level"
    type: INT
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"sequence_pool",R"(type: "sequence_pool"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "MaxIndex"
  }
  attrs {
    name: "pooltype"
    type: STRING
  }
  attrs {
    name: "pad_value"
    type: FLOAT
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"sigmoid",R"(type: "sigmoid"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"softmax",R"(type: "softmax"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INT
  }
}
extra {
  attrs {
    name: "data_format"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
}
)"},
{"sqrt",R"(type: "sqrt"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"square",R"(type: "square"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}

extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"squeeze2",R"(type: "squeeze2"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "XShape"
  }
  attrs {
    name: "axes"
    type: INTS
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"swish",R"(type: "swish"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}
extra {
  attrs {
    name: "beta"
    type: FLOAT
  }
  attrs {
    name: "name"
    type: STRING
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"tanh",R"(type: "tanh"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
}
extra {
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_cudnn"
    type: BOOLEAN
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"transpose",R"(type: "transpose"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  attrs {
    name: "axis"
    type: INTS
  }
}
extra {
  attrs {
    name: "data_format"
    type: STRING
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_quantizer"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}

)"},
{"transpose2",R"(type: "transpose2"
def {
  inputs {
    name: "X"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "XShape"
  }
  attrs {
    name: "axis"
    type: INTS
  }
}
extra {
  attrs {
    name: "data_format"
    type: STRING
  }
  attrs {
    name: "use_mkldnn"
    type: BOOLEAN
  }
  attrs {
    name: "use_quantizer"
    type: BOOLEAN
  }
  attrs {
    name: "mkldnn_data_type"
    type: STRING
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"unsqueeze2",R"(type: "unsqueeze2"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "AxesTensor"
  }
  inputs {
    name: "AxesTensorList"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "XShape"
  }
  attrs {
    name: "axes"
    type: INTS
  }
}
extra {
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"while",R"(type: "while"
def {
  inputs {
    name: "X"
  }
  inputs {
    name: "Condition"
  }
  outputs {
    name: "Out"
  }
  outputs {
    name: "StepScopes"
  }
  attrs {
    name: "sub_block"
    type: BLOCK
  }
}
extra {
  attrs {
    name: "is_test"
    type: BOOLEAN
  }
  attrs {
    name: "skip_eager_deletion_vars"
    type: STRINGS
  }
  attrs {
    name: "op_role"
    type: INT
  }
  attrs {
    name: "op_role_var"
    type: STRINGS
  }
  attrs {
    name: "op_namescope"
    type: STRING
  }
  attrs {
    name: "op_callstack"
    type: STRINGS
  }
  attrs {
    name: "op_device"
    type: STRING
  }
}
)"},
{"",""}};
}
