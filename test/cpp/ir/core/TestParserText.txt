
//CHECK attribute
(String)sdfgs.sdsd

//CHECK type
f32

//CHECK type
pd.tensor<256xf32>

//CHECK program
{
 (%0) = "builtin.get_parameter" () {parameter_name:(String)conv2d_0.w_0} : () -> pd.tensor<64x3x7x7xf32>
 (%1) = "pd.feed" () {col:(Int32)0,is_persisable:(Array)[false],name:(String)data,stop_gradient:(Array)[true]} : () -> pd.tensor<-1x3x224x224xf32>
 (%2) = "pd.conv2d" (%1, %0) {data_format:(String)NCHW,dilations:(Array)[(Int32)1,(Int32)1],groups:(Int32)1,is_persisable:(Array)[false],padding_algorithm:(String)EXPLICIT,paddings:(Array)[(Int32)3,(Int32)3],stop_gradient:(Array)[false],strides:(Array)[(Int32)2,(Int32)2]} : (pd.tensor<-1x3x224x224xf32>, pd.tensor<64x3x7x7xf32>) -> pd.tensor<-1x64x112x112xf32>
}

//CHECK attribute
(Array)[(pd.DataType)bool,(pd.DataType)float32,(pd.DataType)float64,
(pd.DataType)complex64,(pd.DataType)complex128,(pd.DataType)Undefined,
(pd.DataType)Undefined,(pd.DataType)Undefined,(pd.DataType)Undefined,
(pd.DataType)bfloat16,(pd.DataType)uint8,(pd.DataType)uint32,(pd.DataType)int8,
(pd.DataType)uint16,(pd.DataType)int16,(pd.DataType)int32,(pd.DataType)uint64,(pd.DataType)int64]


//CHECK attribute
(Array)[(pd.Place)Place(gpu:0),(pd.Place)Place(gpu_pinned),(pd.Place)Place(gpu_pinned),
(pd.Place)Place(xpu:0),(pd.Place)Place(ipu:0),(pd.Place)Place(:0),(pd.Place)Place(cpu)]


//CHECK attribute
(Array)[(pd.DataLayout)NHWC,(pd.DataLayout)STRIDED,(pd.DataLayout)NCHW,(pd.DataLayout)Undefined(AnyLayout),
(pd.DataLayout)ONEDNN,(pd.DataLayout)SPARSE_COO,(pd.DataLayout)SPARSE_CSR,(pd.DataLayout)NDHWC,(pd.DataLayout)NCDHW,
(pd.DataLayout)PSTRING_UNION]

//CHECK attribute
(Array)[(Double)1,(Int64)0,(String)1]

//CHECK type
vec[bf16,f64,b,i8,u8,i16,c64,c128]

//CHECK attribute
(String)1
