from setuptools import setup
import subprocess

MAJOR   = 0
MINOR   = 10
PATCH   = 0
RC      = 0
ISTAGED = False



def git_commit():
    try:
        cmd = ["git", "rev-parse", "HEAD"]
        git_commit = subprocess.Popen(cmd, stdout = subprocess.PIPE).communicate()[0].strip()
    except:
        git_commit = "Unknown"
    return git_commit

def write_version_py(filename="paddle/version.py"):
    cnt = """
# THIS FILE IS GENERATED FROM PADDLEPADDLE SETUP.PY
#
full_version    = "%(major)d.%(minor)d.%(patch)d"
major           = "%(major)d"
minor           = "%(minor)d"
patch           = "%(patch)d"
rc              = "%(rc)d"
istaged         = %(istaged)s
commit          = "%(commit)s"

def show():
    if istaged:
        print "full_version:", full_version
        print "major:", major
        print "minor:", minor
        print "patch:", patch
        print "rc:", rc
    else:
        print "commit:", commit
"""
    commit = git_commit()
    with open(filename, "w") as f:
        f.write(cnt % {
            "major": MAJOR,
            "minor": MINOR,
            "patch": PATCH,
            "rc": RC,
            "version": "${PADDLE_VERSION}",
            "commit": commit,
            "istaged": ISTAGED})

write_version_py(filename="${PROJ_ROOT}/python/paddle/version.py")

packages=['paddle',
          'paddle.proto',
          'paddle.trainer',
          'paddle.trainer_config_helpers',
          'paddle.utils',
          'paddle.v2',
          'paddle.v2.dataset',
          'paddle.v2.reader',
          'paddle.v2.master',
          'paddle.v2.plot',
          'paddle.v2.framework',
          'paddle.v2.framework.proto']

setup_requires=["requests",
                "numpy",
                "protobuf==3.1",
                "recordio",
                "matplotlib",
                "rarfile",
                "scipy>=0.19.0",
                "Pillow",
                "nltk"]

if '${CMAKE_SYSTEM_PROCESSOR}' not in ['arm', 'armv7-a', 'aarch64']:
    setup_requires+=["opencv-python"]

setup(name='paddle',
      version='${PADDLE_VERSION}',
      description='Parallel Distributed Deep Learning',
      install_requires=setup_requires,
      packages=packages,
      package_data={'paddle.v2.master': ['libpaddle_master.so'],
            'paddle.v2.framework': ['core.so']
      },
      package_dir={
          '': '${CMAKE_CURRENT_SOURCE_DIR}',
          # The paddle.v2.framework.proto will be generated while compiling.
          # So that package points to other directory.
          'paddle.v2.framework.proto': '${PROJ_BINARY_ROOT}/paddle/framework'
      },
)
