# Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

NO_NEED_FP64_CHECK_GRAD_OPS = [
    'abs',
    'acos',
    'add_position_encoding',
    'affine_channel',
    'affine_grid',
    'asin',
    'assign',
    'atan',
    'bilinear_interp',
    'bilinear_tensor_product',
    'bpr_loss',
    'brelu',
    'cast',
    'center_loss',
    'clip',
    'concat',
    'conv2d_transpose',
    'conv3d_transpose',
    'conv_shift',
    'cos',
    'cos_sim',
    'crop',
    'crop_tensor',
    'cross_entropy',
    'cross_entropy2',
    'cumsum',
    'cvm',
    'data_norm',
    'deformable_conv',
    'deformable_conv_v1',
    'deformable_psroi_pooling',
    'depthwise_conv2d_transpose',
    'dropout',
    'elementwise_add',
    'elementwise_div',
    'elementwise_max',
    'elementwise_min',
    'elementwise_mul',
    'elementwise_pow',
    'elementwise_sub',
    'elu',
    'exp',
    'expand',
    'expand_as',
    'filter_by_instag',
    'flatten',
    'flatten2',
    'fused_elemwise_activation',
    'gather',
    'gather_nd',
    'gelu',
    'grid_sampler',
    'gru_unit',
    'hard_shrink',
    'hard_sigmoid',
    'hard_swish',
    'hierarchical_sigmoid',
    'hinge_loss',
    'huber_loss',
    'im2sequence',
    'kldiv_loss',
    'l1_norm',
    'label_smooth',
    'leaky_relu',
    'linear_chain_crf',
    'log',
    'log_loss',
    'logsigmoid',
    'lookup_table',
    'lookup_table_v2',
    'lrn',
    'lstmp',
    'margin_rank_loss',
    'matmul',
    'maxout',
    'mean',
    'minus',
    'modified_huber_loss',
    'mul',
    'multiplex',
    'nce',
    'nearest_interp',
    'norm',
    'pad',
    'pad2d',
    'pad_constant_like',
    'pixel_shuffle',
    'pow',
    'pool2d',
    'pool3d',
    'prelu',
    'psroi_pool',
    'rank_loss',
    'reciprocal',
    'reduce_mean',
    'reduce_prod',
    'reduce_sum',
    'relu',
    'relu6',
    'reshape2',
    'reverse',
    'roi_align',
    'roi_perspective_transform',
    'roi_pool',
    'row_conv',
    'rsqrt',
    'scale',
    'scatter',
    'scatter_nd_add',
    'selu',
    'sequence_conv',
    'sequence_expand',
    'sequence_expand_as',
    'sequence_pad',
    'sequence_pool',
    'sequence_scatter',
    'sequence_unpad',
    'shuffle_channel',
    'sigmoid',
    'sigmoid_cross_entropy_with_logits',
    'sigmoid_focal_loss',
    'sign',
    'sin',
    'slice',
    'smooth_l1_loss',
    'soft_relu',
    'softmax',
    'softmax_with_cross_entropy',
    'softplus',
    'softshrink',
    'softsign',
    'spectral_norm',
    'split',
    'spp',
    'sqrt',
    'square',
    'squared_l2_distance',
    'squared_l2_norm',
    'squeeze',
    'squeeze2',
    'stack',
    'stanh',
    'strided_slice',
    'sum',
    'swish',
    'tanh',
    'tanh_shrink',
    'teacher_student_sigmoid_loss',
    'temporal_shift',
    'thresholded_relu',
    'transpose2',
    'tree_conv',
    'trilinear_interp',
    'unfold',
    'unpool',
    'unsqueeze',
    'unsqueeze2',
    'unstack',
    'warpctc',
]

OLD_FP64_CHECK_GRAD_OPS = []
