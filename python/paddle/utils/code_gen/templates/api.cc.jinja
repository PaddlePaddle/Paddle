{% extends "base_template.jinja" %}
{% from "utils.jinja" import 
  get_return_type,
  get_arglist_for_declaration,
  get_arglist_for_definition,
  kernel_selection,
%}
{% from "kernel_selection.jinja" import kernel_selection %}
{% from "dense_kernel.jinja" import dense_kernel %}

{% block includes %}
#include "paddle/phi/api/include/api.h"
#include <memory>

#include "glog/logging.h"

#include "paddle/phi/api/lib/api_custom_impl.h"
#include "paddle/phi/api/lib/api_registry.h"
#include "paddle/phi/api/lib/api_gen_utils.h"
#include "paddle/phi/api/lib/data_transform.h"
#include "paddle/phi/api/lib/kernel_dispatch.h"
#include "paddle/phi/api/lib/utils/storage.h"
#include "paddle/phi/core/kernel_registry.h"
#include "paddle/phi/infermeta/binary.h"
#include "paddle/phi/infermeta/multiary.h"
#include "paddle/phi/infermeta/nullary.h"
#include "paddle/phi/infermeta/unary.h"
#include "paddle/phi/kernels/declarations.h"
{% endblock %}

{% block api_entry %}
{% set name = api["name"] %}
{% set inputs = api["inputs"] %}
{% set attrs = api["attrs"] %}
{% set outputs = api["outputs"] %}
PADDLE_API {{get_return_type(outputs)}} {{name}}({{get_arglist_for_definition(inputs, attrs)}}) {

  {# ----------------------------- base api code -------------------------------#}
  {% if api is is_base_api %}
    {% filter indent(2, True) %}
{{kernel_selection(api)}}
    {% endfilter %}

  {% if api is supports_selected_rows_kernel %}
  if(kernel_type == KernelType::DENSE_TENSOR_KENREL) {
    {% filter indent(4, True) %}
{{selected_rows_kernel(api)}}
    {% endfilter %}
  } else {
    {% filter indent(4, True) %}
{{dense_kernel(api, with_inplace=false)}}
    {% endfilter %}
  }
  {% else %}{# api only supports dense tensor kernel #}
    {% filter indent(2, True) %}
{{dense_kernel(api, with_inplace=false)}}
    {% endfilter %}
  {% endif %}{# api is supports_selected_rows_kernel #}
  {# ----------------------- invocatio of other APIs -------------------------- #}
  {% else %}{# api is is_base_api #}
  {%- endif %}{# api is is_base_api #}
}
{% endblock api_entry%}


{% block inplace_api_entry %}
{% set name = api["name"] %}
{% set inputs = api["inputs"] %}
{% set attrs = api["attrs"] %}
{% set outputs = api["outputs"] %}
PADDLE_API {{get_return_type(outputs)}} {{name}}_({{get_arglist_for_definition(inputs, attrs)}}) {

  {# ----------------------------- base api code -------------------------------#}
  {% if api is is_base_api %}
    {% filter indent(2, True) %}
{{kernel_selection(api)}}
    {% endfilter %}

  {% if api is supports_selected_rows_kernel %}
  if(kernel_type == KernelType::DENSE_TENSOR_KENREL) {
    {% filter indent(4, True) %}
{{selected_rows_kernel(api)}}
    {% endfilter %}
  } else {
    {% filter indent(4, True) %}
{{dense_kernel(api, with_inplace=true)}}
    {% endfilter %}
  }
  {% else %}{# api only supports dense tensor kernel #}
    {% filter indent(2, True) %}
{{dense_kernel(api, with_inplace=true)}}
    {% endfilter %}
  {% endif %}{# api is supports_selected_rows_kernel #}
  {# ----------------------- invocatio of other APIs -------------------------- #}
  {% else %}{# api is is_base_api #}
  {%- endif %}{# api is is_base_api #}
}
{% endblock %}}
