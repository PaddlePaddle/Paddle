- name: atan2_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [atan2_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: atan2
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [cholesky_grad]
    param: [out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: cholesky
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_solve_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [cholesky_solve_grad]
    param: [x, y, out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: cholesky_solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: cross_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [cross_grad]
    param: [x, y, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
  inplace: null
  backward: null
  forward:
    name: cross
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: diagonal_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [diagonal_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
  inplace: null
  backward: null
  forward:
    name: diagonal
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: digamma_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [digamma_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: digamma
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: dist_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: p}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [dist_grad]
    param: [x, y, out, out_grad, p]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: dist
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: p, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: dot_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [dot_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
  inplace: null
  backward: null
  forward:
    name: dot
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: erf_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erf_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
  inplace: null
  backward: null
  forward:
    name: erf
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: mv_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: vec, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: vec_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, vec]
  kernel:
    func: [mv_grad]
    param: [x, vec, out_grad]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: mv
    inputs:
    - {name: x, typename: Tensor}
    - {name: vec, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: poisson_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [poisson_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: poisson
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: trace_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset}
  - {typename: int, name: axis1}
  - {typename: int, name: axis2}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [trace_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
  inplace: null
  backward: null
  forward:
    name: trace
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: trunc_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [trunc_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
  inplace: null
  backward: null
  forward:
    name: trunc
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
