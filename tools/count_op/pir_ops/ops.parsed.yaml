#######################################
#
#paddle/fluid/operators/generator/parsed_ops/ops.parsed.yaml
#
#####################################
- name: abs
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [abs]
    param: [x]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {abs: null}
    force_backend: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: abs_grad
- name: accuracy
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: accuracy, optional: false, intermediate: false}
  - {typename: Tensor, name: correct, optional: false, intermediate: false}
  - {typename: Tensor, name: total, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [accuracy]
    param: [x, indices, label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {accuracy: null}
    force_backend: null
  infer_meta:
    func: AccuracyInferMeta
    param: [x, indices, label]
  inplace: null
  view: null
  backward: null
- name: acos
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [acos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acos: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: acos_grad
- name: acosh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [acosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acosh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: acosh_grad
- name: adagrad_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1.0e-6f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [adagrad, adagrad_dense_param_sparse_grad]
    param: [param, grad, moment, learning_rate, master_param, epsilon, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      adagrad:
      - [dense, dense, dense, dense, dense]
      - [dense, dense, dense]
      adagrad_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense]
      - [dense, dense, dense]
    force_backend: null
  infer_meta:
    func: AdagradInferMeta
    param: [param, grad, moment, learning_rate, master_param, epsilon, multi_precision]
  inplace: {param_out: param, moment_out: moment, master_param_out: master_param}
  view: null
  backward: null
- name: adam_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: bool, name: lazy_mode, default_value: 'false'}
  - {typename: int64_t, name: min_row_size_to_use_multithread, default_value: '1000'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [adam, adam_dense_param_sparse_grad]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lazy_mode, min_row_size_to_use_multithread,
      multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      adam:
      - [dense, dense, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
      adam_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  infer_meta:
    func: AdamInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lazy_mode, min_row_size_to_use_multithread,
      multi_precision, use_global_beta_pow]
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: adamax_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: inf_norm
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta1, default_value: 0.9f}
  - {typename: float, name: beta2, default_value: 0.999f}
  - {typename: float, name: epsilon, default_value: 1.0e-8f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: inf_norm_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [adamax]
    param: [param, grad, learning_rate, moment, inf_norm, beta1_pow, master_param,
      beta1, beta2, epsilon, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {adamax: null}
    force_backend: null
  infer_meta:
    func: AdamaxInferMeta
    param: [param, grad, learning_rate, moment, inf_norm, beta1_pow, master_param,
      beta1, beta2, epsilon, multi_precision]
  inplace: {param_out: param, moment_out: moment, inf_norm_out: inf_norm, master_param_out: master_param}
  view: null
  backward: null
- name: adamw_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: float, name: lr_ratio, default_value: 1.0f}
  - {typename: float, name: coeff, default_value: 0.01f}
  - {typename: bool, name: with_decay, default_value: 'false'}
  - {typename: bool, name: lazy_mode, default_value: 'false'}
  - {typename: int64_t, name: min_row_size_to_use_multithread, default_value: '1000'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [adamw]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lr_ratio, coeff, with_decay, lazy_mode,
      min_row_size_to_use_multithread, multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {adamw: null}
    force_backend: null
  infer_meta:
    func: AdamwInferMeta
    spmd_rule: AdamwInferSpmdDynamic
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lr_ratio, coeff, with_decay, lazy_mode,
      min_row_size_to_use_multithread, multi_precision, use_global_beta_pow]
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: addmm
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [addmm]
    param: [input, x, y, beta, alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {addmm: null}
    force_backend: null
  infer_meta:
    func: AddmmInferMeta
    param: [input, x, y, beta, alpha]
  inplace: {out: input}
  view: null
  backward: addmm_grad
- name: affine_grid
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: output_shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [affine_grid]
    param: [input, output_shape, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {affine_grid: null}
    force_backend: null
  infer_meta:
    func: AffineGridInferMeta
    param: [input, output_shape, align_corners]
  inplace: null
  view: null
  backward: affine_grid_grad
- name: allclose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: rtol, default_value: '"1e-5"', data_type: float}
  - {typename: Scalar, name: atol, default_value: '"1e-8"', data_type: float}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [allclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {allclose: null}
    force_backend: null
  infer_meta:
    func: AllValueCompareInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: angle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [angle]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {angle: null}
    force_backend: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  inplace: null
  view: null
  backward: angle_grad
- name: apply_per_channel_scale
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [apply_per_channel_scale]
    param: [x, scales]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {apply_per_channel_scale: null}
    force_backend: null
  infer_meta:
    func: ApplyPerChannelScaleInferMeta
    param: [x, scales]
  inplace: null
  view: null
  backward: null
- name: argmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int64_t), name: axis, data_type: int64_t}
  - {typename: bool, name: keepdims, default_value: 'false'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [argmax]
    param: [x, axis, keepdims, flatten, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {argmax: null}
    force_backend: null
  infer_meta:
    func: ArgMinMaxInferMeta
    param: [x, axis, keepdims, flatten, dtype]
  inplace: null
  view: null
  backward: null
- name: argmin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int64_t), name: axis, data_type: int64_t}
  - {typename: bool, name: keepdims, default_value: 'false'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [argmin]
    param: [x, axis, keepdims, flatten, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {argmin: null}
    force_backend: null
  infer_meta:
    func: ArgMinMaxInferMeta
    param: [x, axis, keepdims, flatten, dtype]
  inplace: null
  view: null
  backward: null
- name: argsort
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: descending, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [argsort]
    param: [x, axis, descending]
    backend: null
    layout: null
    data_type: null
    dispatch: {argsort: null}
    force_backend: null
  infer_meta:
    func: ArgsortInferMeta
    param: [x, axis, descending]
  inplace: null
  view: null
  backward: argsort_grad
- name: as_complex
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [as_complex]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_complex: null}
    force_backend: null
  infer_meta:
    func: AsComplexInferMeta
    param: [x]
  inplace: null
  view: null
  backward: as_complex_grad
- name: as_real
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [as_real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_real: null}
    force_backend: null
  infer_meta:
    func: AsRealInferMeta
    param: [x]
  inplace: null
  view: null
  backward: as_real_grad
- name: as_strided
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  - {typename: 'int64_t[]', name: stride, default_value: '{}'}
  - {typename: int64_t, name: offset, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [as_strided]
    param: [input, dims, stride, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_strided: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: as_strided_grad
- name: asgd_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: d
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: n
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: d_out, optional: false, intermediate: false}
  - {typename: Tensor, name: y_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [learning_rate, n]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [asgd]
    param: [param, grad, learning_rate, d, y, n, master_param, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {asgd: null}
    force_backend: null
  infer_meta:
    func: ASGDInferMeta
    param: [param, grad, learning_rate, d, y, n, master_param, multi_precision]
  inplace: {param_out: param, d_out: d, y_out: y, master_param_out: master_param}
  view: null
  backward: null
- name: asin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [asin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asin: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: asin_grad
- name: asinh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [asinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asinh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: asinh_grad
- name: atan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: atan_grad
- name: atan2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atan2]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan2: null}
    force_backend: null
  infer_meta:
    func: Atan2InferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: atan2_grad
- name: atanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atanh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: atanh_grad
- name: auc
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stat_pos
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stat_neg
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ins_tag_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: curve, default_value: '"ROC"'}
  - {typename: int, name: num_thresholds, default_value: (2 << 12) - 1}
  - {typename: int, name: slide_steps, default_value: '1'}
  outputs:
  - {typename: Tensor, name: auc, optional: false, intermediate: false}
  - {typename: Tensor, name: stat_pos_out, optional: false, intermediate: false}
  - {typename: Tensor, name: stat_neg_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [auc]
    param: [x, label, stat_pos, stat_neg, ins_tag_weight, curve, num_thresholds, slide_steps]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {auc: null}
    force_backend: null
  infer_meta:
    func: AucInferMeta
    param: [x, label, stat_pos, stat_neg, ins_tag_weight, curve, num_thresholds, slide_steps]
  inplace: null
  view: null
  backward: null
- name: average_accumulates_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_3
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_num_accumulates
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_old_num_accumulates
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_num_updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: average_window, default_value: '0'}
  - {typename: int64_t, name: max_average_window, default_value: INT64_MAX}
  - {typename: int64_t, name: min_average_window, default_value: 10000L}
  outputs:
  - {typename: Tensor, name: out_sum_1, optional: false, intermediate: false}
  - {typename: Tensor, name: out_sum_2, optional: false, intermediate: false}
  - {typename: Tensor, name: out_sum_3, optional: false, intermediate: false}
  - {typename: Tensor, name: out_num_accumulates, optional: false, intermediate: false}
  - {typename: Tensor, name: out_old_num_accumulates, optional: false, intermediate: false}
  - {typename: Tensor, name: out_num_updates, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [average_accumulates]
    param: [param, in_sum_1, in_sum_2, in_sum_3, in_num_accumulates, in_old_num_accumulates,
      in_num_updates, average_window, max_average_window, min_average_window]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      average_accumulates:
      - [dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  infer_meta:
    func: AverageAccumulatesInferMeta
    param: [param, in_sum_1, in_sum_2, in_sum_3, in_num_accumulates, in_old_num_accumulates,
      in_num_updates, average_window, max_average_window, min_average_window]
  inplace: {out_sum_1: in_sum_1, out_sum_2: in_sum_2, out_sum_3: in_sum_3, out_num_accumulates: in_num_accumulates,
    out_old_num_accumulates: in_old_num_accumulates, out_num_updates: in_num_updates}
  view: null
  backward: null
- name: bce_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bce_loss]
    param: [input, label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {bce_loss: null}
    force_backend: null
  infer_meta:
    func: BCELossInferMeta
    param: [input, label]
  inplace: {out: input}
  view: null
  backward: bce_loss_grad
- name: bernoulli
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bernoulli]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {bernoulli: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: bicubic_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bicubic_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bicubic_interp: null}
    force_backend: null
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  inplace: null
  view: null
  backward: bicubic_interp_grad
- name: bilinear
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bilinear]
    param: [x, y, weight, bias]
    backend: null
    layout: null
    data_type: null
    dispatch: {bilinear: null}
    force_backend: null
  infer_meta:
    func: BilinearInferMeta
    param: [x, y, weight, bias]
  inplace: null
  view: null
  backward: bilinear_grad
- name: bilinear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bilinear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bilinear_interp: null}
    force_backend: null
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  inplace: null
  view: null
  backward: bilinear_interp_grad
- name: bincount
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weights
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: minlength, default_value: '0', data_type: int}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bincount]
    param: [x, weights, minlength]
    backend: null
    layout: null
    data_type: null
    dispatch: {bincount: null}
    force_backend: null
  infer_meta:
    func: BincountInferMeta
    param: [x, weights, minlength]
  inplace: null
  view: null
  backward: null
- name: binomial
  inputs:
  - typename: Tensor
    name: count
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: prob
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [binomial]
    param: [count, prob]
    backend: null
    layout: null
    data_type: null
    dispatch: {binomial: null}
    force_backend: null
  infer_meta:
    func: BinomialInferMeta
    param: [count, prob]
  inplace: null
  view: null
  backward: null
- name: bitwise_and
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [bitwise_and]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_and: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: bitwise_left_shift
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: is_arithmetic, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bitwise_left_shift]
    param: [x, y, is_arithmetic]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_left_shift: null}
    force_backend: null
  infer_meta:
    func: BitwiseShiftInferMeta
    param: [x, y, is_arithmetic]
  inplace: {out: x}
  view: null
  backward: null
- name: bitwise_not
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bitwise_not]
    param: [x]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_not: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: bitwise_or
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bitwise_or]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_or: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: bitwise_right_shift
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: is_arithmetic, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bitwise_right_shift]
    param: [x, y, is_arithmetic]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_right_shift: null}
    force_backend: null
  infer_meta:
    func: BitwiseShiftInferMeta
    param: [x, y, is_arithmetic]
  inplace: {out: x}
  view: null
  backward: null
- name: bitwise_xor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bitwise_xor]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_xor: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: bmm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bmm]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {bmm: null}
    force_backend: null
  infer_meta:
    func: BmmInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: bmm_grad
- name: box_coder
  inputs:
  - typename: Tensor
    name: prior_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: prior_box_var
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: target_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: code_type, default_value: '"encode_center_size"'}
  - {typename: bool, name: box_normalized, default_value: 'true'}
  - {typename: int, name: axis, default_value: '0'}
  - {typename: 'float[]', name: variance, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: output_box, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [box_coder]
    param: [prior_box, prior_box_var, target_box, code_type, box_normalized, axis,
      variance]
    backend: null
    layout: null
    data_type: null
    dispatch: {box_coder: null}
    force_backend: null
  infer_meta:
    func: BoxCoderInferMeta
    param: [prior_box, prior_box_var, target_box, code_type, box_normalized, axis,
      variance]
  inplace: null
  view: null
  backward: null
- name: broadcast_tensors
  inputs:
  - typename: Tensor[]
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: input.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [broadcast_tensors]
    param: [input]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {broadcast_tensors: null}
    force_backend: null
  infer_meta:
    func: BroadcastTensorsInferMeta
    param: [input]
  inplace: null
  view: null
  backward: broadcast_tensors_grad
- name: ceil
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [ceil]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {ceil: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: ceil_grad
- name: celu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [celu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: celu_grad
- name: check_finite_and_unscale_
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: x.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: found_infinite, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [check_finite_and_unscale]
    param: [x, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {check_finite_and_unscale: null}
    force_backend: null
  infer_meta:
    func: CheckFiniteAndUnscaleInferMeta
    param: [x, scale]
  inplace: {out: x}
  view: null
  backward: null
- name: check_numerics
  inputs:
  - typename: Tensor
    name: tensor
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: op_type, default_value: '""'}
  - {typename: str, name: var_name, default_value: '""'}
  - {typename: int, name: check_nan_inf_level, default_value: '0'}
  - {typename: int, name: stack_height_limit, default_value: '-1'}
  - {typename: str, name: output_dir, default_value: '""'}
  outputs:
  - {typename: Tensor, name: stats, optional: false, intermediate: false}
  - {typename: Tensor, name: values, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [check_numerics]
    param: [tensor, op_type, var_name, check_nan_inf_level, stack_height_limit, output_dir]
    backend: null
    layout: null
    data_type: null
    dispatch: {check_numerics: null}
    force_backend: null
  infer_meta:
    func: CheckNumericsInferMeta
    param: [tensor, op_type, var_name, check_nan_inf_level, stack_height_limit, output_dir]
  inplace: null
  view: null
  backward: null
- name: cholesky
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cholesky]
    param: [x, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky: null}
    force_backend: null
  infer_meta:
    func: CholeskyInferMeta
    param: [x, upper]
  inplace: null
  view: null
  backward: cholesky_grad
- name: cholesky_solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cholesky_solve]
    param: [x, y, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_solve: null}
    force_backend: null
  infer_meta:
    func: CholeskySolveInferMeta
    param: [x, y, upper]
  inplace: null
  view: null
  backward: cholesky_solve_grad
- name: class_center_sample
  inputs:
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num_classes}
  - {typename: int, name: num_samples}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: rank, default_value: '0'}
  - {typename: int, name: nranks, default_value: '1'}
  - {typename: bool, name: fix_seed, default_value: 'false'}
  - {typename: int, name: seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: remapped_label, optional: false, intermediate: false}
  - {typename: Tensor, name: sampled_local_class_center, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [class_center_sample]
    param: [label, num_classes, num_samples, ring_id, rank, nranks, fix_seed, seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [label]
      to_complex_flag: [false]
    dispatch: {class_center_sample: null}
    force_backend: null
  infer_meta:
    func: ClassCenterSampleInferMeta
    param: [label, num_classes, num_samples, ring_id, rank, nranks, fix_seed, seed]
  inplace: null
  view: null
  backward: null
- name: clip
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(float), name: min, data_type: float}
  - {typename: Scalar(float), name: max, data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [clip]
    param: [x, min, max]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {clip: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: clip_grad
- name: clip_by_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [clip_by_norm, clip_by_norm_sr]
    param: [x, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch:
      clip_by_norm:
      - [dense]
      - [dense]
      clip_by_norm_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: ClipByNormInferMeta
    param: [x, max_norm]
  inplace: null
  view: null
  backward: null
- name: coalesce_tensor
  inputs:
  - typename: Tensor[]
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  - {typename: bool, name: copy_data, default_value: 'false'}
  - {typename: bool, name: set_constant, default_value: 'false'}
  - {typename: bool, name: persist_output, default_value: 'false'}
  - {typename: float, name: constant, default_value: '0.0'}
  - {typename: bool, name: use_align, default_value: 'true'}
  - {typename: int, name: align_size, default_value: '-1'}
  - {typename: int, name: size_of_dtype, default_value: '-1'}
  - {typename: 'int64_t[]', name: concated_shapes, default_value: '{}'}
  - {typename: 'int64_t[]', name: concated_ranks, default_value: '{}'}
  outputs:
  - {typename: 'Tensor[]', name: output, size: input.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: fused_output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [coalesce_tensor]
    param: [input, dtype, copy_data, set_constant, persist_output, constant, use_align,
      align_size, size_of_dtype, concated_shapes, concated_ranks]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {coalesce_tensor: null}
    force_backend: null
  infer_meta:
    func: CoalesceTensorInferMeta
    param: [input, dtype, copy_data, set_constant, persist_output, constant, use_align,
      align_size, size_of_dtype, concated_shapes, concated_ranks]
  inplace: null
  view: null
  backward: null
- name: complex
  inputs:
  - typename: Tensor
    name: real
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: imag
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [complex]
    param: [real, imag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [real]
      to_complex_flag: [false]
    dispatch: {complex: null}
    force_backend: null
  infer_meta:
    func: ComplexInferMeta
    param: [real, imag]
  inplace: null
  view: null
  backward: complex_grad
- name: concat
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [concat]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {concat: null}
    force_backend: null
  infer_meta:
    func: ConcatInferMeta
    param: [x, axis]
    spmd_rule: ConcatInferSpmdDynamic
  inplace: null
  view: null
  backward: concat_grad
- name: conj
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conj]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {conj: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: conj_grad
- name: conv2d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d]
    param: [input, filter, strides, paddings, padding_algorithm, dilations, groups,
      data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv2d: null}
    force_backend: null
  infer_meta:
    func: ConvInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, dilations, groups,
      data_format]
  inplace: null
  view: null
  backward: conv2d_grad
- name: conv3d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv3d]
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv3d: null}
    force_backend: null
  infer_meta:
    func: Conv3DInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
  inplace: null
  view: null
  backward: conv3d_grad
- name: conv3d_transpose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: 'int[]', name: output_padding, default_value: '{}'}
  - {typename: 'int[]', name: output_size, default_value: '{}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv3d_transpose]
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv3d_transpose: null}
    force_backend: null
  infer_meta:
    func: ConvTransposeInferMeta
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
  inplace: null
  view: null
  backward: conv3d_transpose_grad
- name: copysign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [copysign]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {copysign: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: copysign_grad
- name: cos
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: cos_grad
- name: cosh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cosh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: cosh_grad
- name: crop
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: offsets, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [crop]
    param: [x, shape, offsets]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {crop: null}
    force_backend: null
  infer_meta:
    func: CropInferMeta
    param: [x, shape, offsets]
  inplace: null
  view: null
  backward: crop_grad
- name: cross
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '9'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cross]
    param: [x, y, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cross: null}
    force_backend: null
  infer_meta:
    func: CrossInferMeta
    param: [x, y, axis]
  inplace: null
  view: null
  backward: cross_grad
- name: cross_entropy_with_softmax
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: soft_label, default_value: 'false'}
  - {typename: bool, name: use_softmax, default_value: 'true'}
  - {typename: bool, name: numeric_stable_mode, default_value: 'true'}
  - {typename: int, name: ignore_index, default_value: '-100'}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cross_entropy_with_softmax]
    param: [input, label, soft_label, use_softmax, numeric_stable_mode, ignore_index,
      axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {cross_entropy_with_softmax: null}
    force_backend: null
  infer_meta:
    func: CrossEntropyWithSoftmaxInferMeta
    spmd_rule: CrossEntropyWithSoftmaxInferSpmd
    param: [input, label, soft_label, use_softmax, numeric_stable_mode, ignore_index,
      axis]
  inplace: {softmax: input}
  view: null
  backward: cross_entropy_with_softmax_grad
- name: cummax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cummax]
    param: [x, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cummax: null}
    force_backend: null
  infer_meta:
    func: CumWithIndicesInferMeta
    param: [x, axis, dtype]
  inplace: null
  view: null
  backward: cummax_grad
- name: cummin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cummin]
    param: [x, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cummin: null}
    force_backend: null
  infer_meta:
    func: CumWithIndicesInferMeta
    param: [x, axis, dtype]
  inplace: null
  view: null
  backward: cummin_grad
- name: cumprod
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cumprod]
    param: [x, dim]
    backend: null
    layout: null
    data_type: null
    dispatch: {cumprod: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMetaCheckAxis
    param: [x, dim]
  inplace: {out: x}
  view: null
  backward: cumprod_grad
- name: cumsum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '-1', data_type: float}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: bool, name: exclusive, default_value: 'false'}
  - {typename: bool, name: reverse, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cumsum]
    param: [x, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cumsum: null}
    force_backend: null
  infer_meta:
    func: CumScalarAxisInferMeta
    param: [x, axis, flatten, exclusive, reverse]
  inplace: {out: x}
  view: null
  backward: cumsum_grad
- name: data
  inputs: []
  attrs:
  - {typename: str, name: name}
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [data]
    param: [name, shape, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {data: null}
    force_backend: null
  infer_meta:
    func: DataInferMeta
    param: [name, shape, dtype]
  inplace: null
  view: null
  backward: null
- name: depthwise_conv2d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [depthwise_conv2d]
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {depthwise_conv2d: null}
    force_backend: null
  infer_meta:
    func: DepthwiseConvInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
  inplace: null
  view: null
  backward: depthwise_conv2d_grad
- name: det
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [determinant]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {determinant: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: det_grad
- name: diag
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: float, name: padding_value, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [diag]
    param: [x, offset, padding_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag: null}
    force_backend: null
  infer_meta:
    func: DiagInferMeta
    param: [x, offset, padding_value]
  inplace: null
  view: null
  backward: diag_grad
- name: diag_embed
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '-2'}
  - {typename: int, name: dim2, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [diag_embed]
    param: [input, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag_embed: null}
    force_backend: null
  infer_meta:
    func: DiagEmbedInferMeta
    param: [input, offset, dim1, dim2]
  inplace: null
  view: null
  backward: null
- name: diagonal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [diagonal]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diagonal: null}
    force_backend: null
  infer_meta:
    func: DiagonalInferMeta
    param: [x, offset, axis1, axis2]
  inplace: null
  view: null
  backward: diagonal_grad
- name: digamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [digamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {digamma: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: digamma_grad
- name: dirichlet
  inputs:
  - typename: Tensor
    name: alpha
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dirichlet]
    param: [alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {dirichlet: null}
    force_backend: null
  infer_meta:
    func: DirichletInferMeta
    param: [alpha]
  inplace: null
  view: null
  backward: null
- name: dist
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p, default_value: '2.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dist]
    param: [x, y, p]
    backend: null
    layout: null
    data_type: null
    dispatch: {dist: null}
    force_backend: null
  infer_meta:
    func: DistInferMeta
    param: [x, y, p]
  inplace: null
  view: null
  backward: dist_grad
- name: dot
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dot]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dot: null}
    force_backend: null
  infer_meta:
    func: DotInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: dot_grad
- name: edit_distance
  inputs:
  - typename: Tensor
    name: hyps
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: refs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hypslength
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: refslength
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: normalized, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: sequencenum, optional: false, intermediate: false}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [edit_distance]
    param: [hyps, refs, hypslength, refslength, normalized]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: ['DataType::FLOAT32']
      to_complex_flag: [false]
    dispatch: {edit_distance: null}
    force_backend: null
  infer_meta:
    func: EditDistanceInferMeta
    param: [hyps, refs, hypslength, refslength, normalized]
  inplace: null
  view: null
  backward: null
- name: eig
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_w, optional: false, intermediate: false}
  - {typename: Tensor, name: out_v, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eig]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eig: null}
    force_backend: null
  infer_meta:
    func: EigInferMeta
    param: [x]
  inplace: null
  view: null
  backward: eig_grad
- name: eigh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: UPLO, default_value: '"L"'}
  outputs:
  - {typename: Tensor, name: out_w, optional: false, intermediate: false}
  - {typename: Tensor, name: out_v, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eigh]
    param: [x, UPLO]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigh: null}
    force_backend: null
  infer_meta:
    func: EighInferMeta
    param: [x, UPLO]
  inplace: null
  view: null
  backward: eigh_grad
- name: eigvals
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eigvals]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigvals: null}
    force_backend: null
  infer_meta:
    func: EigvalsInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: eigvalsh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: uplo, default_value: '"L"'}
  - {typename: bool, name: is_test, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: eigenvalues, optional: false, intermediate: false}
  - {typename: Tensor, name: eigenvectors, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eigvalsh]
    param: [x, uplo, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {eigvalsh: null}
    force_backend: null
  infer_meta:
    func: EigvalshInferMeta
    param: [x, uplo, is_test]
  inplace: null
  view: null
  backward: eigvalsh_grad
- name: elu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [elu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: elu_grad
- name: equal_all
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [equal_all]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {equal_all: null}
    force_backend: null
  infer_meta:
    func: CompareAllInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: erf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [erf]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erf: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: erf_grad
- name: erfinv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [erfinv]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erfinv: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: erfinv_grad
- name: exp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [exp]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {exp: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: exp_grad
- name: expand
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [expand]
    param: [x, shape]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {expand: null}
    force_backend: null
  infer_meta:
    func: ExpandInferMeta
    param: [x, shape]
  inplace: null
  view: null
  backward: expand_grad
- name: expand_as
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: target_shape, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [expand_as]
    param: [x, y, target_shape]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {expand_as: null}
    force_backend: null
  infer_meta:
    func: ExpandAsInferMeta
    param: [x, y, target_shape]
  inplace: null
  view: null
  backward: expand_as_grad
- name: expm1
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [expm1]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {expm1: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: expm1_grad
- name: fft_c2c
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_c2c]
    param: [x, axes, normalization, forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2c: null}
    force_backend: null
  infer_meta:
    func: FFTC2CInferMeta
    param: [x, axes, normalization, forward]
  inplace: null
  view: null
  backward: fft_c2c_grad
- name: fft_c2r
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: int64_t, name: last_dim_size, default_value: 0L}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_c2r]
    param: [x, axes, normalization, forward, last_dim_size]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2r: null}
    force_backend: null
  infer_meta:
    func: FFTC2RInferMeta
    param: [x, axes, normalization, forward, last_dim_size]
  inplace: null
  view: null
  backward: fft_c2r_grad
- name: fft_r2c
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: bool, name: onesided}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_r2c]
    param: [x, axes, normalization, forward, onesided]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_r2c: null}
    force_backend: null
  infer_meta:
    func: FFTR2CInferMeta
    param: [x, axes, normalization, forward, onesided]
  inplace: null
  view: null
  backward: fft_r2c_grad
- name: fill
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: value, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill]
    param: [x, value]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: fill_grad
- name: fill_diagonal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: value, default_value: '0'}
  - {typename: int, name: offset, default_value: '0'}
  - {typename: bool, name: wrap, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill_diagonal]
    param: [x, value, offset, wrap]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fill_diagonal: null}
    force_backend: null
  infer_meta:
    func: FillDiagonalInferMeta
    param: [x, value, offset, wrap]
  inplace: {out: x}
  view: null
  backward: fill_diagonal_grad
- name: fill_diagonal_tensor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '0'}
  - {typename: int, name: dim2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill_diagonal_tensor]
    param: [x, y, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_tensor: null}
    force_backend: null
  infer_meta:
    func: FillDiagonalTensorInferMeta
    param: [x, y, offset, dim1, dim2]
  inplace: {out: x}
  view: null
  backward: fill_diagonal_tensor_grad
- name: flash_attn
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fixed_seed_offset
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: str, name: rng_name, default_value: '""'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_lse, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flash_attn]
    param: [q, k, v, fixed_seed_offset, attn_mask, dropout, causal, return_softmax,
      is_test, rng_name]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn: null}
    force_backend: null
  infer_meta:
    func: FlashAttnInferMeta
    param: [q, k, v]
    spmd_rule: FlashAttInferSpmd
  inplace: null
  view: null
  backward: flash_attn_grad
- name: flash_attn_unpadded
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fixed_seed_offset
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: max_seqlen_q}
  - {typename: int64_t, name: max_seqlen_k}
  - {typename: float, name: scale}
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: str, name: rng_name, default_value: '""'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_lse, optional: false, intermediate: true}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flash_attn_unpadded]
    param: [q, k, v, cu_seqlens_q, cu_seqlens_k, fixed_seed_offset, attn_mask, max_seqlen_q,
      max_seqlen_k, scale, dropout, causal, return_softmax, is_test, rng_name]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn_unpadded: null}
    force_backend: null
  infer_meta:
    func: FlashAttnInferMeta
    param: [q, k, v]
  inplace: null
  view: null
  backward: flash_attn_unpadded_grad
- name: flatten
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: start_axis, default_value: '1'}
  - {typename: int, name: stop_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flatten]
    param: [x, start_axis, stop_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {flatten: null}
    force_backend: null
  infer_meta:
    func: FlattenWithXShapeInferMeta
    param: [x, start_axis, stop_axis]
  inplace: {out: x}
  view: {out: x}
  backward: flatten_grad
- name: flip
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flip]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {flip: null}
    force_backend: null
  infer_meta:
    func: FlipInferMeta
    param: [x, axis]
  inplace: null
  view: null
  backward: flip_grad
- name: floor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [floor]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: floor_grad
- name: fmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fmax]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {fmax: null}
    force_backend: null
  infer_meta:
    param: [x, y]
    func: ElementwiseInferMeta
  inplace: null
  view: null
  backward: fmax_grad
- name: fmin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fmin]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {fmin: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: fmin_grad
- name: fold
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_sizes}
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fold]
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {fold: null}
    force_backend: null
  infer_meta:
    func: FoldInferMeta
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
  inplace: null
  view: null
  backward: fold_grad
- name: fractional_max_pool2d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_size}
  - {typename: 'int[]', name: kernel_size, default_value: '{0, 0}'}
  - {typename: float, name: random_u, default_value: '0.0'}
  - {typename: bool, name: return_mask, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fractional_max_pool2d]
    param: [x, output_size, kernel_size, random_u, return_mask]
    backend: null
    layout: null
    data_type: null
    dispatch: {fractional_max_pool2d: null}
    force_backend: null
  infer_meta:
    func: FractionalMaxPoolInferMeta
    param: [x, output_size, kernel_size, random_u, return_mask]
  inplace: null
  view: null
  backward: fractional_max_pool2d_grad
- name: fractional_max_pool3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_size}
  - {typename: 'int[]', name: kernel_size, default_value: '{0, 0, 0}'}
  - {typename: float, name: random_u, default_value: '0.0'}
  - {typename: bool, name: return_mask, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fractional_max_pool3d]
    param: [x, output_size, kernel_size, random_u, return_mask]
    backend: null
    layout: null
    data_type: null
    dispatch: {fractional_max_pool3d: null}
    force_backend: null
  infer_meta:
    func: FractionalMaxPoolInferMeta
    param: [x, output_size, kernel_size, random_u, return_mask]
  inplace: null
  view: null
  backward: fractional_max_pool3d_grad
- name: frame
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: frame_length}
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [frame]
    param: [x, frame_length, hop_length, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {frame: null}
    force_backend: null
  infer_meta:
    func: FrameInferMeta
    param: [x, frame_length, hop_length, axis]
  inplace: null
  view: null
  backward: frame_grad
- name: full_int_array
  inputs: []
  attrs:
  - {typename: 'int64_t[]', name: value}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [full_int_array]
    param: [value, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full_int_array: null}
    force_backend: null
  infer_meta:
    func: CreateVecShapeInferMeta
    param: [value, dtype]
  inplace: null
  view: null
  backward: null
- name: gammaincc
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gammaincc]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {gammaincc: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: gammaincc_grad
- name: gammaln
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gammaln]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {gammaln: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: gammaln_grad
- name: gather
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gather]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gather: null}
    force_backend: null
  infer_meta:
    func: GatherInferMeta
    param: [x, index, axis]
  inplace: null
  view: null
  backward: gather_grad
- name: gather_nd
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [gather_nd]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gather_nd: null}
    force_backend: null
  infer_meta:
    func: GatherNdInferMeta
    param: [x, index]
  inplace: null
  view: null
  backward: gather_nd_grad
- name: gather_tree
  inputs:
  - typename: Tensor
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: parents
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gather_tree]
    param: [ids, parents]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [ids]
      to_complex_flag: [false]
    dispatch: {gather_tree: null}
    force_backend: null
  infer_meta:
    func: GatherTreeMeta
    param: [ids, parents]
  inplace: null
  view: null
  backward: null
- name: gaussian_inplace
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mean, default_value: '0'}
  - {typename: float, name: std, default_value: '1.0'}
  - {typename: int, name: seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gaussian_inplace]
    param: [x, mean, std, seed]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gaussian_inplace: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: gaussian_inplace_grad
- name: gelu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: approximate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gelu]
    param: [x, approximate]
    backend: null
    layout: null
    data_type: null
    dispatch: {gelu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: gelu_grad
- name: generate_proposals
  inputs:
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bbox_deltas
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: im_shape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: anchors
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variances
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pre_nms_top_n}
  - {typename: int, name: post_nms_top_n}
  - {typename: float, name: nms_thresh}
  - {typename: float, name: min_size}
  - {typename: float, name: eta}
  - {typename: bool, name: pixel_offset, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: rpn_rois, optional: false, intermediate: false}
  - {typename: Tensor, name: rpn_roi_probs, optional: false, intermediate: false}
  - {typename: Tensor, name: rpn_rois_num, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [generate_proposals]
    param: [scores, bbox_deltas, im_shape, anchors, variances, pre_nms_top_n, post_nms_top_n,
      nms_thresh, min_size, eta, pixel_offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [anchors]
      to_complex_flag: [false]
    dispatch: {generate_proposals: null}
    force_backend: null
  infer_meta:
    func: GenerateProposalsV2InferMeta
    param: [scores, bbox_deltas, im_shape, anchors, variances, pre_nms_top_n, post_nms_top_n,
      nms_thresh, min_size, eta, pixel_offset]
  inplace: null
  view: null
  backward: null
- name: graph_khop_sampler
  inputs:
  - typename: Tensor
    name: row
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: colptr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: eids
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: sample_sizes}
  - {typename: bool, name: return_eids}
  outputs:
  - {typename: Tensor, name: out_src, optional: false, intermediate: false}
  - {typename: Tensor, name: out_dst, optional: false, intermediate: false}
  - {typename: Tensor, name: sample_index, optional: false, intermediate: false}
  - {typename: Tensor, name: reindex_x, optional: false, intermediate: false}
  - {typename: Tensor, name: out_eids, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [graph_khop_sampler]
    param: [row, colptr, x, eids, sample_sizes, return_eids]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [row]
      to_complex_flag: [false]
    dispatch: {graph_khop_sampler: null}
    force_backend: null
  infer_meta:
    func: GraphKhopSamplerInferMeta
    param: [row, colptr, x, eids, sample_sizes, return_eids]
  inplace: null
  view: null
  backward: null
- name: graph_sample_neighbors
  inputs:
  - typename: Tensor
    name: row
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: colptr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: eids
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: perm_buffer
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: sample_size}
  - {typename: bool, name: return_eids}
  - {typename: bool, name: flag_perm_buffer}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_count, optional: false, intermediate: false}
  - {typename: Tensor, name: out_eids, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [graph_sample_neighbors]
    param: [row, colptr, x, eids, perm_buffer, sample_size, return_eids, flag_perm_buffer]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [row]
      to_complex_flag: [false]
    dispatch: {graph_sample_neighbors: null}
    force_backend: null
  infer_meta:
    func: GraphSampleNeighborsInferMeta
    param: [row, colptr, x, eids, perm_buffer, sample_size, return_eids, flag_perm_buffer]
  inplace: null
  view: null
  backward: null
- name: grid_sample
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode, default_value: '"bilinear"'}
  - {typename: str, name: padding_mode, default_value: '"zeros"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [grid_sample]
    param: [x, grid, mode, padding_mode, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {grid_sample: null}
    force_backend: null
  infer_meta:
    func: GridSampleBaseInferMeta
    param: [x, grid]
  inplace: null
  view: null
  backward: grid_sample_grad
- name: group_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  - {typename: int, name: groups, default_value: '-1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: true}
  - {typename: Tensor, name: variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [group_norm]
    param: [x, scale, bias, epsilon, groups, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {group_norm: null}
    force_backend: null
  infer_meta:
    func: GroupNormInferMeta
    param: [x, scale, bias, epsilon, groups, data_format]
  inplace: null
  view: null
  backward: group_norm_grad
- name: gumbel_softmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: temperature, default_value: '1.0'}
  - {typename: bool, name: hard, default_value: 'false'}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gumbel_softmax]
    param: [x, temperature, hard, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {gumbel_softmax: null}
    force_backend: null
  infer_meta:
    func: GumbelSoftmaxInferMeta
    param: [x, temperature, hard, axis]
  inplace: null
  view: null
  backward: gumbel_softmax_grad
- name: hardshrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hard_shrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_shrink: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: hardshrink_grad
- name: hardsigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: slope, default_value: '0.2'}
  - {typename: float, name: offset, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hardsigmoid]
    param: [x, slope, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardsigmoid: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: hardsigmoid_grad
- name: hardtanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: t_min, default_value: '0'}
  - {typename: float, name: t_max, default_value: '24'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hardtanh]
    param: [x, t_min, t_max]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardtanh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: hardtanh_grad
- name: heaviside
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [heaviside]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {heaviside: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: heaviside_grad
- name: histogram
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: bins, default_value: '100'}
  - {typename: int, name: min, default_value: '0'}
  - {typename: int, name: max, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [histogram]
    param: [input, bins, min, max]
    backend: null
    layout: null
    data_type: null
    dispatch: {histogram: null}
    force_backend: null
  infer_meta:
    func: HistogramInferMeta
    param: [input, bins, min, max]
  inplace: null
  view: null
  backward: null
- name: huber_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: delta}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [huber_loss]
    param: [input, label, delta]
    backend: null
    layout: null
    data_type: null
    dispatch: {huber_loss: null}
    force_backend: null
  infer_meta:
    func: HuberLossInferMeta
    param: [input, label, delta]
  inplace: null
  view: null
  backward: huber_loss_grad
- name: i0
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i0]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: i0_grad
- name: i0e
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i0e]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0e: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: i0e_grad
- name: i1
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i1]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: i1_grad
- name: i1e
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i1e]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1e: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: i1e_grad
- name: identity_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: reduction, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [identity_loss]
    param: [x, reduction]
    backend: null
    layout: null
    data_type: null
    dispatch: {identity_loss: null}
    force_backend: null
  infer_meta:
    func: IdentityLossInferMeta
    param: [x, reduction]
  inplace: {out: x}
  view: null
  backward: identity_loss_grad
- name: imag
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [imag]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {imag: null}
    force_backend: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  inplace: null
  view: null
  backward: imag_grad
- name: index_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: add_value
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_add]
    param: [x, index, add_value, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_add: null}
    force_backend: null
  infer_meta:
    func: IndexAddInferMeta
    param: [x, index, add_value, axis]
  inplace: {out: x}
  view: null
  backward: index_add_grad
- name: index_put
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: accumulate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_put]
    param: [x, indices, value, accumulate]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_put: null}
    force_backend: null
  infer_meta:
    func: IndexPutInferMeta
    param: [x, indices, value, accumulate]
  inplace: {out: x}
  view: null
  backward: index_put_grad
- name: index_sample
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_sample]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_sample: null}
    force_backend: null
  infer_meta:
    func: IndexSampleInferMeta
    param: [x, index]
  inplace: null
  view: null
  backward: index_sample_grad
- name: index_select
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_select]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_select: null}
    force_backend: null
  infer_meta:
    func: IndexSelectInferMeta
    param: [x, index, axis]
  inplace: null
  view: null
  backward: index_select_grad
- name: index_select_strided
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: index}
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_select_strided]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_select_strided: null}
    force_backend: null
  infer_meta:
    func: IndexSelectStridedInferMeta
    param: [x, index, axis]
  inplace: null
  view: null
  backward: index_select_strided_grad
- name: instance_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: true}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [instance_norm]
    param: [x, scale, bias, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {instance_norm: null}
    force_backend: null
  infer_meta:
    func: InstanceNormInferMeta
    param: [x, scale, bias, epsilon]
  inplace: null
  view: null
  backward: instance_norm_grad
- name: inverse
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [inverse]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {inverse: null}
    force_backend: null
  infer_meta:
    func: InverseInferMeta
    param: [x]
  inplace: null
  view: null
  backward: inverse_grad
- name: is_empty
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [is_empty]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {is_empty: null}
    force_backend: null
  infer_meta:
    func: IsEmptyInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: isclose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(double), name: rtol, default_value: 1e-5, data_type: double}
  - {typename: Scalar(double), name: atol, default_value: 1e-8, data_type: double}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [isclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {isclose: null}
    force_backend: null
  infer_meta:
    func: ValueCompareInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: isfinite
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [isfinite, isfinite_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isfinite:
      - [dense]
      - [dense]
      isfinite_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: isinf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [isinf, isinf_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isinf:
      - [dense]
      - [dense]
      isinf_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: isnan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [isnan, isnan_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isnan:
      - [dense]
      - [dense]
      isnan_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: kldiv_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduction, default_value: '"mean"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kldiv_loss]
    param: [x, label, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {kldiv_loss: null}
    force_backend: null
  infer_meta:
    func: KLDivInferMeta
    param: [x, label, reduction]
  inplace: null
  view: null
  backward: kldiv_loss_grad
- name: kron
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kron]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {kron: null}
    force_backend: null
  infer_meta:
    func: KronInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: kron_grad
- name: kthvalue
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: k, default_value: '1'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kthvalue]
    param: [x, k, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {kthvalue: null}
    force_backend: null
  infer_meta:
    func: KthvalueInferMeta
    param: [x, k, axis, keepdim]
  inplace: null
  view: null
  backward: kthvalue_grad
- name: label_smooth
  inputs:
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: prior_dist
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 0.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [label_smooth]
    param: [label, prior_dist, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [label]
      to_complex_flag: [false]
    dispatch: {label_smooth: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [label]
  inplace: null
  view: null
  backward: label_smooth_grad
- name: lamb_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: weight_decay}
  - {typename: float, name: beta1, default_value: '0.9'}
  - {typename: float, name: beta2, default_value: '0.999'}
  - {typename: float, name: epsilon, default_value: 1.0e-6f}
  - {typename: bool, name: always_adapt, default_value: 'false'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: true, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: true, intermediate: false}
  - {typename: Tensor, name: master_param_outs, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lamb, lamb_sr]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, weight_decay, beta1, beta2, epsilon, always_adapt, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      lamb:
      - [dense, dense, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
      lamb_sr:
      - [dense, selected_rows, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  infer_meta:
    func: LambInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, weight_decay, beta1, beta2, epsilon, always_adapt, multi_precision]
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_outs: master_param}
  view: null
  backward: null
- name: layer_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  - {typename: int, name: begin_norm_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: true}
  - {typename: Tensor, name: variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [layer_norm]
    param: [x, scale, bias, epsilon, begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {layer_norm: null}
    force_backend: null
  infer_meta:
    func: LayerNormInferMeta
    spmd_rule: LayerNormInferSpmd
    param: [x, scale, bias, epsilon, begin_norm_axis]
  inplace: null
  view: null
  backward: layer_norm_grad
- name: leaky_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: negative_slope, default_value: 0.02f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [leaky_relu]
    param: [x, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: leaky_relu_grad
- name: lerp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lerp]
    param: [x, y, weight]
    backend: null
    layout: null
    data_type: null
    dispatch: {lerp: null}
    force_backend: null
  infer_meta:
    func: LerpInferMeta
    param: [x, y, weight]
  inplace: {out: x}
  view: null
  backward: lerp_grad
- name: lgamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lgamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {lgamma: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: lgamma_grad
- name: linear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [linear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {linear_interp: null}
    force_backend: null
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  inplace: null
  view: null
  backward: linear_interp_grad
- name: llm_int8_linear
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '6.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [llm_int8_linear]
    param: [x, weight, bias, weight_scale, threshold]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {llm_int8_linear: null}
    force_backend: null
  infer_meta:
    func: LLMInt8LinearInferMeta
    param: [x, weight, bias, weight_scale, threshold]
  inplace: null
  view: null
  backward: null
- name: log
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [log]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: log_grad
- name: log10
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log10]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log10: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: log10_grad
- name: log1p
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log1p]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log1p: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: log1p_grad
- name: log2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log2]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log2: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: log2_grad
- name: log_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_loss]
    param: [input, label, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_loss: null}
    force_backend: null
  infer_meta:
    func: LogLossInferMeta
    param: [input, label, epsilon]
  inplace: null
  view: null
  backward: log_loss_grad
- name: log_softmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_softmax]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {log_softmax: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMetaCheckAxis
    param: [x, axis]
  inplace: null
  view: null
  backward: log_softmax_grad
- name: logcumsumexp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: bool, name: exclusive, default_value: 'false'}
  - {typename: bool, name: reverse, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logcumsumexp]
    param: [x, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type: null
    dispatch: {logcumsumexp: null}
    force_backend: null
  infer_meta:
    func: CumInferMeta
    param: [x, axis, flatten, exclusive, reverse]
  inplace: null
  view: null
  backward: logcumsumexp_grad
- name: logical_and
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [logical_and]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_and: null}
    force_backend: null
  infer_meta:
    func: LogicalBinaryInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: logical_not
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [logical_not]
    param: [x]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_not: null}
    force_backend: null
  infer_meta:
    func: LogicalNotInfermeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: logical_or
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logical_or]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_or: null}
    force_backend: null
  infer_meta:
    func: LogicalBinaryInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: logical_xor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logical_xor]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_xor: null}
    force_backend: null
  infer_meta:
    func: LogicalBinaryInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: logit
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: eps, default_value: 1e-6f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logit]
    param: [x, eps]
    backend: null
    layout: null
    data_type: null
    dispatch: {logit: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: logit_grad
- name: logsigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logsigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsigmoid: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: logsigmoid_grad
- name: lstsq
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: rcond, default_value: 0.0f, data_type: float}
  - {typename: str, name: driver, default_value: '"gels"'}
  outputs:
  - {typename: Tensor, name: solution, optional: false, intermediate: false}
  - {typename: Tensor, name: residuals, optional: true, intermediate: false}
  - {typename: Tensor, name: rank, optional: false, intermediate: false}
  - {typename: Tensor, name: singular_values, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lstsq]
    param: [x, y, rcond, driver]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lstsq: null}
    force_backend: null
  infer_meta:
    func: LstsqInferMeta
    param: [x, y, rcond, driver]
  inplace: null
  view: null
  backward: null
- name: lu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pivot, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: pivots, optional: false, intermediate: false}
  - {typename: Tensor, name: infos, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lu]
    param: [x, pivot]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lu: null}
    force_backend: null
  infer_meta:
    func: LUInferMeta
    param: [x, pivot]
  inplace: {out: x}
  view: null
  backward: lu_grad
- name: lu_unpack
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: unpack_ludata, default_value: 'true'}
  - {typename: bool, name: unpack_pivots, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: pmat, optional: false, intermediate: false}
  - {typename: Tensor, name: l, optional: false, intermediate: false}
  - {typename: Tensor, name: u, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lu_unpack]
    param: [x, y, unpack_ludata, unpack_pivots]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lu_unpack: null}
    force_backend: null
  infer_meta:
    func: LUUnpackInferMeta
    param: [x, y, unpack_ludata, unpack_pivots]
  inplace: null
  view: null
  backward: lu_unpack_grad
- name: margin_cross_entropy
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: rank, default_value: '0'}
  - {typename: int, name: nranks, default_value: '1'}
  - {typename: float, name: margin1, default_value: 1.0f}
  - {typename: float, name: margin2, default_value: 0.5f}
  - {typename: float, name: margin3, default_value: 0.0f}
  - {typename: float, name: scale, default_value: 64.0f}
  outputs:
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [margin_cross_entropy]
    param: [logits, label, return_softmax, ring_id, rank, nranks, margin1, margin2,
      margin3, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [logits]
      to_complex_flag: [false]
    dispatch: {margin_cross_entropy: null}
    force_backend: null
  infer_meta:
    func: MarginCrossEntropyInferMeta
    param: [logits, label, return_softmax, ring_id, rank, nranks, margin1, margin2,
      margin3, scale]
  inplace: null
  view: null
  backward: margin_cross_entropy_grad
- name: masked_multihead_attention_
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_kv
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cum_offsets
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: sequence_lengths
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rotary_tensor
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beam_cache_offset
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_out_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_shift
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_smooth
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: seq_len}
  - {typename: int, name: rotary_emb_dims}
  - {typename: bool, name: use_neox_rotary_style, default_value: 'false'}
  - {typename: str, name: compute_dtype, default_value: '"default"'}
  - {typename: float, name: out_scale, default_value: '-1'}
  - {typename: int, name: quant_round_type, default_value: '1'}
  - {typename: float, name: quant_max_bound, default_value: '127.0'}
  - {typename: float, name: quant_min_bound, default_value: '-127.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: cache_kv_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beam_cache_offset_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [masked_multihead_attention]
    param: [x, cache_kv, bias, src_mask, cum_offsets, sequence_lengths, rotary_tensor,
      beam_cache_offset, qkv_out_scale, out_shift, out_smooth, seq_len, rotary_emb_dims,
      use_neox_rotary_style, compute_dtype, out_scale, quant_round_type, quant_max_bound,
      quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_multihead_attention: null}
    force_backend: null
  infer_meta:
    func: MaskedMultiheadAttentionInferMeta
    param: [x, cache_kv, bias, src_mask, cum_offsets, sequence_lengths, rotary_tensor,
      beam_cache_offset, qkv_out_scale, out_shift, out_smooth, seq_len, rotary_emb_dims,
      use_neox_rotary_style, compute_dtype, out_scale, quant_round_type, quant_max_bound,
      quant_min_bound]
  inplace: {cache_kv_out: cache_kv, beam_cache_offset_out: beam_cache_offset}
  view: null
  backward: null
- name: masked_select
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [masked_select]
    param: [x, mask]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_select: null}
    force_backend: null
  infer_meta:
    func: MaskedSelectInferMeta
    param: [x, mask]
  inplace: null
  view: null
  backward: masked_select_grad
- name: matrix_nms
  inputs:
  - typename: Tensor
    name: bboxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: score_threshold}
  - {typename: int, name: nms_top_k}
  - {typename: int, name: keep_top_k}
  - {typename: float, name: post_threshold, default_value: '0.'}
  - {typename: bool, name: use_gaussian, default_value: 'false'}
  - {typename: float, name: gaussian_sigma, default_value: '2.'}
  - {typename: int, name: background_label, default_value: '0'}
  - {typename: bool, name: normalized, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: false, intermediate: false}
  - {typename: Tensor, name: roisnum, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matrix_nms]
    param: [bboxes, scores, score_threshold, nms_top_k, keep_top_k, post_threshold,
      use_gaussian, gaussian_sigma, background_label, normalized]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_nms: null}
    force_backend: null
  infer_meta:
    func: MatrixNMSInferMeta
    param: [bboxes, scores, score_threshold, nms_top_k, keep_top_k, post_threshold,
      use_gaussian, gaussian_sigma, background_label, normalized]
  inplace: null
  view: null
  backward: null
- name: matrix_power
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matrix_power]
    param: [x, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_power: null}
    force_backend: null
  infer_meta:
    func: MatrixPowerInferMeta
    param: [x, n]
  inplace: null
  view: null
  backward: matrix_power_grad
- name: max_pool2d_with_index
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool2d_with_index]
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool2d_with_index: null}
    force_backend: null
  infer_meta:
    func: MaxPoolWithIndexInferMeta
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
  inplace: null
  view: null
  backward: max_pool2d_with_index_grad
- name: max_pool3d_with_index
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool3d_with_index]
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool3d_with_index: null}
    force_backend: null
  infer_meta:
    func: MaxPoolWithIndexInferMeta
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
  inplace: null
  view: null
  backward: max_pool3d_with_index_grad
- name: maxout
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: groups}
  - {typename: int, name: axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [maxout]
    param: [x, groups, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {maxout: null}
    force_backend: null
  infer_meta:
    func: MaxOutInferMeta
    param: [x, groups, axis]
  inplace: null
  view: null
  backward: maxout_grad
- name: mean_all
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mean_all]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {mean_all: null}
    force_backend: null
  infer_meta:
    func: MeanAllInferMeta
    param: [x]
  inplace: null
  view: null
  backward: mean_all_grad
- name: memory_efficient_attention
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: causal_diagonal
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seqlen_k
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: max_seqlen_q, data_type: float}
  - {typename: Scalar, name: max_seqlen_k, data_type: float}
  - {typename: bool, name: causal}
  - {typename: double, name: dropout_p}
  - {typename: float, name: scale}
  - {typename: bool, name: is_test}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  - {typename: Tensor, name: logsumexp, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_and_offset, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [memory_efficient_attention]
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, causal_diagonal,
      seqlen_k, max_seqlen_q, max_seqlen_k, causal, dropout_p, scale, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [query]
      to_complex_flag: [false]
    dispatch: {memory_efficient_attention: null}
    force_backend: null
  infer_meta:
    func: MemoryEfficientAttentionInferMeta
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, causal_diagonal,
      seqlen_k, max_seqlen_q, max_seqlen_k, causal, dropout_p, scale, is_test]
  inplace: null
  view: null
  backward: memory_efficient_attention_grad
- name: merge_selected_rows
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [merge_selected_rows]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      merge_selected_rows:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: merged_adam_
  inputs:
  - typename: Tensor[]
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: 'Tensor[]', name: param_out, size: param.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: moment1_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: moment2_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta1_pow_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta2_pow_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_param_out, size: param.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [merged_adam]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      beta1, beta2, epsilon, multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {merged_adam: null}
    force_backend: null
  infer_meta:
    func: MergedAdamInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      beta1, beta2, epsilon, multi_precision, use_global_beta_pow]
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: merged_momentum_
  inputs:
  - typename: Tensor[]
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: bool, name: use_nesterov, default_value: 'false'}
  - {typename: 'str[]', name: regularization_method, default_value: '{}'}
  - {typename: 'float[]', name: regularization_coeff, default_value: '{}'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: 'Tensor[]', name: param_out, size: param.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: velocity_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_param_out, size: param.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [merged_momentum]
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {merged_momentum: null}
    force_backend: null
  infer_meta:
    func: MergedMomentumInferMeta
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
  inplace: {param_out: param, velocity_out: velocity, master_param_out: master_param}
  view: null
  backward: null
- name: meshgrid
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: inputs.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [meshgrid]
    param: [inputs]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {meshgrid: null}
    force_backend: null
  infer_meta:
    func: MeshgridInferMeta
    param: [inputs]
  inplace: null
  view: null
  backward: meshgrid_grad
- name: mode
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mode]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mode: null}
    force_backend: null
  infer_meta:
    func: ModeInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: mode_grad
- name: momentum_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: bool, name: use_nesterov, default_value: 'false'}
  - {typename: str, name: regularization_method, default_value: '""'}
  - {typename: float, name: regularization_coeff, default_value: 0.0f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: velocity_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [momentum, momentum_dense_param_sparse_grad]
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      momentum:
      - [dense, dense, dense, dense, dense]
      - [dense, dense, dense]
      momentum_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense]
      - [dense, dense, dense]
    force_backend: null
  infer_meta:
    func: MomentumInferMeta
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
  inplace: {param_out: param, velocity_out: velocity, master_param_out: master_param}
  view: null
  backward: null
- name: multi_dot
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multi_dot]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {multi_dot: null}
    force_backend: null
  infer_meta:
    func: MultiDotInferMeta
    param: [x]
  inplace: null
  view: null
  backward: multi_dot_grad
- name: multiclass_nms3
  inputs:
  - typename: Tensor
    name: bboxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rois_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: score_threshold}
  - {typename: int, name: nms_top_k}
  - {typename: int, name: keep_top_k}
  - {typename: float, name: nms_threshold, default_value: '0.3'}
  - {typename: bool, name: normalized, default_value: 'true'}
  - {typename: float, name: nms_eta, default_value: '1.0'}
  - {typename: int, name: background_label, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: false, intermediate: false}
  - {typename: Tensor, name: nms_rois_num, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multiclass_nms3]
    param: [bboxes, scores, rois_num, score_threshold, nms_top_k, keep_top_k, nms_threshold,
      normalized, nms_eta, background_label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [scores]
      to_complex_flag: [false]
    dispatch: {multiclass_nms3: null}
    force_backend: null
  infer_meta:
    func: MultiClassNMSInferMeta
    param: [bboxes, scores, rois_num, score_threshold, nms_top_k, keep_top_k, nms_threshold,
      normalized, nms_eta, background_label]
  inplace: null
  view: null
  backward: null
- name: multinomial
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: num_samples, default_value: '1', data_type: int}
  - {typename: bool, name: replacement, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multinomial]
    param: [x, num_samples, replacement]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {multinomial: null}
    force_backend: null
  infer_meta:
    func: MultinomialInferMeta
    param: [x, num_samples, replacement]
  inplace: null
  view: null
  backward: null
- name: multiplex
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multiplex]
    param: [inputs, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {multiplex: null}
    force_backend: null
  infer_meta:
    func: MultiplexInferMeta
    param: [inputs, index]
  inplace: null
  view: null
  backward: multiplex_grad
- name: mv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: vec
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mv]
    param: [x, vec]
    backend: null
    layout: null
    data_type: null
    dispatch: {mv: null}
    force_backend: null
  infer_meta:
    func: MvInferMeta
    param: [x, vec]
  inplace: null
  view: null
  backward: mv_grad
- name: nanmedian
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: medians, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nanmedian]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {nanmedian: null}
    force_backend: null
  infer_meta:
    func: NanmedianInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: nanmedian_grad
- name: nearest_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nearest_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nearest_interp: null}
    force_backend: null
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  inplace: null
  view: null
  backward: nearest_interp_grad
- name: nextafter
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nextafter]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nextafter: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: nll_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: ignore_index, default_value: '-100'}
  - {typename: str, name: reduction, default_value: '"mean"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: total_weight, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nll_loss]
    param: [input, label, weight, ignore_index, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nll_loss: null}
    force_backend: null
  infer_meta:
    func: NllLossRawInferMeta
    param: [input, label, weight, ignore_index, reduction]
  inplace: null
  view: null
  backward: nll_loss_grad
- name: nms
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nms]
    param: [x, threshold]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nms: null}
    force_backend: null
  infer_meta:
    func: NMSInferMeta
    param: [x, threshold]
  inplace: null
  view: null
  backward: null
- name: nonzero
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nonzero]
    param: [condition]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [condition]
      to_complex_flag: [false]
    dispatch: {nonzero: null}
    force_backend: null
  infer_meta:
    func: NonZeroInferMeta
    param: [condition]
  inplace: null
  view: null
  backward: null
- name: npu_identity
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: format, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [npu_identity]
    param: [x, format]
    backend: null
    layout: null
    data_type: null
    dispatch: {npu_identity: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: numel
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: size, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [x]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [numel]
    param: [x]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {numel: null}
    force_backend: null
  infer_meta:
    func: NumelInferMeta
    spmd_rule: NumelInferSpmd
    param: [x]
  inplace: null
  view: null
  backward: null
- name: overlap_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [overlap_add]
    param: [x, hop_length, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {overlap_add: null}
    force_backend: null
  infer_meta:
    func: OverlapAddInferMeta
    param: [x, hop_length, axis]
  inplace: null
  view: null
  backward: overlap_add_grad
- name: p_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: porder, default_value: '2'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: float, name: epsilon, default_value: 1.0e-12f}
  - {typename: bool, name: keepdim, default_value: 'false'}
  - {typename: bool, name: asvector, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [p_norm]
    param: [x, porder, axis, epsilon, keepdim, asvector]
    backend: null
    layout: null
    data_type: null
    dispatch: {p_norm: null}
    force_backend: null
  infer_meta:
    func: PNormInferMeta
    param: [x, porder, axis, epsilon, keepdim, asvector]
  inplace: null
  view: null
  backward: p_norm_grad
- name: pad3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: paddings, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: mode, default_value: '"constant"'}
  - {typename: float, name: pad_value, default_value: '0.0'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pad3d]
    param: [x, paddings, mode, pad_value, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pad3d: null}
    force_backend: null
  infer_meta:
    func: Pad3dInferMeta
    param: [x, paddings, mode, pad_value, data_format]
  inplace: null
  view: null
  backward: pad3d_grad
- name: pixel_shuffle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: upscale_factor, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pixel_shuffle]
    param: [x, upscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_shuffle: null}
    force_backend: null
  infer_meta:
    func: PixelShuffleInferMeta
    param: [x, upscale_factor, data_format]
  inplace: null
  view: null
  backward: pixel_shuffle_grad
- name: pixel_unshuffle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: downscale_factor, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pixel_unshuffle]
    param: [x, downscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_unshuffle: null}
    force_backend: null
  infer_meta:
    func: PixelUnshuffleInferMeta
    param: [x, downscale_factor, data_format]
  inplace: null
  view: null
  backward: pixel_unshuffle_grad
- name: poisson
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [poisson]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {poisson: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: poisson_grad
- name: polygamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [polygamma]
    param: [x, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {polygamma: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: polygamma_grad
- name: pow
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: y, default_value: 1.0f, data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [pow]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {pow: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: PowInferSpmd
  inplace: {out: x}
  view: null
  backward: pow_grad
- name: prelu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: alpha
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: str, name: mode, default_value: '"all"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [prelu]
    param: [x, alpha, data_format, mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {prelu: null}
    force_backend: null
  infer_meta:
    func: PReluInferMeta
    param: [x, alpha, data_format, mode]
  inplace: null
  view: null
  backward: prelu_grad
- name: prior_box
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: image
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'float[]', name: min_sizes}
  - {typename: 'float[]', name: max_sizes, default_value: '{}'}
  - {typename: 'float[]', name: aspect_ratios, default_value: '{}'}
  - {typename: 'float[]', name: variances, default_value: '{}'}
  - {typename: bool, name: flip, default_value: 'true'}
  - {typename: bool, name: clip, default_value: 'true'}
  - {typename: float, name: step_w, default_value: '0.0'}
  - {typename: float, name: step_h, default_value: '0.0'}
  - {typename: float, name: offset, default_value: '0.5'}
  - {typename: bool, name: min_max_aspect_ratios_order, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: var, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [prior_box]
    param: [input, image, min_sizes, max_sizes, aspect_ratios, variances, flip, clip,
      step_w, step_h, offset, min_max_aspect_ratios_order]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {prior_box: null}
    force_backend: null
  infer_meta:
    func: PriorBoxInferMeta
    param: [input, image, min_sizes, max_sizes, aspect_ratios, variances, flip, clip,
      step_w, step_h, offset, min_max_aspect_ratios_order]
  inplace: null
  view: null
  backward: null
- name: psroi_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: int, name: output_channels, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [psroi_pool]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, output_channels, spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {psroi_pool: null}
    force_backend: null
  infer_meta:
    func: PsroiPoolInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, output_channels, spatial_scale]
  inplace: null
  view: null
  backward: psroi_pool_grad
- name: put_along_axis
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: str, name: reduce, default_value: '"assign"'}
  - {typename: bool, name: include_self, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [put_along_axis]
    param: [arr, indices, values, axis, reduce, include_self]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {put_along_axis: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [arr]
  inplace: {out: arr}
  view: null
  backward: put_along_axis_grad
- name: qr
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode, default_value: '"reduced"'}
  outputs:
  - {typename: Tensor, name: q, optional: false, intermediate: false}
  - {typename: Tensor, name: r, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [qr]
    param: [x, mode]
    backend: null
    layout: null
    data_type: null
    dispatch: {qr: null}
    force_backend: null
  infer_meta:
    func: QrInferMeta
    param: [x, mode]
  inplace: null
  view: null
  backward: qr_grad
- name: real
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {real: null}
    force_backend: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  inplace: null
  view: null
  backward: real_grad
- name: reciprocal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [reciprocal]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {reciprocal: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: reciprocal_grad
- name: reindex_graph
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: neighbors
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: count
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hashtable_value
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hashtable_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: reindex_src, optional: false, intermediate: false}
  - {typename: Tensor, name: reindex_dst, optional: false, intermediate: false}
  - {typename: Tensor, name: out_nodes, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [graph_reindex]
    param: [x, neighbors, count, hashtable_value, hashtable_index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {graph_reindex: null}
    force_backend: null
  infer_meta:
    func: GraphReindexInferMeta
    param: [x, neighbors, count, hashtable_value, hashtable_index]
  inplace: null
  view: null
  backward: null
- name: relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [relu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: relu_grad
- name: relu6
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [relu6]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu6: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: relu6_grad
- name: renorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p}
  - {typename: int, name: axis}
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [renorm]
    param: [x, p, axis, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch: {renorm: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: renorm_grad
- name: reverse
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [reverse]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {reverse: null}
    force_backend: null
  infer_meta:
    func: ReverseInferMeta
    param: [x, axis]
  inplace: null
  view: null
  backward: reverse_grad
- name: rms_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: quant_scale}
  - {typename: int, name: quant_round_type}
  - {typename: float, name: quant_max_bound}
  - {typename: float, name: quant_min_bound}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rms_norm]
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, begin_norm_axis, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {rms_norm: null}
    force_backend: null
  infer_meta:
    func: RmsNormInferMeta
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, begin_norm_axis, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
  inplace: null
  view: null
  backward: null
- name: rmsprop_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean_square
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1.0e-10f}
  - {typename: float, name: decay, default_value: 0.9f}
  - {typename: float, name: momentum, default_value: 0.0f}
  - {typename: bool, name: centered, default_value: 'false'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_square_out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_grad_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_outs, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rmsprop, rmsprop_dense_param_sparse_grad]
    param: [param, mean_square, grad, moment, learning_rate, mean_grad, master_param,
      epsilon, decay, momentum, centered, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      rmsprop:
      - [dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense]
      rmsprop_dense_param_sparse_grad:
      - [dense, dense, selected_rows, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense]
    force_backend: null
  infer_meta:
    func: RmspropInferMeta
    param: [param, mean_square, grad, moment, learning_rate, mean_grad, master_param,
      epsilon, decay, momentum, centered, multi_precision]
  inplace: {param_out: param, moment_out: moment, mean_square_out: mean_square, mean_grad_out: mean_grad,
    master_param_outs: master_param}
  view: null
  backward: null
- name: roi_align
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  - {typename: int, name: sampling_ratio, default_value: '-1'}
  - {typename: bool, name: aligned, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roi_align]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale, sampling_ratio,
      aligned]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roi_align: null}
    force_backend: null
  infer_meta:
    func: RoiAlignInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale, sampling_ratio,
      aligned]
  inplace: null
  view: null
  backward: roi_align_grad
- name: roi_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: arg_max, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roi_pool]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roi_pool: null}
    force_backend: null
  infer_meta:
    func: RoiPoolInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale]
  inplace: null
  view: null
  backward: roi_pool_grad
- name: roll
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shifts, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roll]
    param: [x, shifts, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roll: null}
    force_backend: null
  infer_meta:
    func: RollInferMeta
    param: [x, shifts, axis]
  inplace: null
  view: null
  backward: roll_grad
- name: round
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [round]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {round: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: round_grad
- name: rprop_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: prev
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: learning_rate_range
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: etas
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: prev_out, optional: false, intermediate: false}
  - {typename: Tensor, name: learning_rate_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [learning_rate]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rprop]
    param: [param, grad, prev, learning_rate, master_param, learning_rate_range, etas,
      multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {rprop: null}
    force_backend: null
  infer_meta:
    func: RpropInferMeta
    param: [param, grad, prev, learning_rate, master_param, learning_rate_range, etas,
      multi_precision]
  inplace: {param_out: param, prev_out: prev, learning_rate_out: learning_rate, master_param_out: master_param}
  view: null
  backward: null
- name: rsqrt
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [rsqrt]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: rsqrt_grad
- name: scale
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: scale, default_value: '1.0', data_type: float}
  - {typename: float, name: bias, default_value: '0.0'}
  - {typename: bool, name: bias_after_scale, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [scale, scale_sr]
    param: [x, scale, bias, bias_after_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch:
      scale:
      - [dense]
      - [dense]
      scale_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: ScaleInferSpmd
  inplace: {out: x}
  view: null
  backward: scale_grad
- name: scatter
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: overwrite, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [scatter]
    param: [x, index, updates, overwrite]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter: null}
    force_backend: null
  infer_meta:
    func: ScatterInferMeta
    param: [x, index, updates, overwrite]
  inplace: {out: x}
  view: null
  backward: scatter_grad
- name: scatter_nd_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [scatter_nd_add]
    param: [x, index, updates]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter_nd_add: null}
    force_backend: null
  infer_meta:
    func: ScatterNdAddInferMeta
    param: [x, index, updates]
  inplace: null
  view: null
  backward: scatter_nd_add_grad
- name: searchsorted
  inputs:
  - typename: Tensor
    name: sorted_sequence
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: out_int32, default_value: 'false'}
  - {typename: bool, name: right, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [searchsorted]
    param: [sorted_sequence, values, out_int32, right]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [sorted_sequence]
      to_complex_flag: [false]
    dispatch: {searchsorted: null}
    force_backend: null
  infer_meta:
    func: SearchsortedInferMeta
    param: [sorted_sequence, values, out_int32, right]
  inplace: null
  view: null
  backward: null
- name: segment_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: segment_ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: pooltype, default_value: '"SUM"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: summed_ids, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [segment_pool]
    param: [x, segment_ids, pooltype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {segment_pool: null}
    force_backend: null
  infer_meta:
    func: SegmentPoolInferMeta
    param: [x, segment_ids, pooltype]
  inplace: null
  view: null
  backward: segment_pool_grad
- name: selu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale, default_value: '1.0507009873554804934193349852946'}
  - {typename: float, name: alpha, default_value: '1.6732632423543772848170429916717'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [selu]
    param: [x, scale, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {selu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: selu_grad
- name: send_u_recv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduce_op, default_value: '"SUM"'}
  - {typename: IntArray, name: out_size, default_value: '{0}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dst_count, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_u_recv]
    param: [x, src_index, dst_index, reduce_op, out_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_u_recv: null}
    force_backend: null
  infer_meta:
    func: SendURecvInferMeta
    param: [x, src_index, dst_index, reduce_op, out_size]
  inplace: null
  view: null
  backward: send_u_recv_grad
- name: send_ue_recv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  - {typename: str, name: reduce_op, default_value: '"SUM"'}
  - {typename: IntArray, name: out_size, default_value: '{0}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dst_count, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_ue_recv]
    param: [x, y, src_index, dst_index, message_op, reduce_op, out_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_ue_recv: null}
    force_backend: null
  infer_meta:
    func: SendUERecvInferMeta
    param: [x, y, src_index, dst_index, message_op, reduce_op, out_size]
  inplace: null
  view: null
  backward: send_ue_recv_grad
- name: send_uv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_uv]
    param: [x, y, src_index, dst_index, message_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_uv: null}
    force_backend: null
  infer_meta:
    func: SendUVInferMeta
    param: [x, y, src_index, dst_index, message_op]
  inplace: null
  view: null
  backward: send_uv_grad
- name: sgd_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [learning_rate]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sgd, sgd_dense_param_sparse_grad, sgd_sparse_param_sparse_grad]
    param: [param, learning_rate, grad, master_param, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      sgd:
      - [dense, dense, dense, dense]
      - [dense, dense]
      sgd_dense_param_sparse_grad:
      - [dense, dense, selected_rows, dense]
      - [dense, dense]
      sgd_sparse_param_sparse_grad:
      - [selected_rows, dense, selected_rows, selected_rows]
      - [selected_rows, selected_rows]
    force_backend: null
  infer_meta:
    func: SgdInferMeta
    spmd_rule: SgdInferSpmd
    param: [param, learning_rate, grad, master_param, multi_precision]
  inplace: {param_out: param, master_param_out: master_param}
  view: null
  backward: null
- name: shape
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [input]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [shape, shape_sr]
    param: [input]
    backend: null
    layout: null
    data_type: null
    dispatch:
      shape:
      - [dense]
      - [dense]
      shape_sr:
      - [selected_rows]
      - [dense]
    force_backend: null
  infer_meta:
    func: ShapeInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
- name: shard_index
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: index_num}
  - {typename: int, name: nshards}
  - {typename: int, name: shard_id}
  - {typename: int, name: ignore_value, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [shard_index]
    param: [input, index_num, nshards, shard_id, ignore_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {shard_index: null}
    force_backend: null
  infer_meta:
    func: ShardIndexInferMeta
    param: [input, index_num, nshards, shard_id, ignore_value]
  inplace: null
  view: null
  backward: null
- name: sigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: sigmoid_grad
- name: sigmoid_cross_entropy_with_logits
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pos_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: normalize, default_value: 'false'}
  - {typename: int, name: ignore_index, default_value: '-100'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid_cross_entropy_with_logits]
    param: [x, label, pos_weight, normalize, ignore_index]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_cross_entropy_with_logits: null}
    force_backend: null
  infer_meta:
    func: SigmoidCrossEntropyWithLogitsInferMeta
    param: [x, label, pos_weight, normalize, ignore_index]
  inplace: {out: x}
  view: null
  backward: sigmoid_cross_entropy_with_logits_grad
- name: sign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sign: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: sign_grad
- name: silu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [silu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {silu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: null
  view: null
  backward: silu_grad
- name: sin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: {out: x}
  view: null
  backward: sin_grad
- name: sinh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sinh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: sinh_grad
- name: slogdet
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [slogdet]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {slogdet: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: slogdet_grad
- name: softplus
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: threshold, default_value: 20.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softplus]
    param: [x, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: softplus_grad
- name: softshrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softshrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softshrink: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: softshrink_grad
- name: softsign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softsign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {softsign: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: softsign_grad
- name: solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [solve]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {solve: null}
    force_backend: null
  infer_meta:
    func: SolveInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: solve_grad
- name: spectral_norm
  inputs:
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim, default_value: '0'}
  - {typename: int, name: power_iters, default_value: '1'}
  - {typename: float, name: eps, default_value: 1e-12f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [spectral_norm]
    param: [weight, u, v, dim, power_iters, eps]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch: {spectral_norm: null}
    force_backend: null
  infer_meta:
    func: SpectralNormInferMeta
    param: [weight, u, v, dim, power_iters, eps]
  inplace: null
  view: null
  backward: spectral_norm_grad
- name: sqrt
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sqrt, sqrt_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      sqrt:
      - [dense]
      - [dense]
      sqrt_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: sqrt_grad
- name: square
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [square, square_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      square:
      - [dense]
      - [dense]
      square_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    spmd_rule: ElementwiseUnaryInferSpmd
    param: [x]
  inplace: null
  view: null
  backward: square_grad
- name: squared_l2_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [squared_l2_norm]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {squared_l2_norm: null}
    force_backend: null
  infer_meta:
    func: SquaredL2NormInferMeta
    param: [x]
  inplace: null
  view: null
  backward: squared_l2_norm_grad
- name: squeeze
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [squeeze]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {squeeze: null}
    force_backend: null
  infer_meta:
    func: SqueezeWithXShapeInferMeta
    spmd_rule: SqueezeInferSpmd
    param: [x, axis]
  inplace: {out: x}
  view: {out: x}
  backward: squeeze_grad
- name: stack
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [stack]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {stack: null}
    force_backend: null
  infer_meta:
    func: StackInferMeta
    spmd_rule: StackInferSpmd
    param: [x, axis]
  inplace: null
  view: null
  backward: stack_grad
- name: standard_gamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [standard_gamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {standard_gamma: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: stanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale_a, default_value: 0.67f}
  - {typename: float, name: scale_b, default_value: 1.7159f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [stanh]
    param: [x, scale_a, scale_b]
    backend: null
    layout: null
    data_type: null
    dispatch: {stanh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: stanh_grad
- name: svd
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: full_matrices, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: u, optional: false, intermediate: false}
  - {typename: Tensor, name: s, optional: false, intermediate: false}
  - {typename: Tensor, name: vh, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [svd]
    param: [x, full_matrices]
    backend: null
    layout: null
    data_type: null
    dispatch: {svd: null}
    force_backend: null
  infer_meta:
    func: SvdInferMeta
    param: [x, full_matrices]
  inplace: null
  view: null
  backward: svd_grad
- name: swiglu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [swiglu]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {swiglu: null}
    force_backend: null
  infer_meta:
    func: SwiGLUInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: swiglu_grad
- name: take_along_axis
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [take_along_axis]
    param: [arr, indices, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {take_along_axis: null}
    force_backend: null
  infer_meta:
    func: TakeAlongAxisInferMeta
    param: [arr, indices, axis]
  inplace: null
  view: null
  backward: take_along_axis_grad
- name: tan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tan: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: tan_grad
- name: tanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: tanh_grad
- name: tanh_shrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh_shrink]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_shrink: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: tanh_shrink_grad
- name: temporal_shift
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: seg_num}
  - {typename: float, name: shift_ratio, default_value: 0.25f}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [temporal_shift]
    param: [x, seg_num, shift_ratio, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {temporal_shift: null}
    force_backend: null
  infer_meta:
    func: TemporalShiftInferMeta
    param: [x, seg_num, shift_ratio, data_format]
  inplace: null
  view: null
  backward: temporal_shift_grad
- name: tensor_unfold
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: int64_t, name: axis}
  - {typename: int64_t, name: size}
  - {typename: int64_t, name: step}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tensor_unfold]
    param: [input, axis, size, step]
    backend: null
    layout: null
    data_type: null
    dispatch: {tensor_unfold: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: tensor_unfold_grad
- name: thresholded_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [thresholded_relu]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {thresholded_relu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: thresholded_relu_grad
- name: top_p_sampling
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ps
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: threshold
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: seed, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: ids, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [top_p_sampling]
    param: [x, ps, threshold, seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {top_p_sampling: null}
    force_backend: null
  infer_meta:
    func: TopPSamplingInferMeta
    param: [x, ps, threshold, seed]
  inplace: null
  view: null
  backward: null
- name: topk
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: k, default_value: '1', data_type: int}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: largest, default_value: 'true'}
  - {typename: bool, name: sorted, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [topk]
    param: [x, k, axis, largest, sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {topk: null}
    force_backend: null
  infer_meta:
    func: TopKInferMeta
    param: [x, k, axis, largest, sorted]
  inplace: null
  view: null
  backward: topk_grad
- name: trace
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trace]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {trace: null}
    force_backend: null
  infer_meta:
    func: TraceInferMeta
    param: [x, offset, axis1, axis2]
  inplace: null
  view: null
  backward: trace_grad
- name: triangular_solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'true'}
  - {typename: bool, name: transpose, default_value: 'false'}
  - {typename: bool, name: unitriangular, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [triangular_solve]
    param: [x, y, upper, transpose, unitriangular]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {triangular_solve: null}
    force_backend: null
  infer_meta:
    func: TriangularSolveInferMeta
    param: [x, y, upper, transpose, unitriangular]
  inplace: null
  view: null
  backward: triangular_solve_grad
- name: trilinear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trilinear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {trilinear_interp: null}
    force_backend: null
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_format, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  inplace: null
  view: null
  backward: trilinear_interp_grad
- name: trunc
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trunc]
    param: [input]
    backend: null
    layout: null
    data_type: null
    dispatch: {trunc: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  inplace: {out: input}
  view: null
  backward: trunc_grad
- name: unbind
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: 'axis<0 ? input.dims()[input.dims().size()+axis]:input.dims()[axis]',
    optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unbind]
    param: [input, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {unbind: null}
    force_backend: null
  infer_meta:
    func: UnbindInferMeta
    param: [input, axis]
  inplace: null
  view: null
  backward: unbind_grad
- name: unfold
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unfold]
    param: [x, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {unfold: null}
    force_backend: null
  infer_meta:
    func: UnfoldInferMeta
    param: [x, kernel_sizes, strides, paddings, dilations]
  inplace: null
  view: null
  backward: unfold_grad
- name: uniform_inplace
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: min, default_value: '-1.0'}
  - {typename: float, name: max, default_value: '1.0'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: int, name: diag_num, default_value: '0'}
  - {typename: int, name: diag_step, default_value: '0'}
  - {typename: float, name: diag_val, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [uniform_inplace]
    param: [x, min, max, seed, diag_num, diag_step, diag_val]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {uniform_inplace: null}
    force_backend: null
  infer_meta:
    func: UniformRandomInplaceInferMeta
    param: [x, min, max, seed, diag_num, diag_step, diag_val]
  inplace: {out: x}
  view: null
  backward: uniform_inplace_grad
- name: unique_consecutive
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_inverse, default_value: 'false'}
  - {typename: bool, name: return_counts, default_value: 'false'}
  - {typename: 'int[]', name: axis, default_value: '{}'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: true, intermediate: false}
  - {typename: Tensor, name: counts, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unique_consecutive]
    param: [x, return_inverse, return_counts, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unique_consecutive: null}
    force_backend: null
  infer_meta:
    func: UniqueConsecutiveInferMeta
    param: [x, return_inverse, return_counts, axis, dtype]
  inplace: null
  view: null
  backward: null
- name: unpool3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: ksize}
  - {typename: 'int[]', name: strides, default_value: '{1,1,1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0,0,0}'}
  - {typename: 'int[]', name: output_size, default_value: '{0,0,0}'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unpool3d]
    param: [x, indices, ksize, strides, paddings, output_size, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unpool3d: null}
    force_backend: null
  infer_meta:
    func: Unpool3dInferMeta
    param: [x, indices, ksize, strides, paddings, output_size, data_format]
  inplace: null
  view: null
  backward: unpool3d_grad
- name: unsqueeze
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [unsqueeze]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unsqueeze: null}
    force_backend: null
  infer_meta:
    func: UnsqueezeWithXShapeInferMeta
    spmd_rule: UnsqueezeInferSpmd
    param: [x, axis]
  inplace: {out: x}
  view: {out: x}
  backward: unsqueeze_grad
- name: unstack
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  - {typename: int, name: num, default_value: '0'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: num, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unstack]
    param: [x, axis, num]
    backend: null
    layout: null
    data_type: null
    dispatch: {unstack: null}
    force_backend: null
  infer_meta:
    func: UnStackInferMeta
    param: [x, axis, num]
  inplace: null
  view: null
  backward: unstack_grad
- name: update_loss_scaling_
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: found_infinite
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: prev_loss_scaling
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: in_good_steps
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: in_bad_steps
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: int, name: incr_every_n_steps}
  - {typename: int, name: decr_every_n_nan_or_inf}
  - {typename: float, name: incr_ratio}
  - {typename: float, name: decr_ratio}
  - {typename: Scalar, name: stop_update, default_value: 'false', data_type: float}
  outputs:
  - {typename: 'Tensor[]', name: out, size: x.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: loss_scaling, optional: false, intermediate: false}
  - {typename: Tensor, name: out_good_steps, optional: false, intermediate: false}
  - {typename: Tensor, name: out_bad_steps, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [found_infinite]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [update_loss_scaling]
    param: [x, found_infinite, prev_loss_scaling, in_good_steps, in_bad_steps, incr_every_n_steps,
      decr_every_n_nan_or_inf, incr_ratio, decr_ratio, stop_update]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {update_loss_scaling: null}
    force_backend: null
  infer_meta:
    func: UpdateLossScalingInferMeta
    param: [x, found_infinite, prev_loss_scaling, in_good_steps, in_bad_steps]
  inplace: {out: x, loss_scaling: prev_loss_scaling, out_good_steps: in_good_steps,
    out_bad_steps: in_bad_steps}
  view: null
  backward: null
- name: view_dtype
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [view_dtype]
    param: [input, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {view_dtype: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: view_dtype_grad
- name: view_shape
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [view_shape]
    param: [input, dims]
    backend: null
    layout: null
    data_type: null
    dispatch: {view_shape: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: view_shape_grad
- name: viterbi_decode
  inputs:
  - typename: Tensor
    name: potentials
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: transition_params
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: include_bos_eos_tag, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: scores, optional: false, intermediate: false}
  - {typename: Tensor, name: path, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [viterbi_decode]
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [potentials]
      to_complex_flag: [false]
    dispatch: {viterbi_decode: null}
    force_backend: null
  infer_meta:
    func: ViterbiDecodeInferMeta
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
  inplace: null
  view: null
  backward: null
- name: warpctc
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: logits_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: labels_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: bool, name: norm_by_times, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: warpctcgrad, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [warpctc]
    param: [logits, label, logits_length, labels_length, blank, norm_by_times]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [logits]
      to_complex_flag: [false]
    dispatch: {warpctc: null}
    force_backend: null
  infer_meta:
    func: WarpctcInferMeta
    param: [logits, label, logits_length, labels_length, blank, norm_by_times]
  inplace: null
  view: null
  backward: warpctc_grad
- name: warprnnt
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label_lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: float, name: fastemit_lambda, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: warprnntgrad, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [warprnnt]
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {warprnnt: null}
    force_backend: null
  infer_meta:
    func: WarprnntInferMeta
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
  inplace: null
  view: null
  backward: warprnnt_grad
- name: weight_dequantize
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: algo, default_value: '"weight_only_int8"'}
  - {typename: DataType, name: out_dtype, default_value: 'DataType::FLOAT16'}
  - {typename: int, name: group_size, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [weight_dequantize]
    param: [x, scale, algo, out_dtype, group_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_dtype]
      to_complex_flag: [false]
    dispatch: {weight_dequantize: null}
    force_backend: null
  infer_meta:
    func: WeightDequantizeInferMeta
    param: [x, scale, algo, out_dtype, group_size]
  inplace: null
  view: null
  backward: null
- name: weight_only_linear
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: weight_dtype}
  - {typename: int, name: arch, default_value: '80'}
  - {typename: int, name: group_size, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [weight_only_linear]
    param: [x, weight, bias, weight_scale, weight_dtype, arch, group_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {weight_only_linear: null}
    force_backend: null
  infer_meta:
    func: WeightOnlyLinearInferMeta
    param: [x, weight, bias, weight_scale, weight_dtype, arch, group_size]
  inplace: null
  view: null
  backward: weight_only_linear_grad
- name: weight_quantize
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: algo, default_value: '"weight_only_int8"'}
  - {typename: int, name: arch, default_value: '80'}
  - {typename: int, name: group_size, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: scale, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [weight_quantize]
    param: [x, algo, arch, group_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {weight_quantize: null}
    force_backend: null
  infer_meta:
    func: WeightQuantizeInferMeta
    param: [x, algo, arch, group_size]
  inplace: null
  view: null
  backward: null
- name: weighted_sample_neighbors
  inputs:
  - typename: Tensor
    name: row
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: colptr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: edge_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_nodes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: eids
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: sample_size}
  - {typename: bool, name: return_eids}
  outputs:
  - {typename: Tensor, name: out_neighbors, optional: false, intermediate: false}
  - {typename: Tensor, name: out_count, optional: false, intermediate: false}
  - {typename: Tensor, name: out_eids, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [weighted_sample_neighbors]
    param: [row, colptr, edge_weight, input_nodes, eids, sample_size, return_eids]
    backend: null
    layout: null
    data_type: null
    dispatch: {weighted_sample_neighbors: null}
    force_backend: null
  infer_meta:
    func: WeightedSampleNeighborsInferMeta
    param: [row, colptr, edge_weight, input_nodes, eids, sample_size, return_eids]
  inplace: null
  view: null
  backward: null
- name: where
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [where]
    param: [condition, x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {where: null}
    force_backend: null
  infer_meta:
    func: WhereInferMeta
    spmd_rule: WhereInferSpmd
    param: [condition, x, y]
  inplace: {out: x}
  view: null
  backward: where_grad
- name: yolo_box
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: img_size
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: anchors, default_value: '{}'}
  - {typename: int, name: class_num, default_value: '1'}
  - {typename: float, name: conf_thresh, default_value: '0.01'}
  - {typename: int, name: downsample_ratio, default_value: '32'}
  - {typename: bool, name: clip_bbox, default_value: 'true'}
  - {typename: float, name: scale_x_y, default_value: '1.0'}
  - {typename: bool, name: iou_aware, default_value: 'false'}
  - {typename: float, name: iou_aware_factor, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: boxes, optional: false, intermediate: false}
  - {typename: Tensor, name: scores, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [yolo_box]
    param: [x, img_size, anchors, class_num, conf_thresh, downsample_ratio, clip_bbox,
      scale_x_y, iou_aware, iou_aware_factor]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_box: null}
    force_backend: null
  infer_meta:
    func: YoloBoxInferMeta
    param: [x, img_size, anchors, class_num, conf_thresh, downsample_ratio, clip_bbox,
      scale_x_y, iou_aware, iou_aware_factor]
  inplace: null
  view: null
  backward: null
- name: yolo_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_score
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: anchors, default_value: '{}'}
  - {typename: 'int[]', name: anchor_mask, default_value: '{}'}
  - {typename: int, name: class_num, default_value: '1'}
  - {typename: float, name: ignore_thresh, default_value: '0.7'}
  - {typename: int, name: downsample_ratio, default_value: '32'}
  - {typename: bool, name: use_label_smooth, default_value: 'true'}
  - {typename: float, name: scale_x_y, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: objectness_mask, optional: false, intermediate: true}
  - {typename: Tensor, name: gt_match_mask, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [yolo_loss]
    param: [x, gt_box, gt_label, gt_score, anchors, anchor_mask, class_num, ignore_thresh,
      downsample_ratio, use_label_smooth, scale_x_y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_loss: null}
    force_backend: null
  infer_meta:
    func: YoloLossInferMeta
    param: [x, gt_box, gt_label, gt_score, anchors, anchor_mask, class_num, ignore_thresh,
      downsample_ratio, use_label_smooth, scale_x_y]
  inplace: null
  view: null
  backward: yolo_loss_grad

######################################
#
#paddle/fluid/operators/generator/parsed_ops/fused_ops.parsed.yaml
#
#####################################

- name: add_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_act_xpu]
    param: [x, x_max, y, y_max, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {add_act_xpu: null}
    force_backend: null
  infer_meta:
    func: AddActXPUInferMeta
    param: [x, x_max, y, y_max, act_type]
  inplace: null
  view: null
  backward: null
- name: add_layernorm_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_layernorm_xpu]
    param: [x, y, scale, bias, begin_norm_axis, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {add_layernorm_xpu: null}
    force_backend: null
  infer_meta:
    func: AddLayernormXPUInferMeta
    param: [x, y, scale, bias, begin_norm_axis, epsilon]
  inplace: null
  view: null
  backward: null
- name: addcmul_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [addcmul_xpu]
    param: [x, y, w]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {addcmul_xpu: null}
    force_backend: null
  infer_meta:
    func: AddCMulXPUInferMeta
    param: [x, y, w]
  inplace: null
  view: null
  backward: null
- name: block_multihead_attention_
  inputs:
  - typename: Tensor
    name: qkv
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key_cache
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value_cache
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_encoder
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_decoder
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_this_time
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: padding_offsets
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cum_offsets
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: block_tables
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pre_key_cache
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pre_value_cache
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rope_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: tgt_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_k_quant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_v_quant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_k_dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_v_dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_out_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_shift
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_smooth
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: max_seq_len}
  - {typename: int, name: block_size}
  - {typename: bool, name: use_neox_style}
  - {typename: bool, name: dynamic_cachekv_quant, default_value: 'false'}
  - {typename: int, name: quant_round_type, default_value: '1'}
  - {typename: float, name: quant_max_bound, default_value: '127.0'}
  - {typename: float, name: quant_min_bound, default_value: '-127.0'}
  - {typename: float, name: out_scale, default_value: '-1'}
  - {typename: str, name: compute_dtype, default_value: '"default"'}
  outputs:
  - {typename: Tensor, name: fmha_out, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_out, optional: false, intermediate: false}
  - {typename: Tensor, name: key_cache_out, optional: false, intermediate: false}
  - {typename: Tensor, name: value_cache_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [block_multihead_attention]
    param: [qkv, key_cache, value_cache, seq_lens_encoder, seq_lens_decoder, seq_lens_this_time,
      padding_offsets, cum_offsets, cu_seqlens_q, cu_seqlens_k, block_tables, pre_key_cache,
      pre_value_cache, rope_emb, mask, tgt_mask, cache_k_quant_scales, cache_v_quant_scales,
      cache_k_dequant_scales, cache_v_dequant_scales, qkv_out_scale, qkv_bias, out_shift,
      out_smooth, max_seq_len, block_size, use_neox_style, dynamic_cachekv_quant,
      quant_round_type, quant_max_bound, quant_min_bound, out_scale, compute_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [qkv]
      to_complex_flag: [false]
    dispatch: {block_multihead_attention: null}
    force_backend: null
  infer_meta:
    func: BlockMultiheadAttentionInferMeta
    param: [qkv, key_cache, value_cache, seq_lens_encoder, seq_lens_decoder, seq_lens_this_time,
      padding_offsets, cum_offsets, cu_seqlens_q, cu_seqlens_k, block_tables, pre_key_cache,
      pre_value_cache, rope_emb, mask, tgt_mask, cache_k_quant_scales, cache_v_quant_scales,
      cache_k_dequant_scales, cache_v_dequant_scales, qkv_out_scale, qkv_bias, out_shift,
      out_smooth, max_seq_len, block_size, use_neox_style, dynamic_cachekv_quant,
      quant_round_type, quant_max_bound, quant_min_bound, out_scale, compute_dtype]
  inplace: {qkv_out: qkv, key_cache_out: key_cache, value_cache_out: value_cache}
  view: null
  backward: null
- name: bn_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: data_format}
  - {typename: int, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bn_act_xpu]
    param: [x, mean, variance, scale, bias, momentum, epsilon, data_format, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bn_act_xpu: null}
    force_backend: null
  infer_meta:
    func: BNActXPUInferMeta
    param: [x, mean, variance, scale, bias, momentum, epsilon, data_format, act_type]
  inplace: null
  view: null
  backward: null
- name: conv1d_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: dilations}
  - {typename: int, name: strides}
  - {typename: int, name: groups}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv1d_xpu]
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, paddings, padding_algorithm,
      dilations, strides, groups, act_type, act_param]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv1d_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv1dXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, paddings, padding_algorithm,
      dilations, strides, groups, act_type, act_param]
  inplace: null
  view: null
  backward: null
- name: conv2d_transpose_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: output_padding}
  - {typename: IntArray, name: output_size, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  - {typename: bool, name: has_bias}
  - {typename: bool, name: with_act}
  - {typename: str, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_transpose_xpu]
    param: [x, x_max, filter, filter_max, bias, strides, paddings, output_padding,
      output_size, padding_algorithm, groups, dilations, data_format, has_bias, with_act,
      act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv2d_transpose_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv2dTransposeXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, strides, paddings, output_padding,
      output_size, padding_algorithm, groups, dilations, data_format, has_bias, with_act,
      act_type]
  inplace: null
  view: null
  backward: null
- name: conv2d_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_max_in
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_xpu]
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, scale_max, out_max_in,
      paddings, dilations, strides, padding_algorithm, groups, act_type, act_param,
      out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv2d_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv2dXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, scale_max, out_max_in,
      paddings, dilations, strides, padding_algorithm, groups, act_type, act_param,
      out_dtype]
  inplace: null
  view: null
  backward: null
- name: dequantize_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: out_dtype}
  - {typename: float, name: scale, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dequantize_xpu]
    param: [x, out_dtype, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dequantize_xpu: null}
    force_backend: null
  infer_meta:
    func: DeQuantizeXPUInferMeta
    param: [x, out_dtype, scale]
  inplace: null
  view: null
  backward: null
- name: embedding_with_eltwise_add_xpu
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: tables
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: padding_idx}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: seq_lod, optional: true, intermediate: false}
  - {typename: Tensor, name: max_seq_len, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [embedding_with_eltwise_add_xpu]
    param: [ids, tables, mask, padding_idx]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [tables]
      to_complex_flag: [false]
    dispatch: {embedding_with_eltwise_add_xpu: null}
    force_backend: null
  infer_meta:
    func: EmbeddingWithEltwiseAddXPUInferMeta
    param: [ids, tables, mask]
  inplace: null
  view: null
  backward: null
- name: fast_layernorm_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fast_layernorm_xpu]
    param: [x, scale, bias, begin_norm_axis, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fast_layernorm_xpu: null}
    force_backend: null
  infer_meta:
    func: FastLayernormXPUInferMeta
    param: [x, scale, bias, begin_norm_axis, epsilon]
  inplace: null
  view: null
  backward: null
- name: fast_where_xpu
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fast_where_xpu]
    param: [condition, x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fast_where_xpu: null}
    force_backend: null
  infer_meta:
    func: FastWhereXPUInferMeta
    param: [condition, x, y]
  inplace: null
  view: null
  backward: null
- name: fc
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: in_num_col_dims, default_value: '1'}
  - {typename: str, name: activation_type, default_value: '""'}
  - {typename: bool, name: padding_weights, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fc]
    param: [input, w, bias, in_num_col_dims, activation_type, padding_weights]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {fc: null}
    force_backend: null
  infer_meta:
    func: FCInferMeta
    param: [input, w, bias, in_num_col_dims, activation_type, padding_weights]
  inplace: null
  view: null
  backward: null
- name: fc_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_max_in
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: in_num_col_dims}
  - {typename: bool, name: transpose_x}
  - {typename: float, name: alpha}
  - {typename: float, name: beta}
  - {typename: int, name: act_type}
  - {typename: float, name: act_alpha}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fc_xpu]
    param: [x, x_max, w, w_max, bias, scale_max, out_max_in, in_num_col_dims, transpose_x,
      alpha, beta, act_type, act_alpha, out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fc_xpu: null}
    force_backend: null
  infer_meta:
    func: FcXPUInferMeta
    param: [x, x_max, w, w_max, bias, scale_max, out_max_in, in_num_col_dims, transpose_x,
      alpha, beta, act_type, act_alpha, out_dtype]
  inplace: null
  view: null
  backward: null
- name: fused_bias_act
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: shift
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: smooth
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: act_method, default_value: '"gelu"'}
  - {typename: str, name: compute_dtype, default_value: '"default"'}
  - {typename: float, name: quant_scale, default_value: '-1'}
  - {typename: int, name: quant_round_type, default_value: '1'}
  - {typename: float, name: quant_max_bound, default_value: '127.0'}
  - {typename: float, name: quant_min_bound, default_value: '-127.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_act]
    param: [x, bias, dequant_scales, shift, smooth, act_method, compute_dtype, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_act: null}
    force_backend: null
  infer_meta:
    func: FusedBiasActInferMeta
    param: [x, bias, dequant_scales, shift, smooth, act_method, compute_dtype, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
  inplace: null
  view: null
  backward: null
- name: fused_bias_dropout_residual_layer_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout_rate, default_value: 0.5f}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: bool, name: dropout_fix_seed, default_value: 'true'}
  - {typename: int, name: dropout_seed, default_value: 'true'}
  - {typename: str, name: dropout_implementation, default_value: '"downgrade_in_infer"'}
  - {typename: float, name: ln_epsilon, default_value: 1e-5}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_dropout_residual_out, optional: false, intermediate: true}
  - {typename: Tensor, name: dropout_mask_out, optional: false, intermediate: true}
  - {typename: Tensor, name: ln_mean, optional: false, intermediate: true}
  - {typename: Tensor, name: ln_variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_dropout_residual_layer_norm]
    param: [x, residual, bias, ln_scale, ln_bias, dropout_rate, is_test, dropout_fix_seed,
      dropout_seed, dropout_implementation, ln_epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_dropout_residual_layer_norm: null}
    force_backend: null
  infer_meta:
    func: FusedBiasDropoutResidualLnInferMeta
    param: [x, residual, bias, ln_scale, ln_bias, dropout_rate, is_test, dropout_fix_seed,
      dropout_seed, dropout_implementation, ln_epsilon]
  inplace: null
  view: null
  backward: fused_bias_dropout_residual_layer_norm_grad
- name: fused_bias_residual_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: float, name: residual_alpha}
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: quant_scale}
  - {typename: int, name: quant_round_type}
  - {typename: float, name: quant_max_bound}
  - {typename: float, name: quant_min_bound}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual_out, optional: true, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: false}
  - {typename: Tensor, name: variance, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_residual_layernorm]
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_residual_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedLayerNormInferMeta
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
  inplace: null
  view: null
  backward: null
- name: fused_conv2d_add_act
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual_data
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: str, name: activation, default_value: '"relu"'}
  - {typename: 'int[]', name: split_channels, default_value: '{}'}
  - {typename: bool, name: exhaustive_search, default_value: 'false'}
  - {typename: int, name: workspace_size_MB, default_value: '32'}
  - {typename: float, name: fuse_alpha, default_value: 0.0f}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: outputs, size: split_channels.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_conv2d_add_act]
    param: [input, filter, bias, residual_data, strides, paddings, padding_algorithm,
      dilations, groups, data_format, activation, split_channels, exhaustive_search,
      workspace_size_MB, fuse_alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {fused_conv2d_add_act: null}
    force_backend: null
  infer_meta:
    func: FusedConv2dAddActInferMeta
    param: [input, filter, bias, residual_data, strides, paddings, padding_algorithm,
      dilations, groups, data_format, activation, split_channels]
  inplace: null
  view: null
  backward: null
- name: fused_dconv_drelu_dbn
  inputs:
  - typename: Tensor
    name: grad_output
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_output_add
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_eqscale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_eqbias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: conv_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_inv_std
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_gamma
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_beta
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_mean
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_inv_std
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_gamma
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_beta
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  - {typename: bool, name: fuse_shortcut}
  - {typename: bool, name: fuse_dual}
  - {typename: bool, name: fuse_add}
  - {typename: bool, name: exhaustive_search}
  outputs:
  - {typename: Tensor, name: grad_weight, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_input, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_gamma, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_beta, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn2_input, optional: true, intermediate: false}
  - {typename: Tensor, name: grad_bn2_gamma, optional: true, intermediate: false}
  - {typename: Tensor, name: grad_bn2_beta, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dconv_drelu_dbn]
    param: [grad_output, weight, grad_output_add, residual_input, bn1_eqscale, bn1_eqbias,
      conv_input, bn1_mean, bn1_inv_std, bn1_gamma, bn1_beta, bn1_input, bn2_mean,
      bn2_inv_std, bn2_gamma, bn2_beta, bn2_input, paddings, dilations, strides, padding_algorithm,
      groups, data_format, fuse_shortcut, fuse_dual, fuse_add, exhaustive_search]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [grad_output]
      to_complex_flag: [false]
    dispatch: {fused_dconv_drelu_dbn: null}
    force_backend: null
  infer_meta:
    func: FusedDconvDreluDbnInferMeta
    param: [grad_output, weight, grad_output_add, residual_input, bn1_eqscale, bn1_eqbias,
      conv_input, bn1_mean, bn1_inv_std, bn1_gamma, bn1_beta, bn1_input, bn2_mean,
      bn2_inv_std, bn2_gamma, bn2_beta, bn2_input, paddings, dilations, strides, padding_algorithm,
      groups, data_format, fuse_shortcut, fuse_dual, fuse_add, exhaustive_search]
  inplace: null
  view: null
  backward: null
- name: fused_dot_product_attention
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scaling_factor}
  - {typename: float, name: dropout_probability}
  - {typename: bool, name: is_training, default_value: 'false'}
  - {typename: bool, name: is_causal_masking, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_out, optional: false, intermediate: false}
  - {typename: Tensor, name: rng_state, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dot_product_attention]
    param: [q, k, v, mask, scaling_factor, dropout_probability, is_training, is_causal_masking]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {fused_dot_product_attention: null}
    force_backend: null
  infer_meta:
    func: FusedDotProductAttentionInferMeta
    param: [q, k, v]
  inplace: null
  view: null
  backward: fused_dot_product_attention_grad
- name: fused_dropout_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_tensor
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: p, data_type: float}
  - {typename: bool, name: is_test}
  - {typename: str, name: mode}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: bool, name: fix_seed, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dropout_add]
    param: [x, y, seed_tensor, p, is_test, mode, seed, fix_seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_dropout_add: null}
    force_backend: null
  infer_meta:
    func: FusedDropoutAddInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: fused_dropout_add_grad
- name: fused_embedding_eltwise_layernorm
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: embs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 0.00001f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_embedding_eltwise_layernorm]
    param: [ids, embs, bias, scale, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [embs]
      to_complex_flag: [false]
    dispatch: {fused_embedding_eltwise_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedEmbeddingEltWiseLayerNormInferMeta
    param: [ids, embs, bias, scale, epsilon]
  inplace: null
  view: null
  backward: null
- name: fused_fc_elementwise_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias0
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias1
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: x_num_col_dims, default_value: '1'}
  - {typename: str, name: activation_type, default_value: '""'}
  - {typename: float, name: epsilon, default_value: 0.00001f}
  - {typename: int, name: begin_norm_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: true, intermediate: false}
  - {typename: Tensor, name: variance, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_fc_elementwise_layernorm]
    param: [x, w, y, bias0, scale, bias1, x_num_col_dims, activation_type, epsilon,
      begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_fc_elementwise_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedFCElementwiseLayerNormInferMeta
    param: [x, w, y, bias0, scale, bias1, x_num_col_dims, activation_type, epsilon,
      begin_norm_axis]
  inplace: null
  view: null
  backward: null
- name: fused_linear_param_grad_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dout
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dweight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dbias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'true'}
  - {typename: bool, name: has_bias, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: dweight_out, optional: false, intermediate: false}
  - {typename: Tensor, name: dbias_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_linear_param_grad_add]
    param: [x, dout, dweight, dbias, multi_precision, has_bias]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dout]
      to_complex_flag: [false]
    dispatch: {fused_linear_param_grad_add: null}
    force_backend: null
  infer_meta:
    func: FusedLinearParamGradAddInferMeta
    param: [x, dout, dweight, dbias, multi_precision, has_bias]
  inplace: null
  view: null
  backward: null
- name: fused_multi_transformer_int8_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: cache_kv
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: pre_caches
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rotary_pos_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: time_step
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lengths
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gather_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_buffer
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pre_layer_norm}
  - {typename: int, name: rotary_emb_dims}
  - {typename: float, name: epsilon}
  - {typename: float, name: dropout_rate}
  - {typename: bool, name: is_test}
  - {typename: str, name: dropout_implementation}
  - {typename: str, name: act_method}
  - {typename: bool, name: trans_qkvw}
  - {typename: int, name: ring_id}
  - {typename: int, name: gather_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: cache_kv_out, size: out_linear_w.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_multi_transformer_int8_xpu]
    param: [x, ln_scale, ln_bias, qkv_in_max, qkvw, qkv_bias, qkv_scales, out_linear_in_max,
      out_linear_w, out_linear_bias, out_linear_scales, ffn_ln_scale, ffn_ln_bias,
      ffn1_in_max, ffn1_weight, ffn1_bias, ffn1_scales, ffn2_in_max, ffn2_weight,
      ffn2_bias, ffn2_scales, cache_kv, pre_caches, rotary_pos_emb, time_step, seq_lengths,
      src_mask, gather_index, max_buffer, pre_layer_norm, rotary_emb_dims, epsilon,
      dropout_rate, is_test, dropout_implementation, act_method, trans_qkvw, ring_id,
      gather_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_multi_transformer_int8_xpu: null}
    force_backend: null
  infer_meta:
    func: FusedMultiTransformerInt8XpuInferMeta
    param: [x, ln_scale, ln_bias, qkv_in_max, qkvw, qkv_bias, qkv_scales, out_linear_in_max,
      out_linear_w, out_linear_bias, out_linear_scales, ffn_ln_scale, ffn_ln_bias,
      ffn1_in_max, ffn1_weight, ffn1_bias, ffn1_scales, ffn2_in_max, ffn2_weight,
      ffn2_bias, ffn2_scales, cache_kv, pre_caches, rotary_pos_emb, time_step, seq_lengths,
      src_mask, gather_index, max_buffer, pre_layer_norm, rotary_emb_dims, epsilon,
      dropout_rate, is_test, dropout_implementation, act_method, trans_qkvw, ring_id,
      gather_axis]
  inplace: null
  view: null
  backward: null
- name: fused_multi_transformer_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_wmax
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: cache_kv
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: pre_caches
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rotary_pos_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: time_step
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lengths
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gather_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_buffer
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pre_layer_norm}
  - {typename: int, name: rotary_emb_dims}
  - {typename: float, name: epsilon}
  - {typename: float, name: dropout_rate}
  - {typename: bool, name: is_test}
  - {typename: str, name: dropout_implementation}
  - {typename: str, name: act_method}
  - {typename: bool, name: trans_qkvw}
  - {typename: int, name: ring_id}
  - {typename: int, name: gather_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: cache_kv_out, size: out_linear_w.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_multi_transformer_xpu]
    param: [x, ln_scale, ln_bias, qkvw, qkvw_max, qkv_bias, out_linear_w, out_linear_wmax,
      out_linear_bias, ffn_ln_scale, ffn_ln_bias, ffn1_weight, ffn1_weight_max, ffn1_bias,
      ffn2_weight, ffn2_weight_max, ffn2_bias, cache_kv, pre_caches, rotary_pos_emb,
      time_step, seq_lengths, src_mask, gather_index, max_buffer, pre_layer_norm,
      rotary_emb_dims, epsilon, dropout_rate, is_test, dropout_implementation, act_method,
      trans_qkvw, ring_id, gather_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_multi_transformer_xpu: null}
    force_backend: null
  infer_meta:
    func: FusedMultiTransformerXpuInferMeta
    param: [x, ln_scale, ln_bias, qkvw, qkvw_max, qkv_bias, out_linear_w, out_linear_wmax,
      out_linear_bias, ffn_ln_scale, ffn_ln_bias, ffn1_weight, ffn1_weight_max, ffn1_bias,
      ffn2_weight, ffn2_weight_max, ffn2_bias, cache_kv, pre_caches, rotary_pos_emb,
      time_step, seq_lengths, src_mask, gather_index, max_buffer, pre_layer_norm,
      rotary_emb_dims, epsilon, dropout_rate, is_test, dropout_implementation, act_method,
      trans_qkvw, ring_id, gather_axis]
  inplace: null
  view: null
  backward: null
- name: fused_rotary_position_embedding
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: sin
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cos
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: position_ids
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: use_neox_rotary_style, default_value: 'true'}
  - {typename: bool, name: time_major, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out_q, optional: false, intermediate: false}
  - {typename: Tensor, name: out_k, optional: true, intermediate: false}
  - {typename: Tensor, name: out_v, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_rotary_position_embedding]
    param: [q, k, v, sin, cos, position_ids, use_neox_rotary_style, time_major]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {fused_rotary_position_embedding: null}
    force_backend: null
  infer_meta:
    func: FusedRopeInferMeta
    spmd_rule: FusedRopeInferSpmd
    param: [q, k, v, sin, cos, position_ids, use_neox_rotary_style, time_major]
  inplace: null
  view: null
  backward: fused_rotary_position_embedding_grad
- name: fused_scale_bias_add_relu
  inputs:
  - typename: Tensor
    name: x1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale2
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias2
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: fuse_dual}
  - {typename: bool, name: exhaustive_search}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_scale_bias_add_relu]
    param: [x1, scale1, bias1, x2, scale2, bias2, fuse_dual, exhaustive_search]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x1]
      to_complex_flag: [false]
    dispatch: {fused_scale_bias_add_relu: null}
    force_backend: null
  infer_meta:
    func: FusedScaleBiasAddReluInferMeta
    param: [x1, scale1, bias1, x2, scale2, bias2, fuse_dual, exhaustive_search]
  inplace: null
  view: null
  backward: null
- name: fused_scale_bias_relu_conv_bn
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_running_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_running_var
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: bool, name: fuse_prologue}
  - {typename: bool, name: exhaustive_search}
  - {typename: int64_t, name: accumulation_count, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_running_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: out_running_var, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_var, optional: false, intermediate: false}
  - {typename: Tensor, name: eq_scale, optional: false, intermediate: false}
  - {typename: Tensor, name: eq_bias, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_scale_bias_relu_conv_bn]
    param: [x, w, scale, bias, bn_scale, bn_bias, input_running_mean, input_running_var,
      paddings, dilations, strides, padding_algorithm, groups, data_format, momentum,
      epsilon, fuse_prologue, exhaustive_search, accumulation_count]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_scale_bias_relu_conv_bn: null}
    force_backend: null
  infer_meta:
    func: FusedScaleBiasReluConvBnInferMeta
    param: [x, w, scale, bias, bn_scale, bn_bias, input_running_mean, input_running_var,
      paddings, dilations, strides, padding_algorithm, groups, data_format, momentum,
      epsilon, fuse_prologue, exhaustive_search, accumulation_count]
  inplace: null
  view: null
  backward: null
- name: fusion_gru
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: h0
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_h
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: activation, default_value: '"tanh"'}
  - {typename: str, name: gate_activation, default_value: '"sigmoid"'}
  - {typename: bool, name: is_reverse, default_value: 'false'}
  - {typename: bool, name: use_seq, default_value: 'true'}
  - {typename: bool, name: origin_mode, default_value: 'false'}
  - {typename: bool, name: force_fp32_output, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: reordered_h0, optional: false, intermediate: true}
  - {typename: Tensor, name: xx, optional: false, intermediate: true}
  - {typename: Tensor, name: batched_input, optional: false, intermediate: true}
  - {typename: Tensor, name: batched_out, optional: false, intermediate: true}
  - {typename: Tensor, name: hidden, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_gru]
    param: [x, h0, weight_x, weight_h, bias, activation, gate_activation, is_reverse,
      use_seq, origin_mode, force_fp32_output]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_gru: null}
    force_backend: null
  infer_meta:
    func: FusionGRUInferMeta
    param: [x, h0, weight_x, weight_h, bias, activation, gate_activation, is_reverse,
      use_seq, origin_mode, force_fp32_output]
  inplace: null
  view: null
  backward: null
- name: fusion_repeated_fc_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: relu_out, size: w.size()-1, optional: false, intermediate: true}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_repeated_fc_relu]
    param: [x, w, bias]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_repeated_fc_relu: null}
    force_backend: null
  infer_meta:
    func: FusionRepeatedFCReluInferMeta
    param: [x, w, bias]
  inplace: null
  view: null
  backward: null
- name: fusion_seqconv_eltadd_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: context_length}
  - {typename: int, name: context_start, default_value: '0'}
  - {typename: int, name: context_stride, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: col_mat, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_seqconv_eltadd_relu]
    param: [x, filter, bias, context_length, context_start, context_stride]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_seqconv_eltadd_relu: null}
    force_backend: null
  infer_meta:
    func: FusionSeqConvEltAddReluInferMeta
    param: [x, filter, bias, context_length, context_start, context_stride]
  inplace: null
  view: null
  backward: null
- name: fusion_seqexpand_concat_fc
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fc_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fc_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: fc_activation, default_value: '"identity"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: fc_out, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_seqexpand_concat_fc]
    param: [x, fc_weight, fc_bias, fc_activation]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_seqexpand_concat_fc: null}
    force_backend: null
  infer_meta:
    func: FusionSeqExpandConcatFCInferMeta
    param: [x, fc_weight, fc_bias, fc_activation]
  inplace: null
  view: null
  backward: null
- name: fusion_squared_mat_sub
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scalar, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: squared_x, optional: false, intermediate: true}
  - {typename: Tensor, name: squared_y, optional: false, intermediate: true}
  - {typename: Tensor, name: squared_xy, optional: false, intermediate: true}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_squared_mat_sub]
    param: [x, y, scalar]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_squared_mat_sub: null}
    force_backend: null
  infer_meta:
    func: FusionSquaredMatSubInferMeta
    param: [x, y, scalar]
  inplace: null
  view: null
  backward: null
- name: fusion_transpose_flatten_concat
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: trans_axis}
  - {typename: int, name: flatten_axis}
  - {typename: int, name: concat_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_transpose_flatten_concat]
    param: [x, trans_axis, flatten_axis, concat_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_transpose_flatten_concat: null}
    force_backend: null
  infer_meta:
    func: FusionTransposeFlattenConcatInferMeta
    param: [x, trans_axis, flatten_axis, concat_axis]
  inplace: null
  view: null
  backward: null
- name: generate_sequence_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [generate_sequence_xpu]
    param: [x, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {generate_sequence_xpu: null}
    force_backend: null
  infer_meta:
    func: GenerateSequenceXPUInferMeta
    param: [x, dtype]
  inplace: null
  view: null
  backward: null
- name: layer_norm_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [layer_norm_act_xpu]
    param: [x, scale, bias, begin_norm_axis, epsilon, act_type, act_param]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {layer_norm_act_xpu: null}
    force_backend: null
  infer_meta:
    func: LayerNormActXPUInferMeta
    param: [x, scale, bias, begin_norm_axis, epsilon, act_type, act_param]
  inplace: null
  view: null
  backward: null
- name: max_pool2d_v2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_idx, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool2d_v2]
    param: [x, kernel_size, strides, paddings, data_format, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool2d_v2: null}
    force_backend: null
  infer_meta:
    func: MaxPoolV2InferMeta
    param: [x, kernel_size, strides, paddings, data_format, global_pooling, adaptive]
  inplace: null
  view: null
  backward: max_pool2d_v2_grad
- name: multi_encoder_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_input_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: smooth_scale_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lod
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_seq_len
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: layer_num}
  - {typename: bool, name: norm_before}
  - {typename: int, name: hidden_dim}
  - {typename: int, name: head_num}
  - {typename: int, name: size_per_head}
  - {typename: int, name: ffn_hidden_dim_scale}
  - {typename: int, name: act_type}
  - {typename: int, name: relative_type}
  - {typename: int, name: slice_idx}
  - {typename: bool, name: is_per_channel}
  - {typename: 'float[]', name: softmax_max_value}
  - {typename: 'str[]', name: quant_types}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: x_fp16, optional: true, intermediate: false}
  - {typename: Tensor, name: out_fp16, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multi_encoder_xpu]
    param: [x, fc_input_max, fc_weight, fc_weight_max, fc_bias, ln_scale, ln_bias,
      smooth_scale_weight, mask, seq_lod, max_seq_len, layer_num, norm_before, hidden_dim,
      head_num, size_per_head, ffn_hidden_dim_scale, act_type, relative_type, slice_idx,
      is_per_channel, softmax_max_value, quant_types]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {multi_encoder_xpu: null}
    force_backend: null
  infer_meta:
    func: MultiEncoderXPUInferMeta
    param: [x, fc_input_max, fc_weight, fc_weight_max, fc_bias, ln_scale, ln_bias,
      smooth_scale_weight, mask, seq_lod, max_seq_len, layer_num, norm_before, hidden_dim,
      head_num, size_per_head, ffn_hidden_dim_scale, act_type, relative_type, slice_idx,
      is_per_channel, softmax_max_value, quant_types]
  inplace: null
  view: null
  backward: null
- name: multihead_matmul
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias_qk
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: transpose_q, default_value: 'false'}
  - {typename: bool, name: transpose_k, default_value: 'true'}
  - {typename: bool, name: transpose_v, default_value: 'false'}
  - {typename: float, name: alpha, default_value: 1.0f}
  - {typename: int, name: head_number, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multihead_matmul]
    param: [input, w, bias, bias_qk, transpose_q, transpose_k, transpose_v, alpha,
      head_number]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {multihead_matmul: null}
    force_backend: null
  infer_meta:
    func: MultiheadMatmulInferMeta
    param: [input, w, bias, bias_qk, transpose_q, transpose_k, transpose_v, alpha,
      head_number]
  inplace: null
  view: null
  backward: null
- name: qkv_attention_xpu
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: q_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  - {typename: int, name: head_num}
  - {typename: int, name: head_dim}
  - {typename: bool, name: qkv_fc_fusion}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: qkv, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [qkv_attention_xpu]
    param: [q, k, v, q_max, k_max, v_max, alpha, head_num, head_dim, qkv_fc_fusion,
      out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {qkv_attention_xpu: null}
    force_backend: null
  infer_meta:
    func: QKVAttentionXPUInferMeta
    param: [q, k, v, q_max, k_max, v_max, alpha, head_num, head_dim, qkv_fc_fusion,
      out_dtype]
  inplace: null
  view: null
  backward: null
- name: quantize_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: out_dtype}
  - {typename: float, name: scale, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [quantize_xpu]
    param: [x, out_dtype, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {quantize_xpu: null}
    force_backend: null
  infer_meta:
    func: QuantizeXPUInferMeta
    param: [x, out_dtype, scale]
  inplace: null
  view: null
  backward: null
- name: self_dp_attention
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: 1.0f}
  - {typename: int, name: head_number, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [self_dp_attention]
    param: [x, alpha, head_number]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {self_dp_attention: null}
    force_backend: null
  infer_meta:
    func: SelfDPAttenInferMeta
    param: [x, alpha, head_number]
  inplace: null
  view: null
  backward: null
- name: sine_pos_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sine_pos_xpu]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {sine_pos_xpu: null}
    force_backend: null
  infer_meta:
    func: SinePosXPUInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: skip_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: int, name: begin_norm_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [skip_layernorm]
    param: [x, y, scale, bias, epsilon, begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {skip_layernorm: null}
    force_backend: null
  infer_meta:
    func: SkipLayerNormInferMeta
    param: [x, y, scale, bias, epsilon, begin_norm_axis]
  inplace: null
  view: null
  backward: null
- name: squeeze_excitation_block
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: act_type}
  - {typename: 'float[]', name: act_param}
  - {typename: 'int[]', name: filter_dims}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [squeeze_excitation_block]
    param: [x, filter, filter_max, bias, branch, act_type, act_param, filter_dims]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {squeeze_excitation_block: null}
    force_backend: null
  infer_meta:
    func: SqueezeExcitationInferMeta
    param: [x, filter, filter_max, bias, branch, act_type, act_param, filter_dims]
  inplace: null
  view: null
  backward: null
- name: variable_length_memory_efficient_attention
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: kv_seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale}
  - {typename: bool, name: causal}
  - {typename: int, name: pre_cache_length}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [variable_length_memory_efficient_attention]
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal, pre_cache_length]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [query]
      to_complex_flag: [false]
    dispatch: {variable_length_memory_efficient_attention: null}
    force_backend: null
  infer_meta:
    func: VariableLengthMemoryEfficientAttentionInferMeta
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal, pre_cache_length]
  inplace: null
  view: null
  backward: null
- name: yolo_box_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stride
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: anchor_grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: offset}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [yolo_box_xpu]
    param: [x, x_max, grid, stride, anchor_grid, offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_box_xpu: null}
    force_backend: null
  infer_meta:
    func: YoloBoxXPUInferMeta
    param: [x, x_max, grid, stride, anchor_grid, offset]
  inplace: null
  view: null
  backward: null

######################################
#
#
#/home/aistudio/fix_op/Paddle/paddle/fluid/pir/dialect/operator/ir/generated/ops.parsed.yaml
#
########################################

- name: adadelta_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: avg_squared_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: avg_squared_update
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: rho}
  - {typename: float, name: epsilon}
  - {typename: bool, name: multi_precision}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: inf_norm_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [adadelta]
    param: [param, grad, avg_squared_grad, avg_squared_update, learning_rate, master_param,
      rho, epsilon, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {adadelta: null}
    force_backend: null
  infer_meta:
    func: AdadeltaInferMeta
    param: [param, grad, avg_squared_grad, avg_squared_update, learning_rate, master_param,
      rho, epsilon, multi_precision]
  inplace: {param_out: param, moment_out: avg_squared_grad, inf_norm_out: avg_squared_update,
    master_param_out: master_param}
  view: null
  backward: null
- name: add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [add]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {add: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: add_grad
- name: add_n
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: add_n_impl, args: inputs}
  backward: add_n_grad
- name: add_n_
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_n]
    param: [inputs]
    backend: null
    layout: null
    data_type: null
    dispatch: {add_n: null}
    force_backend: null
  infer_meta:
    func: AddNInferMeta
    param: [inputs]
  inplace: null
  view: null
  backward: null
- name: add_n_with_kernel
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_n]
    param: [inputs]
    backend: null
    layout: null
    data_type: null
    dispatch: {add_n: null}
    force_backend: null
  infer_meta:
    func: AddNInferMeta
    param: [inputs]
  inplace: null
  view: null
  backward: null
- name: all
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [all]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {all: null}
    force_backend: null
  infer_meta:
    func: ReduceInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: null
- name: amax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [amax]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {amax: null}
    force_backend: null
  infer_meta:
    func: ReduceInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: amax_grad
- name: amin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [amin]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {amin: null}
    force_backend: null
  infer_meta:
    func: ReduceInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: amin_grad
- name: any
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [any]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {any: null}
    force_backend: null
  infer_meta:
    func: ReduceInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: null
- name: assign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [assign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {assign: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: assign_grad
- name: assign_out_
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: output
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [assign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {assign: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: output}
  view: null
  backward: assign_out__grad
- name: assign_value
  inputs: []
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: DataType, name: dtype}
  - {typename: 'Scalar[]', name: values, data_type: 'std::vector<Scalar>'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [assign_value]
    param: [shape, dtype, values]
    backend:
      ordered: true
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {assign_value: null}
    force_backend: null
  infer_meta:
    func: AssignValueInferMeta
    param: [shape, dtype]
  inplace: null
  view: null
  backward: null
- name: assign_value_
  inputs:
  - typename: Tensor
    name: output
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: DataType, name: dtype}
  - {typename: 'Scalar[]', name: values, data_type: 'std::vector<Scalar>'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [assign_value]
    param: [shape, dtype, values]
    backend:
      ordered: true
      candidates: [place, output]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {assign_value: null}
    force_backend: null
  infer_meta:
    func: AssignValueInferMeta
    param: [shape, dtype]
  inplace: {out: output}
  view: null
  backward: null
- name: batch_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: is_test}
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: data_format}
  - {typename: bool, name: use_global_stats}
  - {typename: bool, name: trainable_statistics}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_out, optional: false, intermediate: false}
  - {typename: Tensor, name: variance_out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: false}
  - {typename: Tensor, name: reserve_space, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [batch_norm]
    param: [x, mean, variance, scale, bias, is_test, momentum, epsilon, data_format,
      use_global_stats, trainable_statistics]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {batch_norm: null}
    force_backend: null
  infer_meta:
    func: BatchNormInferMeta
    param: [x, mean, variance, scale, bias, is_test, momentum, epsilon, data_format,
      use_global_stats, trainable_statistics]
  inplace: null
  view: {mean_out: mean, variance_out: variance}
  backward: batch_norm_grad
- name: c_allgather
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: int, name: nranks}
  - {typename: bool, name: use_calc_stream}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_allgather]
    param: [x, ring_id, nranks, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_allgather: null}
    force_backend: null
  infer_meta:
    func: AllGatherInferMeta
    param: [x, nranks]
  inplace: null
  view: null
  backward: null
- name: c_allreduce_max
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_allreduce_max]
    param: [x, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_allreduce_max: null}
    force_backend: null
  infer_meta:
    func: AllReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_allreduce_min
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_allreduce_min]
    param: [x, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_allreduce_min: null}
    force_backend: null
  infer_meta:
    func: AllReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_allreduce_prod
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_allreduce_prod]
    param: [x, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_allreduce_prod: null}
    force_backend: null
  infer_meta:
    func: AllReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_allreduce_sum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_allreduce_sum]
    param: [x, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_allreduce_sum: null}
    force_backend: null
  infer_meta:
    func: AllReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_broadcast
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: root, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_broadcast]
    param: [x, ring_id, root, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_broadcast: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_concat
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: rank}
  - {typename: int, name: nranks}
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_concat]
    param: [x, rank, nranks, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_concat: null}
    force_backend: null
  infer_meta:
    func: CConcatInferMeta
    param: [x, nranks]
  inplace: null
  view: null
  backward: null
- name: c_embedding
  inputs:
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: start_index, default_value: '0'}
  - {typename: int64_t, name: vocab_size, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_embedding]
    param: [weight, x, start_index, vocab_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch: {c_embedding: null}
    force_backend: null
  infer_meta:
    func: CEmbeddingInferMeta
    param: [weight, x, start_index]
  inplace: null
  view: null
  backward: c_embedding_grad
- name: c_identity
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: bool, name: use_calc_stream}
  - {typename: bool, name: use_model_parallel}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_identity]
    param: [x, ring_id, use_calc_stream, use_model_parallel]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_identity: null}
    force_backend: null
  infer_meta:
    func: CIdentityInferMeta
    param: [x, ring_id, use_calc_stream, use_model_parallel]
  inplace: {out: x}
  view: null
  backward: null
- name: c_reduce_min
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: int, name: root_id}
  - {typename: bool, name: use_calc_stream}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_reduce_min]
    param: [x, ring_id, root_id, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_reduce_min: null}
    force_backend: null
  infer_meta:
    func: DistReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_reduce_sum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  - {typename: int, name: root_id}
  - {typename: bool, name: use_calc_stream}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_reduce_sum]
    param: [x, ring_id, root_id, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_reduce_sum: null}
    force_backend: null
  infer_meta:
    func: DistReduceInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_reducescatter
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: nranks, default_value: '1'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [reduce_scatter]
    param: [x, nranks]
    backend: null
    layout: null
    data_type: null
    dispatch: {reduce_scatter: null}
    force_backend: null
  infer_meta:
    func: ReduceScatterInferMeta
    param: [x, nranks]
  inplace: null
  view: null
  backward: null
- name: c_sync_calc_stream
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_sync_calc_stream]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_sync_calc_stream: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: c_sync_comm_stream
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_sync_comm_stream]
    param: [x, ring_id]
    backend: null
    layout: null
    data_type: null
    dispatch: {c_sync_comm_stream: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: null
- name: cast
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [cast]
    param: [x, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cast: null}
    force_backend: null
  infer_meta:
    func: CastInferMeta
    spmd_rule: CastInferSpmd
    param: [x, dtype]
  inplace: {out: x}
  view: null
  backward: cast_grad
- name: channel_shuffle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: groups}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [channel_shuffle]
    param: [x, groups, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {channel_shuffle: null}
    force_backend: null
  infer_meta:
    func: ChannelShuffleInferMeta
    param: [x, groups, data_format]
  inplace: null
  view: null
  backward: channel_shuffle_grad
- name: conv2d_transpose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: 'int[]', name: output_padding, default_value: '{}'}
  - {typename: IntArray, name: output_size, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_transpose]
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv2d_transpose: null}
    force_backend: null
  infer_meta:
    func: Conv2dTransposeInferMeta
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
  inplace: null
  view: null
  backward: conv2d_transpose_grad
- name: copy_to
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Place, name: place}
  - {typename: bool, name: blocking}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: copy_to_impl, args: 'x, place, blocking'}
  backward: null
- name: decayed_adagrad
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: decay, default_value: 0.95f}
  - {typename: float, name: epsilon, default_value: 1.0e-6f}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [decayed_adagrad]
    param: [param, grad, moment, learning_rate, decay, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {decayed_adagrad: null}
    force_backend: null
  infer_meta:
    func: DecayedAdagradInferMeta
    param: [param, grad, moment, learning_rate, decay, epsilon]
  inplace: null
  view: null
  backward: null
- name: decode_jpeg
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode}
  - {typename: Place, name: place}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [decode_jpeg]
    param: [x, mode]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type: null
    dispatch: {decode_jpeg: null}
    force_backend: null
  infer_meta:
    func: DecodeJpegInferMeta
    param: [x, mode]
  inplace: null
  view: null
  backward: null
- name: deformable_conv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: offset
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: int, name: deformable_groups}
  - {typename: int, name: groups}
  - {typename: int, name: im2col_step}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [deformable_conv]
    param: [x, offset, filter, mask, strides, paddings, dilations, deformable_groups,
      groups, im2col_step]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {deformable_conv: null}
    force_backend: null
  infer_meta:
    func: DeformableConvInferMeta
    param: [x, offset, filter, mask, strides, paddings, dilations, deformable_groups,
      groups, im2col_step]
  inplace: null
  view: null
  backward: deformable_conv_grad
- name: depthwise_conv2d_transpose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: 'int[]', name: output_padding, default_value: '{}'}
  - {typename: IntArray, name: output_size, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [depthwise_conv2d_transpose]
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {depthwise_conv2d_transpose: null}
    force_backend: null
  infer_meta:
    func: Conv2dTransposeInferMeta
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
  inplace: null
  view: null
  backward: depthwise_conv2d_transpose_grad
- name: disable_check_model_nan_inf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: flag, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [check_model_nan_inf]
    param: [x, flag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {check_model_nan_inf: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: disable_check_model_nan_inf_grad
- name: distribute_fpn_proposals
  inputs:
  - typename: Tensor
    name: fpn_rois
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rois_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: min_level}
  - {typename: int, name: max_level}
  - {typename: int, name: refer_level}
  - {typename: int, name: refer_scale}
  - {typename: bool, name: pixel_offset}
  outputs:
  - {typename: 'Tensor[]', name: multi_fpn_rois, size: max_level - min_level + 1,
    optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: multi_level_rois_num, size: max_level - min_level
      + 1, optional: true, intermediate: false}
  - {typename: Tensor, name: restore_index, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [distribute_fpn_proposals]
    param: [fpn_rois, rois_num, min_level, max_level, refer_level, refer_scale, pixel_offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [fpn_rois]
      to_complex_flag: [false]
    dispatch: {distribute_fpn_proposals: null}
    force_backend: null
  infer_meta:
    func: DistributeFpnProposalsInferMeta
    param: [fpn_rois, rois_num, min_level, max_level, refer_level, refer_scale, pixel_offset]
  inplace: null
  view: null
  backward: null
- name: distributed_lookup_table
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: table_id, default_value: '0'}
  - {typename: bool, name: is_distributed, default_value: 'false'}
  - {typename: str, name: lookup_table_version, default_value: '"lookup_table"'}
  - {typename: int64_t, name: padding_idx, default_value: '-1'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: bool, name: is_test, default_value: 'false'}
  outputs:
  - {typename: 'Tensor[]', name: outputs, size: ids.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [distributed_lookup_table]
    param: [ids, w, table_id, is_distributed, lookup_table_version, padding_idx, dtype,
      is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {distributed_lookup_table: null}
    force_backend: null
  infer_meta:
    func: DistributeLookupTableInferMeta
    param: [ids, w, table_id, is_distributed, lookup_table_version, padding_idx, dtype,
      is_test]
  inplace: null
  view: null
  backward: null
- name: divide
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [divide]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {divide: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: divide_grad
- name: dropout
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_tensor
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: p, data_type: float}
  - {typename: bool, name: is_test}
  - {typename: str, name: mode}
  - {typename: int, name: seed}
  - {typename: bool, name: fix_seed}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dropout]
    param: [x, seed_tensor, p, is_test, mode, seed, fix_seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dropout: null}
    force_backend: null
  infer_meta:
    func: DropoutInferMeta
    param: [x, seed_tensor, p, is_test, mode, seed, fix_seed]
  inplace: null
  view: null
  backward: dropout_grad
- name: einsum
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: equation}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: inner_cache, size: x.size(), optional: true, intermediate: false}
  - {typename: 'Tensor[]', name: xshape, size: x.size(), optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [einsum]
    param: [x, equation]
    backend: null
    layout: null
    data_type: null
    dispatch: {einsum: null}
    force_backend: null
  infer_meta:
    func: EinsumRawInferMeta
    param: [x, equation]
  inplace: null
  view: null
  backward: einsum_grad
- name: elementwise_pow
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [elementwise_pow]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {elementwise_pow: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: null
  view: null
  backward: elementwise_pow_grad
- name: embedding
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: padding_idx, default_value: '-1'}
  - {typename: bool, name: sparse, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [embedding, sparse_weight_embedding]
    param: [x, weight, padding_idx]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch:
      embedding:
      - [dense, dense]
      - [dense]
      sparse_weight_embedding:
      - [dense, selected_rows]
      - [dense]
    force_backend: null
  infer_meta:
    func: EmbeddingInferMeta
    param: [x, weight, padding_idx]
  inplace: null
  view: null
  backward: embedding_grad
- name: empty
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [empty]
    param: [shape, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {empty: null}
    force_backend: null
  infer_meta:
    func: CreateInferMeta
    param: [shape, dtype]
  inplace: null
  view: null
  backward: null
- name: empty_like
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype, default_value: 'DataType::UNDEFINED'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [empty_like]
    param: [x, dtype]
    backend:
      ordered: true
      candidates: [place, x]
    layout: null
    data_type:
      ordered: true
      candidates: [dtype, x]
      to_complex_flag: [false, false]
    dispatch: {empty_like: null}
    force_backend: null
  infer_meta:
    func: CreateLikeInferMeta
    param: [x, dtype]
  inplace: null
  view: null
  backward: null
- name: enable_check_model_nan_inf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: flag, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [check_model_nan_inf]
    param: [x, flag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {check_model_nan_inf: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: enable_check_model_nan_inf_grad
- name: equal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [equal]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {equal: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: exponential_
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: lam}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [exponential]
    param: [x, lam]
    backend: null
    layout: null
    data_type: null
    dispatch: {exponential: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: exponential__grad
- name: eye
  inputs: []
  attrs:
  - {typename: Scalar, name: num_rows, data_type: float}
  - {typename: Scalar, name: num_columns, data_type: float}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eye]
    param: [num_rows, num_columns, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {eye: null}
    force_backend: null
  infer_meta:
    func: EyeInferMeta
    param: [num_rows, num_columns, dtype]
  inplace: null
  view: null
  backward: null
- name: feed
  inputs: []
  attrs:
  - {typename: str, name: name}
  - {typename: int, name: col}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  inplace: null
  view: null
  backward: null
- name: fetch
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: name}
  - {typename: int, name: col}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: ['pir::SideEffectTrait']
  interfaces: []
  kernel:
    func: [fetch]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: floor_divide
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [floor_divide]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor_divide: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: frobenius_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keep_dim}
  - {typename: bool, name: reduce_all}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [frobenius_norm]
    param: [x, axis, keep_dim, reduce_all]
    backend: null
    layout: null
    data_type: null
    dispatch: {frobenius_norm: null}
    force_backend: null
  infer_meta:
    func: ReduceIntArrayAxisInferMetaBase
    param: [x, axis, keep_dim, reduce_all]
  inplace: null
  view: null
  backward: frobenius_norm_grad
- name: full
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: Scalar, name: value, data_type: float}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [full]
    param: [shape, value, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full: null}
    force_backend: null
  infer_meta:
    func: CreateInferMeta
    param: [shape, dtype]
  inplace: null
  view: null
  backward: null
- name: full_
  inputs:
  - typename: Tensor
    name: output
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: Scalar, name: value, data_type: float}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [full]
    param: [shape, value, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full: null}
    force_backend: null
  infer_meta:
    func: CreateInferMeta
    param: [shape, dtype]
  inplace: {out: output}
  view: null
  backward: null
- name: full_batch_size_like
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: DataType, name: dtype}
  - {typename: Scalar, name: value, data_type: float}
  - {typename: int, name: input_dim_idx}
  - {typename: int, name: output_dim_idx}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [full_batch_size_like]
    param: [input, shape, value, dtype, input_dim_idx, output_dim_idx]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full_batch_size_like: null}
    force_backend: null
  infer_meta:
    func: FullBatchSizeLikeInferMeta
    param: [input, shape, value, dtype, input_dim_idx, output_dim_idx]
  inplace: null
  view: null
  backward: null
- name: full_like
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: Scalar, name: value, data_type: float}
  - {typename: DataType, name: dtype, default_value: 'DataType::UNDEFINED'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [x]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [full_like]
    param: [x, value, dtype]
    backend:
      ordered: true
      candidates: [place, x]
    layout: null
    data_type:
      ordered: true
      candidates: [dtype, x]
      to_complex_flag: [false, false]
    dispatch: {full_like: null}
    force_backend: null
  infer_meta:
    func: CreateLikeInferMeta
    param: [x, dtype]
  inplace: null
  view: null
  backward: null
- name: full_with_tensor
  inputs:
  - typename: Tensor
    name: shape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [full_with_tensor]
    param: [shape, value, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full_with_tensor: null}
    force_backend: null
  infer_meta:
    func: FullWithTensorInferMeta
    param: [shape, dtype]
  inplace: null
  view: null
  backward: null
- name: fused_adam_
  inputs:
  - typename: Tensor[]
    name: params
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grads
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moments1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moments2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta1_pows
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta2_pows
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_params
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, data_type: float}
  - {typename: Scalar, name: beta2, data_type: float}
  - {typename: Scalar, name: epsilon, data_type: float}
  - {typename: int, name: chunk_size}
  - {typename: float, name: weight_decay}
  - {typename: bool, name: use_adamw}
  - {typename: bool, name: multi_precision}
  - {typename: bool, name: use_global_beta_pow}
  outputs:
  - {typename: 'Tensor[]', name: params_out, size: params.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: moments1_out, size: params.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: moments2_out, size: params.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta1_pows_out, size: params.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta2_pows_out, size: params.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_params_out, size: params.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_adam]
    param: [params, grads, learning_rate, moments1, moments2, beta1_pows, beta2_pows,
      master_params, skip_update, beta1, beta2, epsilon, chunk_size, weight_decay,
      use_adamw, multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [params]
      to_complex_flag: [false]
    dispatch: {fused_adam: null}
    force_backend: null
  infer_meta:
    func: FusedAdamInferMeta
    param: [params, grads, learning_rate, moments1, moments2, beta1_pows, beta2_pows,
      master_params, skip_update, beta1, beta2, epsilon, chunk_size, weight_decay,
      use_adamw, multi_precision, use_global_beta_pow]
  inplace: {params_out: params, moments1_out: moments1, moments2_out: moments2, beta1_pows_out: beta1_pows,
    beta2_pows_out: beta2_pows, master_params_out: master_params}
  view: null
  backward: null
- name: fused_batch_norm_act
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_out, optional: false, intermediate: false}
  - {typename: Tensor, name: variance_out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: false}
  - {typename: Tensor, name: reserve_space, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_batch_norm_act]
    param: [x, scale, bias, mean, variance, momentum, epsilon, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_batch_norm_act: null}
    force_backend: null
  infer_meta:
    func: FusedBatchNormActInferMeta
    param: [x, scale, bias, mean, variance]
  inplace: null
  view: {mean_out: mean, variance_out: variance}
  backward: fused_batch_norm_act_grad
- name: fused_bn_add_activation
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: z
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_out, optional: false, intermediate: false}
  - {typename: Tensor, name: variance_out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: false}
  - {typename: Tensor, name: reserve_space, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bn_add_activation]
    param: [x, z, scale, bias, mean, variance, momentum, epsilon, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bn_add_activation: null}
    force_backend: null
  infer_meta:
    func: FusedBatchNormActInferMeta
    param: [x, scale, bias, mean, variance]
  inplace: null
  view: {mean_out: mean, variance_out: variance}
  backward: fused_bn_add_activation_grad
- name: fused_softmax_mask
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_softmax_mask]
    param: [x, mask]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_softmax_mask: null}
    force_backend: null
  infer_meta:
    func: SoftmaxMaskFuseInferMeta
    param: [x, mask]
  inplace: null
  view: null
  backward: fused_softmax_mask_grad
- name: fused_softmax_mask_upper_triangle
  inputs:
  - typename: Tensor
    name: X
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: Out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_softmax_mask_upper_triangle]
    param: [X]
    backend: null
    layout: null
    data_type: null
    dispatch: {fused_softmax_mask_upper_triangle: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [X]
  inplace: null
  view: null
  backward: fused_softmax_mask_upper_triangle_grad
- name: gaussian
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: float, name: mean}
  - {typename: float, name: std}
  - {typename: int, name: seed}
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gaussian]
    param: [shape, mean, std, seed, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {gaussian: null}
    force_backend: null
  infer_meta:
    func: GaussianInferMeta
    param: [shape, mean, std, seed, dtype]
  inplace: null
  view: null
  backward: null
- name: get_tensor_from_selected_rows
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [get_tensor_from_selected_rows]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      get_tensor_from_selected_rows:
      - [selected_rows]
      - [dense]
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: greater_equal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [greater_equal]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {greater_equal: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: greater_than
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [greater_than]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {greater_than: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: hardswish
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hardswish]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardswish: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: hardswish_grad
- name: hsigmoid_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: path
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: code
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num_classes}
  - {typename: bool, name: is_sparse}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: pre_out, optional: false, intermediate: false}
  - {typename: Tensor, name: w_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hsigmoid_loss]
    param: [x, label, w, bias, path, code, num_classes, is_sparse]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {hsigmoid_loss: null}
    force_backend: null
  infer_meta:
    func: HSigmoidLossInferMeta
    param: [x, label, w, bias, path, code, num_classes, is_sparse]
  inplace: null
  view: null
  backward: hsigmoid_loss_grad
- name: increment
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: value, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [increment]
    param: [x, value]
    backend: null
    layout: null
    data_type: null
    dispatch: {increment: null}
    force_backend: null
  infer_meta:
    func: IncrementInferMeta
    param: [x, value]
  inplace: {out: x}
  view: null
  backward: null
- name: less_equal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [less_equal]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {less_equal: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: less_than
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [less_than]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {less_than: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: linspace
  inputs:
  - typename: Tensor
    name: start
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stop
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: number
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [linspace]
    param: [start, stop, number, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {linspace: null}
    force_backend: null
  infer_meta:
    func: LinspaceInferMeta
    param: [start, stop, number, dtype]
  inplace: null
  view: null
  backward: null
- name: load_combine
  inputs: []
  attrs:
  - {typename: str, name: file_path}
  - {typename: bool, name: load_as_fp16}
  - {typename: bool, name: model_from_memory}
  outputs:
  - {typename: 'Tensor[]', name: Out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [load_combine]
    param: [file_path, load_as_fp16, model_from_memory]
    backend: null
    layout: null
    data_type: null
    dispatch: {load_combine: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: lod_array_length
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  inplace: null
  view: null
  backward: null
- name: logspace
  inputs:
  - typename: Tensor
    name: start
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stop
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: num
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: base
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logspace]
    param: [start, stop, num, base, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {logspace: null}
    force_backend: null
  infer_meta:
    func: LogspaceInferMeta
    param: [start, stop, num, base, dtype]
  inplace: null
  view: null
  backward: null
- name: logsumexp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axis}
  - {typename: bool, name: keepdim}
  - {typename: bool, name: reduce_all}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logsumexp]
    param: [x, axis, keepdim, reduce_all]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsumexp: null}
    force_backend: null
  infer_meta:
    func: LogsumexpInferMeta
    param: [x, axis, keepdim, reduce_all]
  inplace: null
  view: null
  backward: logsumexp_grad
- name: lrn
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n, default_value: '5'}
  - {typename: float, name: k, default_value: '2.0'}
  - {typename: float, name: alpha, default_value: '0.0001'}
  - {typename: float, name: beta, default_value: '0.75'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mid_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lrn]
    param: [x, n, k, alpha, beta, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {lrn: null}
    force_backend: null
  infer_meta:
    func: LrnInferMeta
    param: [x, n]
  inplace: null
  view: null
  backward: lrn_grad
- name: matmul
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs:
  - {typename: bool, name: transpose_x, default_value: 'false'}
  - {typename: bool, name: transpose_y, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [matmul]
    param: [x, y, transpose_x, transpose_y]
    backend: null
    layout: null
    data_type: null
    dispatch: {matmul: null}
    force_backend: null
  infer_meta:
    func: MatmulInferMeta
    spmd_rule: MatmulInferSpmd
    param: [x, y, transpose_x, transpose_y]
  inplace: null
  view: null
  backward: matmul_grad
- name: matmul_with_flatten
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: x_num_col_dims, default_value: '1'}
  - {typename: int, name: y_num_col_dims, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matmul_with_flatten]
    param: [x, y, x_num_col_dims, y_num_col_dims]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {matmul_with_flatten: null}
    force_backend: null
  infer_meta:
    func: MatmulWithFlattenInferMeta
    param: [x, y, x_num_col_dims, y_num_col_dims]
  inplace: null
  view: null
  backward: matmul_with_flatten_grad
- name: matrix_rank
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: tol}
  - {typename: bool, name: use_default_tol, default_value: 'true'}
  - {typename: bool, name: hermitian, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matrix_rank]
    param: [x, tol, use_default_tol, hermitian]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_rank: null}
    force_backend: null
  infer_meta:
    func: MatrixRankInferMeta
    param: [x, use_default_tol, hermitian]
  inplace: null
  view: null
  backward: null
- name: matrix_rank_tol
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: atol_tensor
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: use_default_tol, default_value: 'true'}
  - {typename: bool, name: hermitian, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matrix_rank_tol]
    param: [x, atol_tensor, use_default_tol, hermitian]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_rank_tol: null}
    force_backend: null
  infer_meta:
    func: MatrixRankTolInferMeta
    param: [x, atol_tensor, use_default_tol, hermitian]
  inplace: null
  view: null
  backward: null
- name: max
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [max]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {max: null}
    force_backend: null
  infer_meta:
    func: ReduceIntArrayAxisInferMeta
    spmd_rule: ReductionMaxInferSpmdDynamic
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: max_grad
- name: maximum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [maximum]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {maximum: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: null
  view: null
  backward: maximum_grad
- name: mean
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mean]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mean: null}
    force_backend: null
  infer_meta:
    func: ReduceIntArrayAxisInferMeta
    spmd_rule: ReductionMeanInferSpmdDynamic
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: mean_grad
- name: memcpy
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dst_place_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [memcpy]
    param: [x, dst_place_type]
    backend: null
    layout: null
    data_type: null
    dispatch: {memcpy: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: memcpy_d2h
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dst_place_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [memcpy_d2h]
    param: [x, dst_place_type]
    backend: null
    layout: null
    data_type: null
    dispatch: {memcpy_d2h: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: memcpy_h2d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dst_place_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [memcpy_h2d]
    param: [x, dst_place_type]
    backend: null
    layout: null
    data_type: null
    dispatch: {memcpy_h2d: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: min
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [min]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {min: null}
    force_backend: null
  infer_meta:
    func: ReduceIntArrayAxisInferMeta
    param: [x, axis, keepdim]
  inplace: null
  view: null
  backward: min_grad
- name: minimum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [minimum]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {minimum: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: minimum_grad
- name: mish
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: lambda}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mish]
    param: [x, lambda]
    backend: null
    layout: null
    data_type: null
    dispatch: {mish: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: mish_grad
- name: multiply
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [multiply, multiply_sr]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch:
      multiply:
      - [dense, dense]
      - [dense]
      multiply_sr:
      - [selected_rows, dense]
      - [selected_rows]
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: multiply_grad
- name: norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: float, name: epsilon}
  - {typename: bool, name: is_test}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: norm, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [norm]
    param: [x, axis, epsilon, is_test]
    backend: null
    layout: null
    data_type: null
    dispatch: {norm: null}
    force_backend: null
  infer_meta:
    func: NormInferMeta
    param: [x, axis, epsilon, is_test]
  inplace: null
  view: null
  backward: norm_grad
- name: not_equal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [not_equal]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {not_equal: null}
    force_backend: null
  infer_meta:
    func: CompareInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: one_hot
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: num_classes, data_type: int}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [one_hot]
    param: [x, num_classes]
    backend: null
    layout: null
    data_type: null
    dispatch: {one_hot: null}
    force_backend: null
  infer_meta:
    func: OneHotInferMeta
    param: [x, num_classes]
  inplace: null
  view: null
  backward: null
- name: ones
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: full, args: 'shape, 1, dtype, place'}
  backward: null
- name: ones_like
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype, default_value: 'DataType::UNDEFINED'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: full_like, args: 'x, 1, dtype, place'}
  backward: null
- name: pad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: Scalar, name: pad_value, data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pad]
    param: [x, paddings, pad_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {pad: null}
    force_backend: null
  infer_meta:
    func: PadInferMeta
    param: [x, paddings, pad_value]
  inplace: null
  view: null
  backward: pad_grad
- name: pool2d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: kernel_size, data_type: 'std::vector<int64_t>'}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: bool, name: ceil_mode}
  - {typename: bool, name: exclusive}
  - {typename: str, name: data_format}
  - {typename: str, name: pooling_type}
  - {typename: bool, name: global_pooling}
  - {typename: bool, name: adaptive}
  - {typename: str, name: padding_algorithm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pool2d]
    param: [x, kernel_size, strides, paddings, ceil_mode, exclusive, data_format,
      pooling_type, global_pooling, adaptive, padding_algorithm]
    backend: null
    layout: null
    data_type: null
    dispatch: {pool2d: null}
    force_backend: null
  infer_meta:
    func: Pool2DInferMeta
    param: [x, kernel_size, strides, paddings, ceil_mode, exclusive, data_format,
      pooling_type, global_pooling, adaptive, padding_algorithm]
  inplace: null
  view: null
  backward: pool2d_grad
- name: pool3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: bool, name: ceil_mode}
  - {typename: bool, name: exclusive}
  - {typename: str, name: data_format}
  - {typename: str, name: pooling_type}
  - {typename: bool, name: global_pooling}
  - {typename: bool, name: adaptive}
  - {typename: str, name: padding_algorithm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pool3d]
    param: [x, kernel_size, strides, paddings, ceil_mode, exclusive, data_format,
      pooling_type, global_pooling, adaptive, padding_algorithm]
    backend: null
    layout: null
    data_type: null
    dispatch: {pool3d: null}
    force_backend: null
  infer_meta:
    func: PoolInferMeta
    param: [x, kernel_size, strides, paddings, ceil_mode, exclusive, data_format,
      pooling_type, global_pooling, adaptive, padding_algorithm]
  inplace: null
  view: null
  backward: pool3d_grad
- name: print
  inputs:
  - typename: Tensor
    name: in
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: first_n}
  - {typename: str, name: message}
  - {typename: int, name: summarize}
  - {typename: bool, name: print_tensor_name, default_value: 'true'}
  - {typename: bool, name: print_tensor_type, default_value: 'true'}
  - {typename: bool, name: print_tensor_shape, default_value: 'true'}
  - {typename: bool, name: print_tensor_layout, default_value: 'true'}
  - {typename: bool, name: print_tensor_lod, default_value: 'true'}
  - {typename: str, name: print_phase, default_value: '"BOTH"'}
  - {typename: bool, name: is_forward, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [print_kernel]
    param: [in, first_n, message, summarize, print_tensor_name, print_tensor_type,
      print_tensor_shape, print_tensor_layout, print_tensor_lod, print_phase, is_forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {print_kernel: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [in]
  inplace: null
  view: null
  backward: null
- name: prod
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: dims, data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keep_dim}
  - {typename: bool, name: reduce_all}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [prod]
    param: [x, dims, keep_dim, reduce_all]
    backend: null
    layout: null
    data_type: null
    dispatch: {prod: null}
    force_backend: null
  infer_meta:
    func: ReduceIntArrayAxisInferMetaBase
    param: [x, dims, keep_dim, reduce_all]
  inplace: null
  view: null
  backward: prod_grad
- name: push_sparse_v2
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_grad_in
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: embeddingdim, default_value: '11'}
  - {typename: int, name: tableid, default_value: '0'}
  - {typename: str, name: accessorclass, default_value: '""'}
  - {typename: str, name: ctrlabelname, default_value: '""'}
  - {typename: int, name: paddingid, default_value: '0'}
  - {typename: bool, name: scalesparsegrad, default_value: 'true'}
  - {typename: 'str[]', name: inputnames, default_value: '{}'}
  - {typename: bool, name: is_distributed, default_value: 'true'}
  outputs:
  - {typename: 'Tensor[]', name: out_grad_out, size: out_grad_in.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [push_sparse_v2]
    param: [ids, w, out_grad_in, embeddingdim, tableid, accessorclass, ctrlabelname,
      paddingid, scalesparsegrad, inputnames, is_distributed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad_in]
      to_complex_flag: [false]
    dispatch: {push_sparse_v2: null}
    force_backend: null
  infer_meta:
    func: UnchangedMultiInferMeta
    param: [out_grad_in]
  inplace: {out_grad_out: out_grad_in}
  view: null
  backward: null
- name: randint
  inputs: []
  attrs:
  - {typename: int, name: low}
  - {typename: int, name: high}
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [randint]
    param: [low, high, shape, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {randint: null}
    force_backend: null
  infer_meta:
    func: RandintInferMeta
    param: [low, high, shape, dtype]
  inplace: null
  view: null
  backward: null
- name: randperm
  inputs: []
  attrs:
  - {typename: int, name: n}
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [randperm]
    param: [n, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {randperm: null}
    force_backend: null
  infer_meta:
    func: RandpermInferMeta
    param: [n, dtype]
  inplace: null
  view: null
  backward: null
- name: read_file
  inputs: []
  attrs:
  - {typename: str, name: filename, default_value: '""'}
  - {typename: DataType, name: dtype, default_value: 'DataType::UINT8'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [read_file]
    param: [filename]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {read_file: null}
    force_backend: null
  infer_meta:
    func: ReadFileInferMeta
    param: [filename]
  inplace: null
  view: null
  backward: null
- name: recv_v2
  inputs: []
  attrs:
  - {typename: 'int[]', name: out_shape, default_value: '{}'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: int, name: peer, default_value: '0'}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  - {typename: bool, name: dynamic_shape, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [recv_v2]
    param: [ring_id, dynamic_shape, peer, out_shape, dtype, use_calc_stream]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {recv_v2: null}
    force_backend: null
  infer_meta:
    func: RecvV2InferMeta
    param: [ring_id, dynamic_shape, peer, out_shape, dtype]
  inplace: null
  view: null
  backward: null
- name: remainder
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [remainder]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {remainder: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: null
- name: repeat_interleave
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: repeats}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [repeat_interleave]
    param: [x, repeats, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {repeat_interleave: null}
    force_backend: null
  infer_meta:
    func: RepeatInterleaveInferMeta
    param: [x, repeats, axis]
  inplace: null
  view: null
  backward: repeat_interleave_grad
- name: repeat_interleave_with_tensor_index
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: repeats
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [repeat_interleave_with_tensor_index]
    param: [x, repeats, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {repeat_interleave_with_tensor_index: null}
    force_backend: null
  infer_meta:
    func: RepeatInterleaveWithTensorIndexInferMeta
    param: [x, repeats, axis]
  inplace: null
  view: null
  backward: repeat_interleave_with_tensor_index_grad
- name: reshape
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [reshape]
    param: [x, shape]
    backend: null
    layout: null
    data_type: null
    dispatch: {reshape: null}
    force_backend: null
  infer_meta:
    func: ReshapeWithXShapeInferMeta
    param: [x, shape]
  inplace: {out: x}
  view: {out: x}
  backward: reshape_grad
- name: rnn
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: pre_state
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: weight_list
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: sequence_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dropout_state_in
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout_prob, default_value: '0.0'}
  - {typename: bool, name: is_bidirec, default_value: 'false'}
  - {typename: int, name: input_size, default_value: '10'}
  - {typename: int, name: hidden_size, default_value: '100'}
  - {typename: int, name: num_layers, default_value: '1'}
  - {typename: str, name: mode, default_value: '"RNN_TANH"'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: bool, name: is_test, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dropout_state_out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: state, size: pre_state.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: reserve, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rnn]
    param: [x, pre_state, weight_list, sequence_length, dropout_prob, is_bidirec,
      input_size, hidden_size, num_layers, mode, seed, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {rnn: null}
    force_backend: null
  infer_meta:
    func: RnnInferMeta
    param: [x, pre_state, weight_list, sequence_length, dropout_prob, is_bidirec,
      input_size, hidden_size, num_layers, mode, seed, is_test]
  inplace: null
  view: {dropout_state_out: dropout_state_in}
  backward: rnn_grad
- name: row_conv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [row_conv]
    param: [x, filter]
    backend: null
    layout: null
    data_type: null
    dispatch: {row_conv: null}
    force_backend: null
  infer_meta:
    func: RowConvInferMeta
    param: [x, filter]
  inplace: null
  view: null
  backward: null
- name: rrelu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: lower}
  - {typename: float, name: upper}
  - {typename: bool, name: is_test}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: noise, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rrelu]
    param: [x, lower, upper, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {rrelu: null}
    force_backend: null
  infer_meta:
    func: RReluInferMeta
    param: [x, lower, upper, is_test]
  inplace: null
  view: null
  backward: rrelu_grad
- name: save_combine
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: file_path}
  - {typename: bool, name: overwrite}
  - {typename: bool, name: save_as_fp16}
  - {typename: bool, name: save_to_memory}
  outputs:
  - {typename: Tensor, name: out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [save_combine_tensor]
    param: [x, file_path, overwrite, save_as_fp16, save_to_memory]
    backend: null
    layout: null
    data_type: null
    dispatch: {save_combine_tensor: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: seed
  inputs: []
  attrs:
  - {typename: int, name: seed}
  - {typename: bool, name: deterministic}
  - {typename: str, name: rng_name}
  - {typename: bool, name: force_cpu}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [seed]
    param: [seed, deterministic, rng_name, force_cpu]
    backend: null
    layout: null
    data_type: null
    dispatch: {seed: null}
    force_backend: null
  infer_meta:
    func: SeedInferMeta
    param: [seed]
  inplace: null
  view: null
  backward: null
- name: send_v2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: peer, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  - {typename: bool, name: dynamic_shape, default_value: 'false'}
  outputs: []
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_v2]
    param: [x, ring_id, dynamic_shape, peer, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {send_v2: null}
    force_backend: null
  infer_meta:
    func: SendV2InferMeta
    param: [peer, ring_id]
  inplace: null
  view: null
  backward: null
- name: set_value
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: starts, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: ends, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: steps, data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axes}
  - {typename: 'int64_t[]', name: decrease_axes}
  - {typename: 'int64_t[]', name: none_axes}
  - {typename: 'int64_t[]', name: shape}
  - {typename: 'Scalar[]', name: values, data_type: 'std::vector<Scalar>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [set_value]
    param: [x, starts, ends, steps, axes, decrease_axes, none_axes, shape, values]
    backend: null
    layout: null
    data_type: null
    dispatch: {set_value: null}
    force_backend: null
  infer_meta:
    func: SetValueInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: set_value_grad
- name: set_value_with_tensor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: starts, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: ends, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: steps, data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axes}
  - {typename: 'int64_t[]', name: decrease_axes}
  - {typename: 'int64_t[]', name: none_axes}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [set_value_with_tensor]
    param: [x, values, starts, ends, steps, axes, decrease_axes, none_axes]
    backend: null
    layout: null
    data_type: null
    dispatch: {set_value_with_tensor: null}
    force_backend: null
  infer_meta:
    func: SetValueInferMeta
    param: [x]
  inplace: {out: x}
  view: null
  backward: set_value_with_tensor_grad
- name: shadow_feed
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [shadow_feed]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {shadow_feed: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: share_data
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [share_data]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {share_data: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: shuffle_batch
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: startup_seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: shuffle_idx, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [shuffle_batch]
    param: [x, seed, startup_seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {shuffle_batch: null}
    force_backend: null
  infer_meta:
    func: ShuffleBatchInferMeta
    param: [x, seed, startup_seed]
  inplace: null
  view: null
  backward: shuffle_batch_grad
- name: slice
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: IntArray, name: starts, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: ends, data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: infer_flags}
  - {typename: 'int64_t[]', name: decrease_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [slice]
    param: [input, axes, starts, ends, infer_flags, decrease_axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {slice: null}
    force_backend: null
  infer_meta:
    func: SliceRawInferMeta
    spmd_rule: SliceInferSpmdDynamic
    param: [input, axes, starts, ends, infer_flags, decrease_axis]
  inplace: null
  view: null
  backward: slice_grad
- name: soft_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: 20.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [soft_relu]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {soft_relu: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: soft_relu_grad
- name: softmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softmax]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {softmax: null}
    force_backend: null
  infer_meta:
    func: SoftmaxInferMeta
    param: [x, axis]
  inplace: {out: x}
  view: null
  backward: softmax_grad
- name: split
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: sections, data_type: 'std::vector<int64_t>'}
  - {typename: Scalar(int), name: axis, data_type: int}
  outputs:
  - {typename: 'Tensor[]', name: out, size: sections.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [split]
    param: [x, sections, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {split: null}
    force_backend: null
  infer_meta:
    func: SplitInferMeta
    param: [x, sections, axis]
  inplace: null
  view: null
  backward: split_grad
- name: split_with_num
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num}
  - {typename: Scalar(int), name: axis, data_type: int}
  outputs:
  - {typename: 'Tensor[]', name: out, size: num, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [split_with_num]
    param: [x, num, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {split_with_num: null}
    force_backend: null
  infer_meta:
    func: SplitWithNumInferMeta
    spmd_rule: SplitWithNumInferSpmdDynamic
    param: [x, num, axis]
  inplace: null
  view: null
  backward: split_with_num_grad
- name: strided_slice
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: axes}
  - {typename: IntArray, name: starts, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: ends, data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: strides, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [strided_slice]
    param: [x, axes, starts, ends, strides]
    backend: null
    layout: null
    data_type: null
    dispatch: {strided_slice: null}
    force_backend: null
  infer_meta:
    func: StridedSliceInferMeta
    spmd_rule: StridedSliceInferSpmdDynamic
    param: [x, axes, starts, ends, strides]
  inplace: null
  view: null
  backward: strided_slice_grad
- name: subtract
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, y]
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [subtract]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {subtract: null}
    force_backend: null
  infer_meta:
    func: ElementwiseInferMeta
    spmd_rule: ElementwiseBinaryInferSpmd
    param: [x, y]
  inplace: {out: x}
  view: null
  backward: subtract_grad
- name: sum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::UNDEFINED'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [sum]
    param: [x, axis, dtype, keepdim]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {sum: null}
    force_backend: null
  infer_meta:
    func: SumInferMeta
    spmd_rule: ReductionSumInferSpmdDynamic
    param: [x, axis, dtype, keepdim]
  inplace: null
  view: null
  backward: sum_grad
- name: swish
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [swish]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {swish: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: swish_grad
- name: sync_batch_norm_
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: is_test}
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: data_format}
  - {typename: bool, name: use_global_stats}
  - {typename: bool, name: trainable_statistics}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_out, optional: false, intermediate: false}
  - {typename: Tensor, name: variance_out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: false}
  - {typename: Tensor, name: reserve_space, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sync_batch_norm]
    param: [x, mean, variance, scale, bias, is_test, momentum, epsilon, data_format,
      use_global_stats, trainable_statistics]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {sync_batch_norm: null}
    force_backend: null
  infer_meta:
    func: BatchNormInferMeta
    param: [x, mean, variance, scale, bias, is_test, momentum, epsilon, data_format,
      use_global_stats, trainable_statistics]
  inplace: {mean_out: mean, variance_out: variance}
  view: null
  backward: sync_batch_norm_grad
- name: tdm_sampler
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: travel
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: layer
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: output_positive, default_value: 'true'}
  - {typename: 'int[]', name: neg_samples_num_list, default_value: '{}'}
  - {typename: 'int[]', name: layer_offset_lod, default_value: '{}'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: int, name: dtype, default_value: '2'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: labels, optional: true, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tdm_sampler]
    param: [x, travel, layer, output_positive, neg_samples_num_list, layer_offset_lod,
      seed, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {tdm_sampler: null}
    force_backend: null
  infer_meta:
    func: TdmSamplerInferMeta
    param: [x, travel, layer, output_positive, neg_samples_num_list, layer_offset_lod,
      seed, dtype]
  inplace: null
  view: null
  backward: null
- name: tile
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: repeat_times, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [tile]
    param: [x, repeat_times]
    backend: null
    layout: null
    data_type: null
    dispatch: {tile: null}
    force_backend: null
  infer_meta:
    func: TileInferMeta
    param: [x, repeat_times]
  inplace: null
  view: null
  backward: tile_grad
- name: trans_layout
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: perm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [transpose]
    param: [x, perm]
    backend: null
    layout: null
    data_type: null
    dispatch: {transpose: null}
    force_backend: null
  infer_meta:
    func: TransposeInferMeta
    param: [x, perm]
  inplace: null
  view: null
  backward: trans_layout_grad
- name: transpose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: perm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [transpose]
    param: [x, perm]
    backend: null
    layout: null
    data_type: null
    dispatch: {transpose: null}
    force_backend: null
  infer_meta:
    func: TransposeInferMeta
    spmd_rule: TransposeInferSpmd
    param: [x, perm]
  inplace: {out: x}
  view: null
  backward: transpose_grad
- name: tril
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: diagonal}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::InferSymbolicShapeInterface']
  kernel:
    func: [tril]
    param: [x, diagonal]
    backend: null
    layout: null
    data_type: null
    dispatch: {tril: null}
    force_backend: null
  infer_meta:
    func: TrilInferMeta
    param: [x, diagonal]
  inplace: {out: x}
  view: null
  backward: tril_grad
- name: tril_indices
  inputs: []
  attrs:
  - {typename: int, name: rows}
  - {typename: int, name: cols}
  - {typename: int, name: offset}
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tril_indices]
    param: [rows, cols, offset, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {tril_indices: null}
    force_backend: null
  infer_meta:
    func: TrilIndicesInferMeta
    param: [rows, cols, offset, dtype]
  inplace: null
  view: null
  backward: null
- name: triu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: diagonal}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [triu]
    param: [x, diagonal]
    backend: null
    layout: null
    data_type: null
    dispatch: {triu: null}
    force_backend: null
  infer_meta:
    func: TriuInferMeta
    spmd_rule: TriuInferSpmd
    param: [x, diagonal]
  inplace: {out: x}
  view: null
  backward: triu_grad
- name: triu_indices
  inputs: []
  attrs:
  - {typename: int, name: row}
  - {typename: int, name: col}
  - {typename: int, name: offset}
  - {typename: DataType, name: dtype}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [triu_indices]
    param: [row, col, offset, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {triu_indices: null}
    force_backend: null
  infer_meta:
    func: TriuIndicesInferMeta
    param: [row, col, offset, dtype]
  inplace: null
  view: null
  backward: null
- name: truncated_gaussian_random
  inputs: []
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: float, name: mean}
  - {typename: float, name: std}
  - {typename: int, name: seed}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [truncated_gaussian_random]
    param: [shape, mean, std, seed, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {truncated_gaussian_random: null}
    force_backend: null
  infer_meta:
    func: TruncatedGaussianRandomInferMeta
    param: [shape, mean, std, seed, dtype]
  inplace: null
  view: null
  backward: null
- name: uniform
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype}
  - {typename: Scalar, name: min, data_type: float}
  - {typename: Scalar, name: max, data_type: float}
  - {typename: int, name: seed}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [uniform]
    param: [shape, dtype, min, max, seed]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {uniform: null}
    force_backend: null
  infer_meta:
    func: UniformRandomInferMeta
    param: [shape, dtype]
  inplace: null
  view: null
  backward: null
- name: uniform_random_batch_size_like
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: int, name: input_dim_idx, default_value: '0'}
  - {typename: int, name: output_dim_idx, default_value: '0'}
  - {typename: float, name: min, default_value: -1.0f}
  - {typename: float, name: max, default_value: 1.0f}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: int, name: diag_num, default_value: '0'}
  - {typename: int, name: diag_step, default_value: '0'}
  - {typename: float, name: diag_val, default_value: 1.0f}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [uniform_random_batch_size_like]
    param: [input, shape, input_dim_idx, output_dim_idx, min, max, seed, diag_num,
      diag_step, diag_val, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {uniform_random_batch_size_like: null}
    force_backend: null
  infer_meta:
    func: BatchSizeLikeInferMeta
    param: [input, shape, input_dim_idx, output_dim_idx]
  inplace: null
  view: null
  backward: null
- name: unique
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_index, default_value: 'false'}
  - {typename: bool, name: return_inverse, default_value: 'false'}
  - {typename: bool, name: return_counts, default_value: 'false'}
  - {typename: 'int[]', name: axis, default_value: '{}'}
  - {typename: DataType, name: dtype, default_value: 'DataType::INT64'}
  - {typename: bool, name: is_sorted, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: true, intermediate: false}
  - {typename: Tensor, name: inverse, optional: false, intermediate: false}
  - {typename: Tensor, name: counts, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: ['paddle::dialect::ParseKernelKeyInterface']
  kernel:
    func: [unique]
    param: [x, return_index, return_inverse, return_counts, axis, dtype, is_sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unique: null}
    force_backend: null
  infer_meta:
    func: UniqueRawInferMeta
    param: [x, return_index, return_inverse, return_counts, axis, dtype, is_sorted]
  inplace: null
  view: null
  backward: null
- name: unpool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: ksize}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: padding}
  - {typename: IntArray, name: output_size, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unpool]
    param: [x, indices, ksize, strides, padding, output_size, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unpool: null}
    force_backend: null
  infer_meta:
    func: UnpoolInferMeta
    param: [x, indices, ksize, strides, padding, output_size, data_format]
  inplace: null
  view: null
  backward: unpool_grad
- name: write_to_array
  inputs:
  - typename: Tensor
    name: i
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  inplace: null
  view: null
  backward: null
- name: zeros
  inputs: []
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: full, args: 'shape, 0, dtype, place'}
  backward: null
- name: zeros_like
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype, default_value: 'DataType::UNDEFINED'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: full_like, args: 'x, 0, dtype, place'}
  backward: null
- name: c_softmax_with_cross_entropy
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: ignore_index, default_value: '-100'}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: rank, default_value: '0'}
  - {typename: int, name: nranks, default_value: '0'}
  outputs:
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [c_softmax_with_cross_entropy]
    param: [logits, label, ignore_index, ring_id, rank, nranks]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [logits]
      to_complex_flag: [false]
    dispatch: {c_softmax_with_cross_entropy: null}
    force_backend: null
  infer_meta:
    func: CSoftmaxWithCrossEntropyInferMeta
    param: [logits, label, ignore_index, ring_id, rank, nranks]
  inplace: null
  view: null
  backward: c_softmax_with_cross_entropy_grad
- name: dpsgd
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: clip, default_value: 10.0f}
  - {typename: float, name: batch_size, default_value: 16.0f}
  - {typename: float, name: sigma, default_value: 1.0f}
  - {typename: int, name: seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dpsgd]
    param: [param, grad, learning_rate, clip, batch_size, sigma, seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {dpsgd: null}
    force_backend: null
  infer_meta:
    func: DpsgdInferMeta
    param: [param, grad, learning_rate, clip, batch_size, sigma, seed]
  inplace: null
  view: null
  backward: null
- name: ftrl
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: squared_accumulator
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: linear_accumulator
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: l1, default_value: 0.0f}
  - {typename: float, name: l2, default_value: 0.0f}
  - {typename: float, name: lr_power, default_value: -0.5f}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: squared_accum_out, optional: false, intermediate: false}
  - {typename: Tensor, name: linear_accum_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [ftrl]
    param: [param, squared_accumulator, linear_accumulator, grad, learning_rate, l1,
      l2, lr_power]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {ftrl: null}
    force_backend: null
  infer_meta:
    func: FtrlInferMeta
    param: [param, squared_accumulator, linear_accumulator, grad, learning_rate, l1,
      l2, lr_power]
  inplace: null
  view: null
  backward: null
- name: fused_attention
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_kv
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_linear_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_linear_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_scale_2
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_bias_2
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num_heads}
  - {typename: bool, name: transpose_qkv_wb}
  - {typename: bool, name: pre_layer_norm}
  - {typename: float, name: epsilon}
  - {typename: float, name: attn_dropout_rate}
  - {typename: bool, name: is_test}
  - {typename: bool, name: attn_dropout_fix_seed}
  - {typename: int, name: attn_dropout_seed}
  - {typename: str, name: attn_dropout_implementation}
  - {typename: float, name: dropout_rate}
  - {typename: bool, name: dropout_fix_seed}
  - {typename: int, name: dropout_seed}
  - {typename: str, name: dropout_implementation}
  - {typename: float, name: ln_epsilon}
  - {typename: bool, name: add_residual}
  - {typename: int, name: ring_id}
  outputs:
  - {typename: Tensor, name: ln_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: ln_var, optional: false, intermediate: false}
  - {typename: Tensor, name: ln_out, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_out, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_bias_out, optional: false, intermediate: false}
  - {typename: Tensor, name: transpose_out_2, optional: false, intermediate: false}
  - {typename: Tensor, name: qk_out, optional: false, intermediate: false}
  - {typename: Tensor, name: qktv_out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_out, optional: false, intermediate: false}
  - {typename: Tensor, name: attn_dropout_mask_out, optional: false, intermediate: false}
  - {typename: Tensor, name: attn_dropout_out, optional: false, intermediate: false}
  - {typename: Tensor, name: src_mask_out, optional: false, intermediate: false}
  - {typename: Tensor, name: fmha_out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_linear_out, optional: false, intermediate: false}
  - {typename: Tensor, name: dropout_mask_out, optional: false, intermediate: false}
  - {typename: Tensor, name: ln_mean_2, optional: true, intermediate: false}
  - {typename: Tensor, name: ln_var_2, optional: true, intermediate: false}
  - {typename: Tensor, name: bias_dropout_residual_out, optional: true, intermediate: false}
  - {typename: Tensor, name: cache_kv_out, optional: true, intermediate: false}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_attention]
    param: [x, ln_scale, ln_bias, qkv_weight, qkv_bias, cache_kv, src_mask, out_linear_weight,
      out_linear_bias, ln_scale_2, ln_bias_2, num_heads, transpose_qkv_wb, pre_layer_norm,
      epsilon, attn_dropout_rate, is_test, attn_dropout_fix_seed, attn_dropout_seed,
      attn_dropout_implementation, dropout_rate, dropout_fix_seed, dropout_seed, dropout_implementation,
      ln_epsilon, add_residual, ring_id]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_attention: null}
    force_backend: null
  infer_meta:
    func: FusedAttentionInferMeta
    param: [x, ln_scale, ln_bias, qkv_weight, qkv_bias, cache_kv, src_mask, out_linear_weight,
      out_linear_bias, ln_scale_2, ln_bias_2, num_heads, transpose_qkv_wb, pre_layer_norm,
      epsilon, attn_dropout_rate, is_test, attn_dropout_fix_seed, attn_dropout_seed,
      attn_dropout_implementation, dropout_rate, dropout_fix_seed, dropout_seed, dropout_implementation,
      ln_epsilon, add_residual, ring_id]
  inplace: null
  view: null
  backward: fused_attention_grad
- name: fused_elemwise_add_activation
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'str[]', name: functor_list}
  - {typename: float, name: scale, default_value: '0.0'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: save_intermediate_out, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: intermediate_out, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_elemwise_add_activation]
    param: [x, y, functor_list, scale, axis, save_intermediate_out]
    backend: null
    layout: null
    data_type: null
    dispatch: {fused_elemwise_add_activation: null}
    force_backend: null
  infer_meta:
    func: FusedElemwiseAddActivationInferMeta
    param: [x, y, functor_list, scale, axis, save_intermediate_out]
  inplace: null
  view: null
  backward: fused_elemwise_add_activation_grad
- name: fused_feedforward
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dropout1_seed
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dropout2_seed
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: linear1_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: linear1_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: linear2_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: linear2_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln1_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln1_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln2_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln2_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pre_layer_norm}
  - {typename: float, name: ln1_epsilon}
  - {typename: float, name: ln2_epsilon}
  - {typename: str, name: act_method}
  - {typename: float, name: dropout1_prob}
  - {typename: float, name: dropout2_prob}
  - {typename: str, name: dropout1_implementation}
  - {typename: str, name: dropout2_implementation}
  - {typename: bool, name: is_test}
  - {typename: bool, name: dropout1_fix_seed}
  - {typename: bool, name: dropout2_fix_seed}
  - {typename: int, name: dropout1_seed_val}
  - {typename: int, name: dropout2_seed_val}
  - {typename: bool, name: add_residual}
  - {typename: int, name: ring_id}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dropout1_mask, optional: false, intermediate: false}
  - {typename: Tensor, name: dropout2_mask, optional: false, intermediate: false}
  - {typename: Tensor, name: ln1_mean, optional: true, intermediate: false}
  - {typename: Tensor, name: ln1_variance, optional: true, intermediate: false}
  - {typename: Tensor, name: ln2_mean, optional: true, intermediate: false}
  - {typename: Tensor, name: ln2_variance, optional: true, intermediate: false}
  - {typename: Tensor, name: linear1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: ln1_out, optional: true, intermediate: false}
  - {typename: Tensor, name: dropout1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: dropout2_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_feedforward]
    param: [x, dropout1_seed, dropout2_seed, linear1_weight, linear1_bias, linear2_weight,
      linear2_bias, ln1_scale, ln1_bias, ln2_scale, ln2_bias, pre_layer_norm, ln1_epsilon,
      ln2_epsilon, act_method, dropout1_prob, dropout2_prob, dropout1_implementation,
      dropout2_implementation, is_test, dropout1_fix_seed, dropout2_fix_seed, dropout1_seed_val,
      dropout2_seed_val, add_residual, ring_id]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_feedforward: null}
    force_backend: null
  infer_meta:
    func: FusedFeedForwardInferMeta
    param: [x, dropout1_seed, dropout2_seed, linear1_weight, linear1_bias, linear2_weight,
      linear2_bias, ln1_scale, ln1_bias, ln2_scale, ln2_bias, pre_layer_norm, ln1_epsilon,
      ln2_epsilon, act_method, dropout1_prob, dropout2_prob, dropout1_implementation,
      dropout2_implementation, is_test, dropout1_fix_seed, dropout2_fix_seed, dropout1_seed_val,
      dropout2_seed_val, add_residual, ring_id]
  inplace: null
  view: null
  backward: fused_feedforward_grad
- name: lars_momentum
  inputs:
  - typename: Tensor[]
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: float, name: lars_coeff, default_value: 0.001f}
  - {typename: 'float[]', name: lars_weight_decay, default_value: '{0.0005f}'}
  - {typename: float, name: epsilon, default_value: 0.0f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: 'Tensor[]', name: param_out, size: param.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: velocity_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_param_out, size: param.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lars_momentum]
    param: [param, velocity, learning_rate, grad, master_param, lars_weight_decay,
      mu, lars_coeff, epsilon, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {lars_momentum: null}
    force_backend: null
  infer_meta:
    func: LarsMomentumInferMeta
    param: [param, velocity, learning_rate, grad, master_param, lars_weight_decay,
      mu, lars_coeff, epsilon, multi_precision, rescale_grad]
  inplace: {master_param_out: master_param}
  view: null
  backward: null
- name: match_matrix_tensor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim_t, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: tmp, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [match_matrix_tensor]
    param: [x, y, w, dim_t]
    backend: null
    layout: null
    data_type: null
    dispatch: {match_matrix_tensor: null}
    force_backend: null
  infer_meta:
    func: MatchMatrixTensorInferMeta
    param: [x, y, w, dim_t]
  inplace: null
  view: null
  backward: match_matrix_tensor_grad
- name: nce
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: sample_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: custom_dist_probs
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: custom_dist_alias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: custom_dist_alias_probs
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num_total_classes}
  - {typename: 'int[]', name: custom_neg_classes, default_value: '{}'}
  - {typename: int, name: num_neg_samples, default_value: '10'}
  - {typename: int, name: sampler, default_value: '0'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: bool, name: is_sparse, default_value: 'false'}
  - {typename: bool, name: remote_prefetch, default_value: 'false'}
  - {typename: bool, name: is_test, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: cost, optional: false, intermediate: false}
  - {typename: Tensor, name: sample_logits, optional: false, intermediate: false}
  - {typename: Tensor, name: sample_labels, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nce]
    param: [input, label, weight, bias, sample_weight, custom_dist_probs, custom_dist_alias,
      custom_dist_alias_probs, num_total_classes, custom_neg_classes, num_neg_samples,
      sampler, seed, is_sparse, remote_prefetch, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nce: null}
    force_backend: null
  infer_meta:
    func: NceInferMeta
    param: [input, label, weight, bias, sample_weight, custom_dist_probs, custom_dist_alias,
      custom_dist_alias_probs, num_total_classes, custom_neg_classes, num_neg_samples,
      sampler, seed, is_sparse, remote_prefetch, is_test]
  inplace: null
  view: null
  backward: nce_grad
- name: number_count
  inputs:
  - typename: Tensor
    name: numbers
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: upper_range}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [number_count]
    param: [numbers, upper_range]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [numbers]
      to_complex_flag: [false]
    dispatch: {number_count: null}
    force_backend: null
  infer_meta:
    func: NumberCountInferMeta
    param: [numbers, upper_range]
  inplace: null
  view: null
  backward: null
- name: onednn_to_paddle_layout
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dst_layout}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [onednn_to_paddle_layout]
    param: [x, dst_layout]
    backend: null
    layout: null
    data_type: null
    dispatch: {onednn_to_paddle_layout: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
- name: partial_send
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: peer, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  - {typename: int, name: num, default_value: '1'}
  - {typename: int, name: id, default_value: '0'}
  outputs: []
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [partial_send]
    param: [x, ring_id, peer, use_calc_stream, num, id]
    backend: null
    layout: null
    data_type: null
    dispatch: {partial_send: null}
    force_backend: null
  infer_meta:
    func: PartialSendInferMeta
    param: [x, ring_id, peer, use_calc_stream, num, id]
  inplace: null
  view: null
  backward: null
- name: sparse_momentum
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  - {typename: bool, name: use_nesterov, default_value: 'false'}
  - {typename: str, name: regularization_method, default_value: '""'}
  - {typename: float, name: regularization_coeff, default_value: 0.0f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: velocity_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sparse_momentum]
    param: [param, grad, velocity, index, learning_rate, master_param, mu, axis, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {sparse_momentum: null}
    force_backend: null
  infer_meta:
    func: SparseMomentumInferMeta
    param: [param, learning_rate, velocity]
  inplace: null
  view: null
  backward: null

###########################
#
#/home/aistudio/fix_op/Paddle/paddle/fluid/pir/dialect/operator/ir/generated/update_ops.parsed.yaml
#
##########################

- name: arange
  inputs: []
  attrs:
  - {typename: Scalar, name: start, data_type: float}
  - {typename: Scalar, name: end, data_type: float}
  - {typename: Scalar, name: step, data_type: float}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT64'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: [start, end, step]
  traits: []
  interfaces: []
  kernel:
    func: [arange]
    param: [start, end, step]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {arange: null}
    force_backend: null
  infer_meta:
    func: ArangeInferMeta
    param: [start, end, step, dtype]
  inplace: null
  view: null
  backward: null
- name: sequence_mask
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: max_len, data_type: int}
  - {typename: int, name: out_dtype}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sequence_mask_scalar]
    param: [x, max_len, out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {sequence_mask_scalar: null}
    force_backend: null
  infer_meta:
    func: SequenceMaskScalarInferMeta
    param: [x, max_len, out_dtype]
  inplace: null
  view: null
  backward: null
