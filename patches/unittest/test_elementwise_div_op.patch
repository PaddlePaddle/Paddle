diff --git a/test/legacy_test/test_elementwise_div_op.py b/test/legacy_test/test_elementwise_div_op.py
index c17d2b8946..33aebbfa0a 100644
--- a/test/legacy_test/test_elementwise_div_op.py
+++ b/test/legacy_test/test_elementwise_div_op.py
@@ -82,8 +82,14 @@ class ElementwiseDivOp(OpTest):
         self.y_shape = [13, 17]
 
     def if_check_prim(self):
-        self.check_prim = True
-        self.check_prim_pir = True
+        if paddle.device.cuda.get_device_name() == "K100_AI":
+            self.check_prim = False
+        else:
+            self.check_prim = True
+        if paddle.device.cuda.get_device_name() == "K100_AI":
+            self.check_prim_pir = False
+        else:
+            self.check_prim_pir = True
 
     def gen_data(self, shape):
         return np.random.uniform(0.1, 1, shape)
@@ -526,7 +532,8 @@ class TestDivideOp(unittest.TestCase):
 
             self.assertRaises(ValueError, name_call)
         paddle.disable_static()
-
+        
+    @unittest.skipIf(paddle.device.cuda.get_device_name()=="K100_AI", "K100_AI not support fp64")
     def test_dygraph(self):
         with base.dygraph.guard():
             np_x = np.array([2, 3, 4]).astype('float64')
@@ -540,6 +547,7 @@ class TestDivideOp(unittest.TestCase):
 
 
 # new ir doesn't support complex right now, skip new ir op test
+@unittest.skipIf(paddle.device.cuda.get_device_name()=="K100_AI", "K100_AI not support fp64")
 class TestComplexElementwiseDivOp(OpTest):
     def setUp(self):
         self.op_type = "elementwise_div"
