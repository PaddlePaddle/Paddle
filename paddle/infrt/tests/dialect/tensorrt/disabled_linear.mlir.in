module  {
  func @main_graph(%arg0 : !phi.dense_tensor_map, %arg1 : !infrt.dense_tensor<GPU, FP32, NCHW>, %ctx : !phi.context<GPU>) -> !infrt.dense_tensor<GPU, FP32, NCHW> {
    %0 = phi_dt.tensor_map_get_tensor(%arg0) {name = "linear_0.b_0"} -> !infrt.dense_tensor<CPU, FP32, NCHW>
    %1 = phi_dt.tensor_map_get_tensor(%arg0) {name = "linear_0.w_0"} -> !infrt.dense_tensor<CPU, FP32, NCHW>

    %engine = "trt.create_engine"(%arg1, %0, %1) ({
      %2 = "trt.FullyConnected"(%arg1, %1, %0) {out_channel_num = 3 : si32} : (!infrt.dense_tensor<GPU, FP32, NCHW>, !infrt.dense_tensor<CPU, FP32, NCHW>, !infrt.dense_tensor<CPU, FP32, NCHW>) -> !infrt.dense_tensor<GPU, FP32, NCHW>
      "infrt.return"(%2) : (!infrt.dense_tensor<GPU, FP32, NCHW>) -> ()
    }) : (!infrt.dense_tensor<GPU, FP32, NCHW>, !infrt.dense_tensor<CPU, FP32, NCHW>, !infrt.dense_tensor<CPU, FP32, NCHW>) -> !trt.engine

    %res = "trt.compute"(%engine, %ctx) {} : (!trt.engine, !phi.context<GPU>) -> (!infrt.tensor_list)
    %ts0 = "dt.tensor_list_get_tensor"(%res) {id = 0 : i32} : (!infrt.tensor_list) -> (!infrt.dense_tensor<GPU, FP32, NCHW>)

    infrt.return %ts0 : !infrt.dense_tensor<GPU, FP32, NCHW>
  }

  func @main() {
    %arg0 = phi_dt.load_combined_params(){model_path="@CMAKE_BINARY_DIR@/paddle/infrt/tests/linear.pdmodel",
      params_path="@CMAKE_BINARY_DIR@/paddle/infrt/tests/linear.pdiparams"}
    %ctx = "phi_dt.create_context.gpu" (): () -> !phi.context<GPU>
    %input_tensor = "phi_dt.create_dense_tensor.gpu" (%ctx) {
      precision=#infrt.precision<FP32>,
      layout=#infrt.layout<NCHW>,
      dims=[3:i64, 5:i64, 1:i64, 1:i64], lod=[1:i64]}: (!phi.context<GPU>) -> (!infrt.dense_tensor<GPU, FP32, NCHW>)
    "phi_dt.fill_dense_tensor.f32"(%input_tensor) {value=[3.8:f32, 2.4:f32, 1.3:f32]} : (!infrt.dense_tensor<GPU, FP32, NCHW>) -> ()

    %res = infrt.call @main_graph(%arg0, %input_tensor, %ctx) {} : (!phi.dense_tensor_map, !infrt.dense_tensor<GPU, FP32, NCHW>, !phi.context<GPU>) -> !infrt.dense_tensor<GPU, FP32, NCHW>
    "phi_dt.print_tensor" (%res) : (!infrt.dense_tensor<GPU, FP32, NCHW>) -> ()
    infrt.return
  }
}
