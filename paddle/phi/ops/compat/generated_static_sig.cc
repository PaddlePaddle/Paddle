// Copyright (c) 2023 PaddlePaddle Authors. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// this file is generated by paddle/phi/op/yaml/generator/generate_op.py, do not edit.
#include "paddle/phi/core/compat/op_utils.h"
#include "paddle/utils/small_vector.h"

namespace phi {

KernelSignature ShareBufferOpArgumentMapping(const ArgumentMappingContext& ctx) {
  paddle::small_vector<const char*> inputs {"X"};
  paddle::small_vector<const char*> attrs;
  attrs.emplace_back("share_dims_and_dtype");
  paddle::small_vector<const char*> outputs {"Out", "XOut"};
  KernelSignature sig("share_buffer", std::move(inputs), std::move(attrs), std::move(outputs));
  return sig;
}

/*
******************************************************************
NOTE: The following codes are for 'get_compat_kernel_signature.py'
All possible KernelSignatures returned by ShareBufferOpArgumentMapping:

return KernelSignature("share_buffer", {"X"}, {"share_dims_and_dtype"}, {"Out", "XOut"});
******************************************************************
*/

}  // namespace phi

PD_REGISTER_ARG_MAPPING_FN(share_buffer, phi::ShareBufferOpArgumentMapping);
