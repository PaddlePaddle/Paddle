// Copyright (c) 2023 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
  Generated by gemm_operation.py - Do not edit.
*/
#pragma once
#ifdef PADDLE_WITH_CUTLASS

namespace phi {
namespace sparse {

// Gemm operator cutlass_tensorop_s1688gemm_f16_256x128_32x2_nn_align8
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_f16_256x128_32x2_nn_align8 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm75,
      cutlass::gemm::GemmShape<256, 128, 32>,
      cutlass::gemm::GemmShape<64, 64, 32>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      2,
      8,
      8,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_h1688gemm_256x128_32x2_nn_align8
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_h1688gemm_256x128_32x2_nn_align8 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm75,
      cutlass::gemm::GemmShape<256, 128, 32>,
      cutlass::gemm::GemmShape<64, 64, 32>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<cutlass::half_t,
                                                   8,
                                                   cutlass::half_t,
                                                   cutlass::half_t>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      2,
      8,
      8,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_h16816gemm_256x128_32x3_nn_align8
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_h16816gemm_256x128_32x3_nn_align8 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::layout::RowMajor,
      cutlass::half_t,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 32>,
      cutlass::gemm::GemmShape<64, 64, 32>,
      cutlass::gemm::GemmShape<16, 8, 16>,

      cutlass::epilogue::thread::LinearCombination<cutlass::half_t,
                                                   8,
                                                   cutlass::half_t,
                                                   cutlass::half_t>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      8,
      8,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_tf32_256x128_16x3_nn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_tf32_256x128_16x3_nn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_tf32_256x128_16x3_nt_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_tf32_256x128_16x3_nt_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::ColumnMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_tf32_256x128_16x3_tn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_tf32_256x128_16x3_tn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::ColumnMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,  // gather a
      true,  // gather b
      false  // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_nn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_nn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::
          LinearCombination<cutlass::tfloat32_t, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_nt_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_nt_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::ColumnMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::
          LinearCombination<cutlass::tfloat32_t, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_tn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_tf32_s1688gemm_tf32_256x128_16x3_tn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      cutlass::tfloat32_t,
      cutlass::layout::ColumnMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      cutlass::tfloat32_t,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::
          LinearCombination<cutlass::tfloat32_t, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,  // gather a
      true,  // gather b
      false  // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688tf32gemm_256x128_16x3_nn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688tf32gemm_256x128_16x3_nn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688tf32gemm_256x128_16x3_nt_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688tf32gemm_256x128_16x3_nt_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::ColumnMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688tf32gemm_256x128_16x3_tn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688tf32gemm_256x128_16x3_tn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::ColumnMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<256, 128, 16>,
      cutlass::gemm::GemmShape<64, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      3,
      4,
      4,
      cutlass::arch::OpMultiplyAdd,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,  // gather a
      true,  // gather b
      false  // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_128x128_16x4_nn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_128x128_16x4_nn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<128, 128, 16>,
      cutlass::gemm::GemmShape<32, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      4,
      4,
      4,
      cutlass::arch::OpMultiplyAddFastF32,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_128x128_16x4_nt_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_128x128_16x4_nt_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::ColumnMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<128, 128, 16>,
      cutlass::gemm::GemmShape<32, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      4,
      4,
      4,
      cutlass::arch::OpMultiplyAddFastF32,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,   // gather a
      false,  // gather b
      true    // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

// Gemm operator cutlass_tensorop_s1688gemm_128x128_16x4_tn_align4
template <cutlass::gemm::GemmUniversalMode Mode_ =
              cutlass::gemm::GemmUniversalMode::kGemm>
struct cutlass_tensorop_s1688gemm_128x128_16x4_tn_align4 {
  using Gemm = cutlass::gemm::device::GemmUniversal<
      float,
      cutlass::layout::ColumnMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::layout::RowMajor,
      float,
      cutlass::arch::OpClassTensorOp,
      cutlass::arch::Sm80,
      cutlass::gemm::GemmShape<128, 128, 16>,
      cutlass::gemm::GemmShape<32, 64, 16>,
      cutlass::gemm::GemmShape<16, 8, 8>,

      cutlass::epilogue::thread::LinearCombination<float, 4, float, float>,
      cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<8>,
      4,
      4,
      4,
      cutlass::arch::OpMultiplyAddFastF32,
      cutlass::ComplexTransform::kNone,
      cutlass::ComplexTransform::kNone,
      true,  // gather a
      true,  // gather b
      false  // scatter d
      >;
  static const cutlass::gemm::GemmUniversalMode Mode = Mode_;
};

}  // namespace sparse
}  // namespace phi
#endif
