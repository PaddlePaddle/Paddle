- name: assign_value
  inputs: []
  attrs:
  - {typename: 'int[]', name: shape}
  - {typename: DataType, name: dtype}
  - {typename: 'Scalar[]', name: values, data_type: 'std::vector<Scalar>'}
  - {typename: Place, name: place, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AssignValueInferMeta
    param: [shape, dtype]
  kernel:
    func: [assign_value]
    param: [shape, dtype, values]
    backend:
      ordered: true
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {assign_value: null}
    force_backend: null
  inplace: null
  view: null
  backward: null

- name: feed
  inputs: []
  attrs:
  - {typename: str, name: name}
  - {typename: int, name: col}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  inplace: null
  backward: null

- name: fetch
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: name}
  - {typename: int, name: col}
  outputs:
    - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [fetch]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  inplace: null
  backward: null

- name: save_combine
  inputs:
  - typename: Tensor[]
    name: X
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: file_path}
  - {typename: bool, name: overwrite}
  - {typename: bool, name: save_as_fp16}
  - {typename: bool, name: save_to_memory}
  outputs:
    - {typename: Tensor, name: out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  kernel:
    func: [save_combine_tensor]
    param: [X, file_path, overwrite, save_as_fp16, save_to_memory]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  inplace: null
  backward: null

- name: load_combine
  inputs: []
  attrs:
  - {typename: str, name: file_path}
  - {typename: bool, name: load_as_fp16}
  - {typename: bool, name: model_from_memory}
  outputs:
    - {typename: 'Tensor[]', name: Out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  kernel:
    func: [load_combine]
    param: [file_path, load_as_fp16, model_from_memory]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  inplace: null
  backward: null

- name: share_buffer_
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'bool[]', name: share_dims_and_dtype, default_value: '{}'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: x.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: xout, size: x.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  inplace: null
  backward: null

- name: assert
  inputs:
  - typename: Tensor
    name: cond
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: data
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t', name: summarize, default_value: '-1'}
  outputs: []
  no_need_buffer: null
  data_transform: null
  kernel:
    func: [assert]
    param: [cond, data, summarize]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [cond]
      to_complex_flag: [false]
    dispatch: {assert: null}
    force_backend: null
  inplace: null
  backward: null

- name: print
  inputs:
  - typename: Tensor
    name: in
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int', name: first_n}
  - {typename: 'str', name: message}
  - {typename: 'int', name: summarize}
  - {typename: 'bool', name: print_tensor_name, default_value: 'true'}
  - {typename: 'bool', name: print_tensor_type, default_value: 'true'}
  - {typename: 'bool', name: print_tensor_shape, default_value: 'true'}
  - {typename: 'bool', name: print_tensor_layout, default_value: 'true'}
  - {typename: 'bool', name: print_tensor_lod, default_value: 'true'}
  - {typename: 'str', name: print_phase, default_value: '"BOTH"'}
  - {typename: 'bool', name: is_forward, default_value: 'true'}
  outputs:
    - typename: Tensor
      name: out
      optional: false
      no_need_buffer: false
      data_transform: {}
  infer_meta:
    func: UnchangedInferMeta
    param: [in]
  kernel:
    func: [print_kernel]
    param: [in, first_n, message, summarize, print_tensor_name, print_tensor_type, print_tensor_shape, print_tensor_layout, print_tensor_lod, print_phase, is_forward ]
    backend: null
    layout: null
    data_type: null
    dispatch: {print: null}
    force_backend: null
  no_need_buffer: null
  data_transform: null
  inplace: null
  backward: null

- name: add_n_
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AddNInferMeta
    param: [inputs]
  kernel:
    func: [add_n]
    param: [inputs]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  backward: add_n_grad

- name: add_n_with_kernel
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AddNInferMeta
    param: [inputs]
  kernel:
    func: [add_n]
    param: [inputs]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  backward: add_n_grad

- name: write_to_array
  inputs:
  - typename: Tensor
    name: i
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  backward: write_to_array_grad

- name: lod_array_length
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor', name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null

- name: embedding_grad_sparse
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: padding_idx, default_value: '-1'}
  - {typename: bool, name: sparse, default_value: 'false'}
  outputs:
  - {typename: SelectedRows, name: weight_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EmbeddingGradSparseInferMeta
    param: [weight]
  kernel:
    func: [embedding_sparse_grad]
    param: [x, weight, out_grad, padding_idx, sparse]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch: {embedding_sparse_grad: null}
    force_backend: null
  inplace: null
  view: null
  backward: null

- name: shadow_feed
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
    - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [shadow_feed]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {fetch: null}
    force_backend: null
  inplace: null
  backward: null

- name: send_v2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: peer, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  - {typename: bool, name: dynamic_shape, default_value: 'false'}
  outputs: []
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SendV2InferMeta
    param: [peer, ring_id]
  kernel:
    func: [send_v2]
    param: [x, ring_id, dynamic_shape, peer, use_calc_stream]
    backend: null
    layout: null
    data_type: null
    dispatch: {send_v2: null}
    force_backend: null
  inplace: null
  view: null
  backward: null

- name: recv_v2
  inputs: []
  attrs:
  - {typename: 'int[]', name: out_shape, default_value: '{}'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: int, name: peer, default_value: '0'}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: bool, name: use_calc_stream, default_value: 'false'}
  - {typename: bool, name: dynamic_shape, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RecvV2InferMeta
    param: [ring_id, dynamic_shape, peer, out_shape, dtype]
  kernel:
    func: [recv_v2]
    param: [ring_id, dynamic_shape, peer, out_shape, dtype, use_calc_stream]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {recv_v2: null}
    force_backend: null
  inplace: null
  view: null
  backward: null

- name : set_value
  inputs:
    - {typename: Tensor, name: x, optional: false, no_need_buffer: false, data_transform: {} }
  attrs:
    - {typename: 'int64_t[]', name: starts}
    - {typename: 'int64_t[]', name: ends}
    - {typename: 'int64_t[]', name: steps}
    - {typename: 'int64_t[]', name: axes}
    - {typename: 'int64_t[]', name: decrease_axes}
    - {typename: 'int64_t[]', name: none_axes}
    - {typename: 'int64_t[]', name: shape}
    - {typename: 'Scalar[]', name: values}
  outputs:
    - {typename: Tensor, name: out, optional: false, intermediate: false}
  infer_meta:
    func: SetValueInferMeta
    param: [x]
  kernel:
    func: [set_value]
    param: [x, starts, ends, steps, axes, decrease_axes, none_axes, shape, values]
  inplace: {out: x}
  backward: set_value_grad

- name : set_value_with_tensor
  inputs:
    - {typename: Tensor, name: x, optional: false, no_need_buffer: false, data_transform: {} }
    - {typename: Tensor, name: values, optional: false, no_need_buffer: false, data_transform: {} }
  attrs:
    - {typename: 'int64_t[]', name: starts}
    - {typename: 'int64_t[]', name: ends}
    - {typename: 'int64_t[]', name: steps}
    - {typename: 'int64_t[]', name: axes}
    - {typename: 'int64_t[]', name: decrease_axes}
    - {typename: 'int64_t[]', name: none_axes}
  outputs:
    - {typename: Tensor, name: out, optional: false, intermediate: false}
  infer_meta:
    func: SetValueInferMeta
    param: [x]
  kernel:
    func: [set_value_with_tensor]
    param: [x, values, starts, ends, steps, axes, decrease_axes, none_axes]
  inplace: {out: x}
  backward: set_value_grad


- name : set_value_grad
  inputs:
    - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false, data_transform: {} }
    - {typename: Tensor, name: values, optional: false, no_need_buffer: false, data_transform: {} }
  attrs:
    - {typename: 'int64_t[]', name: starts}
    - {typename: 'int64_t[]', name: ends}
    - {typename: 'int64_t[]', name: steps}
    - {typename: 'int64_t[]', name: axes}
    - {typename: 'int64_t[]', name: decrease_axes}
    - {typename: 'int64_t[]', name: none_axes}
  outputs:
    - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
    - {typename: Tensor, name: values_grad, optional: false, intermediate: false}
  infer_meta:
    func: SetValueGradInferMeta
    param: [out_grad, values]
  kernel:
    func: [set_value_grad]
    param: [out_grad, starts, ends, steps, axes, decrease_axes, none_axes]
  inplace: null
  backward: null
