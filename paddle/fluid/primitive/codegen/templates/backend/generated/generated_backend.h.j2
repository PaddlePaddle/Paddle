{% import "common.j2" as common %}
// Auto Generated, DO NOT EDIT!

#pragma once

#include <string>
#include <vector>

#include "paddle/phi/api/include/tensor.h"


namespace paddle {
namespace primitive {
namespace backend {

using Tensor = paddle::Tensor;
using Scalar = paddle::experimental::Scalar;
using IntArray = paddle::experimental::IntArray;
using DataType = phi::DataType;

{% for api in apis %}
  {%- if api.name in backend_white_list -%}
  {% if api.attrs is exist_mutable_attribute %}
{{common.sig(api.name, api.inputs, api.outputs|trip_intermediate , api.attrs, True, True)}};

  {% endif %}
{{common.sig(api.name, api.inputs, api.outputs|trip_intermediate , api.attrs, False, True)}};

  {% endif %}
{% endfor %}
}  // namespace backend
}  // namespace primitive
}  // namespace paddle
