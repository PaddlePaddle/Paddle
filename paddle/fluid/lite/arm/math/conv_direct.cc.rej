--- paddle/fluid/lite/arm/math/conv_direct.cc
+++ paddle/fluid/lite/arm/math/conv_direct.cc
@@ -67,13 +67,13 @@ bool DirectConv<kFloat>::create(const operators::ConvParam& param,
 
 template <>
 bool DirectConv<kFloat>::init(const operators::ConvParam& param,
-                              Context<kARM>* ctx) {
+                              Context<TARGET(kARM)>* ctx) {
   this->ctx_ = &ctx;
   return create(inputs, outputs, param, ctx);
 }
 
 template <>
-bool DirectConv<kFloat>::run(operators::ConvParam& param) {
+bool DirectConv<kFloat>::run(const operators::ConvParam& param) {
   // start timer
   const auto* i_data = param.x->data<float>();
   const auto* w_data = param.filter->data<float>();
@@ -104,7 +104,7 @@ bool DirectConv<kFloat>::run(operators::ConvParam& param) {
 
 // template <>
 // bool DirectConv<kInt8>::create(const
-//                                  operators::ConvParam& param, Context<kARM>&
+//                                  operators::ConvParam& param, Context<TARGET(kARM)>&
 //                                  ctx) {
 //   this->ctx_ = &ctx;
 //   int kw = param.weight()->width();
@@ -175,7 +175,7 @@ bool DirectConv<kFloat>::run(operators::ConvParam& param) {
 
 // template <>
 // bool DirectConv<kInt8>::init(const
-//                                operators::ConvParam& param, Context<kARM>&
+//                                operators::ConvParam& param, Context<TARGET(kARM)>&
 //                                ctx) {
 //   this->ctx_ = &ctx;
 //   return create(inputs, outputs, param, ctx);
