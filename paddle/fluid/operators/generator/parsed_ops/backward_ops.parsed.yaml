- name: abs_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  attrs: []
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [x, grad_x_grad]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [abs_double_grad]
    param: [x, grad_x_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [grad_x_grad]
      to_complex_flag: [false]
    dispatch: {abs_double_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: abs_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: abs_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [abs_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {abs_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: abs_grad, func_args: 'x, out_grad, x_grad'}
  backward: abs_double_grad
  forward:
    name: abs
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: acos_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [acos_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {acos_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: acos
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: acosh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [acosh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {acosh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: acosh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: addmm_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  - {typename: float, name: beta}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [addmm_grad]
    param: [input, x, y, out_grad, alpha, beta]
    backend: null
    layout: null
    data_type: null
    dispatch: {addmm_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [input, x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: addmm
    inputs:
    - {name: input, typename: Tensor}
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: beta, typename: float}
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: affine_grid_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: output_shape, data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [affine_grid_grad]
    param: [output_grad, output_shape, align_corners]
    backend: null
    layout: null
    data_type: null
    dispatch: {affine_grid_grad: null}
    force_backend: null
  infer_meta:
    func: AffineGridGradInferMeta
    param: [output_grad, output_shape, align_corners]
  inplace: null
  view: null
  backward: null
  forward:
    name: affine_grid
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: output_shape, typename: IntArray}
    - {name: align_corners, typename: bool}
    outputs:
    - {name: output, typename: Tensor}
- name: angle_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [angle_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {angle_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: angle
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: argsort_grad
  inputs:
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: bool, name: descending}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [argsort_grad]
    param: [indices, x, out_grad, axis, descending]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {argsort_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: argsort
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: descending, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: as_complex_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: as_real, args: out_grad}
  backward: null
  forward:
    name: as_complex
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: as_real_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: as_complex, args: out_grad}
  backward: null
  forward:
    name: as_real
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: as_strided_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  - {typename: 'int64_t[]', name: stride, default_value: '{}'}
  - {typename: int64_t, name: offset, default_value: '0'}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [as_strided_grad]
    param: [input, out_grad, dims, stride, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_strided_grad: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: as_strided
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: dims, typename: 'int64_t[]'}
    - {name: stride, typename: 'int64_t[]'}
    - {name: offset, typename: int64_t}
    outputs:
    - {name: out, typename: Tensor}
- name: asin_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [asin_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {asin_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: asin
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: asinh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [asinh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {asinh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: asinh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atan2_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atan2_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan2_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: atan2
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atan_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atan_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: atan
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atanh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [atanh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atanh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: atanh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: bce_loss_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bce_loss_grad]
    param: [input, label, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {bce_loss_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  inplace: {input_grad: out_grad}
  view: null
  backward: null
  forward:
    name: bce_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: bicubic_interp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format}
  - {typename: int, name: out_d}
  - {typename: int, name: out_h}
  - {typename: int, name: out_w}
  - {typename: 'float[]', name: scale}
  - {typename: str, name: interp_method}
  - {typename: bool, name: align_corners}
  - {typename: int, name: align_mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bicubic_interp_grad]
    param: [x, out_size, size_tensor, scale_tensor, output_grad, data_format, out_d,
      out_h, out_w, scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {bicubic_interp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: bicubic_interp
    inputs:
    - {name: x, typename: Tensor}
    - {name: out_size, typename: Tensor}
    - {name: size_tensor, typename: 'Tensor[]'}
    - {name: scale_tensor, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: out_d, typename: int}
    - {name: out_h, typename: int}
    - {name: out_w, typename: int}
    - {name: scale, typename: 'float[]'}
    - {name: interp_method, typename: str}
    - {name: align_corners, typename: bool}
    - {name: align_mode, typename: int}
    outputs:
    - {name: output, typename: Tensor}
- name: bilinear_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: weight_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bilinear_grad]
    param: [x, y, weight, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {bilinear_grad: null}
    force_backend: null
  infer_meta:
    func: BilinearGradInferMeta
    param: [x, y, weight, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: bilinear
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: weight, typename: Tensor}
    - {name: bias, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: bilinear_interp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format}
  - {typename: int, name: out_d}
  - {typename: int, name: out_h}
  - {typename: int, name: out_w}
  - {typename: 'float[]', name: scale}
  - {typename: str, name: interp_method}
  - {typename: bool, name: align_corners}
  - {typename: int, name: align_mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bilinear_interp_grad]
    param: [x, out_size, size_tensor, scale_tensor, output_grad, data_format, out_d,
      out_h, out_w, scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {bilinear_interp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: bilinear_interp
    inputs:
    - {name: x, typename: Tensor}
    - {name: out_size, typename: Tensor}
    - {name: size_tensor, typename: 'Tensor[]'}
    - {name: scale_tensor, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: out_d, typename: int}
    - {name: out_h, typename: int}
    - {name: out_w, typename: int}
    - {name: scale, typename: 'float[]'}
    - {name: interp_method, typename: str}
    - {name: align_corners, typename: bool}
    - {name: align_mode, typename: int}
    outputs:
    - {name: output, typename: Tensor}
- name: bmm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bmm_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {bmm_grad: null}
    force_backend: null
  infer_meta:
    func: BmmGradInferMeta
    param: [x, y, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: bmm
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: broadcast_tensors_grad
  inputs:
  - typename: Tensor[]
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor[]
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: input_grad, size: input.size(), optional: false,
    intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [broadcast_tensors_grad]
    param: [input, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {broadcast_tensors_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedMultiInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: broadcast_tensors
    inputs:
    - {name: input, typename: 'Tensor[]'}
    attrs: []
    outputs:
    - {name: out, typename: 'Tensor[]'}
- name: ceil_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [ceil_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {ceil_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: ceil
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: celu_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [celu_double_grad]
    param: [x, grad_out, grad_x_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: celu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: celu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [celu_grad]
    param: [x, out_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: celu_double_grad
  forward:
    name: celu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cholesky_grad]
    param: [out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: null
  view: null
  backward: null
  forward:
    name: cholesky
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_solve_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cholesky_solve_grad]
    param: [x, y, out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_solve_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: cholesky_solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: clip_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: min, default_value: '0.', data_type: float}
  - {typename: Scalar, name: max, default_value: '0.', data_type: float}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [clip_grad]
    param: [x, grad_x_grad, min, max]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {clip_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: clip_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: min, typename: Scalar}
    - {name: max, typename: Scalar}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: clip_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: min, default_value: '0.', data_type: float}
  - {typename: Scalar, name: max, default_value: '0.', data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [clip_grad]
    param: [x, out_grad, min, max]
    backend: null
    layout: null
    data_type: null
    dispatch: {clip_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: clip_double_grad
  forward:
    name: clip
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: min, typename: Scalar}
    - {name: max, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: complex_grad
  inputs:
  - typename: Tensor
    name: real
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: imag
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: real_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: imag_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [complex_grad]
    param: [real, imag, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [real]
      to_complex_flag: [false]
    dispatch: {complex_grad: null}
    force_backend: null
  infer_meta:
    func: ComplexGradInferMeta
    param: [real, imag, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: complex
    inputs:
    - {name: real, typename: Tensor}
    - {name: imag, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: concat_double_grad
  inputs:
  - typename: Tensor[]
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: concat, args: 'grad_x_grad, axis'}
  backward: null
  forward:
    name: concat_grad
    inputs:
    - {name: x, typename: 'Tensor[]'}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: axis, typename: Scalar}
    outputs:
    - {name: grad_x, typename: 'Tensor[]'}
- name: concat_grad
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: 'Tensor[]', name: x_grad, size: x.size(), optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [concat_grad]
    param: [x, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {concat_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedMultiInferMeta
    param: [x]
    spmd_rule: ConcatGradInferSpmdDynamic
  inplace: null
  view: null
  composite: {func_name: concat_grad, func_args: 'x, out_grad, axis, x_grad'}
  backward: concat_double_grad
  forward:
    name: concat
    inputs:
    - {name: x, typename: 'Tensor[]'}
    attrs:
    - {name: axis, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: conj_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: conj, args: out_grad}
  backward: null
  forward:
    name: conj
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: conv2d_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: 'int[]', name: dilations}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_grad]
    param: [input, filter, out_grad, strides, paddings, padding_algorithm, dilations,
      groups, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv2d_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [input, filter]
  inplace: null
  view: null
  backward: conv2d_grad_grad
  forward:
    name: conv2d
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: dilations, typename: 'int[]'}
    - {name: groups, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: conv2d_grad_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_input_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_filter_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: 'int[]', name: dilations}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_double_grad]
    param: [input, filter, grad_out, grad_input_grad, grad_filter_grad, strides, paddings,
      padding_algorithm, dilations, groups, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv2d_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [input, filter, grad_out]
  inplace: null
  view: null
  backward: null
  forward:
    name: conv2d_grad
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: dilations, typename: 'int[]'}
    - {name: groups, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: grad_input, typename: Tensor}
    - {name: grad_filter, typename: Tensor}
- name: conv3d_double_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_input_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_filter_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv3d_double_grad]
    param: [input, filter, grad_out, grad_input_grad, grad_filter_grad, strides, paddings,
      padding_algorithm, groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv3d_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [input, filter, grad_out]
  inplace: null
  view: null
  backward: null
  forward:
    name: conv3d_grad
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: groups, typename: int}
    - {name: dilations, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: grad_input, typename: Tensor}
    - {name: grad_filter, typename: Tensor}
- name: conv3d_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv3d_grad]
    param: [input, filter, out_grad, strides, paddings, padding_algorithm, groups,
      dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {conv3d_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [input, filter]
  inplace: null
  view: null
  backward: conv3d_double_grad
  forward:
    name: conv3d
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: groups, typename: int}
    - {name: dilations, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: conv3d_transpose_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: output_padding}
  - {typename: 'int[]', name: output_size}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv3d_transpose_grad]
    param: [x, filter, out_grad, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv3d_transpose_grad: null}
    force_backend: null
  infer_meta:
    func: ConvTransposeGradInferMeta
    param: [x, filter, out_grad, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
  inplace: null
  view: null
  backward: null
  forward:
    name: conv3d_transpose
    inputs:
    - {name: x, typename: Tensor}
    - {name: filter, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: output_padding, typename: 'int[]'}
    - {name: output_size, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: groups, typename: int}
    - {name: dilations, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: copysign_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [copysign_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {copysign_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: copysign
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: cos_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cos_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: cos_triple_grad
  forward:
    name: cos_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: cos_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cos_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: cos_grad, func_args: 'x, out_grad, x_grad'}
  backward: cos_double_grad
  forward:
    name: cos
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: cos_triple_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_forward
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad_forward
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_grad_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cos_triple_grad]
    param: [x, grad_out_forward, grad_x_grad_forward, grad_x_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_triple_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [x, x, grad_x_grad_forward]
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  view: null
  backward: null
  forward:
    name: cos_double_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: cosh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cosh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cosh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: cosh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: crop_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: offsets, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [crop_grad]
    param: [x, out_grad, offsets]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {crop_grad: null}
    force_backend: null
  infer_meta:
    func: CropGradInferMeta
    param: [x, out_grad, offsets]
  inplace: null
  view: null
  backward: null
  forward:
    name: crop
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: shape, typename: IntArray}
    - {name: offsets, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
- name: cross_entropy_with_softmax_grad
  inputs:
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: softmax
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: loss_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: soft_label}
  - {typename: bool, name: use_softmax}
  - {typename: bool, name: numeric_stable_mode}
  - {typename: int, name: ignore_index}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cross_entropy_with_softmax_grad]
    param: [label, softmax, loss_grad, soft_label, use_softmax, numeric_stable_mode,
      ignore_index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [loss_grad]
      to_complex_flag: [false]
    dispatch: {cross_entropy_with_softmax_grad: null}
    force_backend: null
  infer_meta:
    func: CrossEntropyWithSoftmaxGradInferMeta
    spmd_rule: CrossEntropyWithSoftmaxGradInferSpmd
    param: [label, softmax, loss_grad, soft_label, use_softmax, numeric_stable_mode,
      ignore_index, axis]
  inplace: {input_grad: softmax}
  view: null
  backward: null
  forward:
    name: cross_entropy_with_softmax
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: soft_label, typename: bool}
    - {name: use_softmax, typename: bool}
    - {name: numeric_stable_mode, typename: bool}
    - {name: ignore_index, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: softmax, typename: Tensor}
    - {name: loss, typename: Tensor}
- name: cross_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cross_grad]
    param: [x, y, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {cross_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: cross
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: cummax_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cummax_grad]
    param: [x, indices, out_grad, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {cummax_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: cummax
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: dtype, typename: DataType}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: cummin_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cummin_grad]
    param: [x, indices, out_grad, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {cummin_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: cummin
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: dtype, typename: DataType}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: cumprod_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cumprod_grad]
    param: [x, out, out_grad, dim]
    backend: null
    layout: null
    data_type: null
    dispatch: {cumprod_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: cumprod
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: dim, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: cumsum_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, data_type: float}
  - {typename: bool, name: flatten}
  - {typename: bool, name: exclusive}
  - {typename: bool, name: reverse}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [cumsum_grad]
    param: [x, out_grad, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cumsum_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: cumsum_grad, func_args: 'x, out_grad, axis, flatten, exclusive,
      reverse, x_grad'}
  backward: null
  forward:
    name: cumsum
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: Scalar}
    - {name: flatten, typename: bool}
    - {name: exclusive, typename: bool}
    - {name: reverse, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: depthwise_conv2d_double_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_input_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_filter_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [depthwise_conv2d_double_grad]
    param: [input, filter, grad_out, grad_input_grad, grad_filter_grad, strides, paddings,
      padding_algorithm, groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {depthwise_conv2d_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [input, filter, grad_out]
  inplace: null
  view: null
  backward: null
  forward:
    name: depthwise_conv2d_grad
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: groups, typename: int}
    - {name: dilations, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: grad_input, typename: Tensor}
    - {name: grad_filter, typename: Tensor}
- name: depthwise_conv2d_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: filter_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [depthwise_conv2d_grad]
    param: [input, filter, out_grad, strides, paddings, padding_algorithm, groups,
      dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {depthwise_conv2d_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [input, filter]
  inplace: null
  view: null
  backward: depthwise_conv2d_double_grad
  forward:
    name: depthwise_conv2d
    inputs:
    - {name: input, typename: Tensor}
    - {name: filter, typename: Tensor}
    attrs:
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: padding_algorithm, typename: str}
    - {name: groups, typename: int}
    - {name: dilations, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: det_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [determinant_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {determinant_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: det
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: diag_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [diag_grad]
    param: [x, out_grad, offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {diag_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: diag
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: padding_value, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: diagonal_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [diagonal_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {diagonal_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: diagonal
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: digamma_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [digamma_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {digamma_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: digamma
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: dist_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dist_grad]
    param: [x, y, out, out_grad, p]
    backend: null
    layout: null
    data_type: null
    dispatch: {dist_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: dist
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: p, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: dot_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dot_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {dot_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: dot
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: eig_grad
  inputs:
  - typename: Tensor
    name: out_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_w_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_v_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eig_grad]
    param: [out_w, out_v, out_w_grad, out_v_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_v]
      to_complex_flag: [false]
    dispatch: {eig_grad: null}
    force_backend: null
  infer_meta:
    func: EigGradInferMeta
    param: [out_w, out_v, out_w_grad, out_v_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: eig
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out_w, typename: Tensor}
    - {name: out_v, typename: Tensor}
- name: eigh_grad
  inputs:
  - typename: Tensor
    name: out_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_w_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_v_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eigh_grad]
    param: [out_w, out_v, out_w_grad, out_v_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_v]
      to_complex_flag: [false]
    dispatch: {eigh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_v]
  inplace: null
  view: null
  backward: null
  forward:
    name: eigh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: UPLO, typename: str}
    outputs:
    - {name: out_w, typename: Tensor}
    - {name: out_v, typename: Tensor}
- name: eigvalsh_grad
  inputs:
  - typename: Tensor
    name: eigenvectors
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: eigenvalues_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: uplo}
  - {typename: bool, name: is_test}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [eigvalsh_grad]
    param: [eigenvectors, eigenvalues_grad, uplo, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [eigenvectors]
      to_complex_flag: [false]
    dispatch: {eigvalsh_grad: null}
    force_backend: null
  infer_meta:
    func: EigvalshGradInferMeta
    param: [eigenvectors, eigenvalues_grad, uplo, is_test]
  inplace: null
  view: null
  backward: null
  forward:
    name: eigvalsh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: uplo, typename: str}
    - {name: is_test, typename: bool}
    outputs:
    - {name: eigenvalues, typename: Tensor}
    - {name: eigenvectors, typename: Tensor}
- name: elu_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [elu_double_grad]
    param: [x, grad_out, grad_x_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: elu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: elu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [elu_grad]
    param: [x, out, out_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: elu_double_grad
  forward:
    name: elu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: erf_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [erf_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {erf_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: erf_grad, func_args: 'x, out_grad, x_grad'}
  backward: null
  forward:
    name: erf
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: erfinv_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [erfinv_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {erfinv_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: null
  view: null
  backward: null
  forward:
    name: erfinv
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: exp_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [exp_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {exp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: exp_grad, func_args: 'out, out_grad, x_grad'}
  backward: null
  forward:
    name: exp
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: expand_as_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: target_shape}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [expand_as_grad]
    param: [x, out_grad, target_shape]
    backend: null
    layout: null
    data_type: null
    dispatch: {expand_as_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: expand_as
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: target_shape, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: expand_double_grad
  inputs:
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: expand, args: 'grad_x_grad, shape'}
  backward: null
  forward:
    name: expand_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: shape, typename: IntArray}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: expand_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [expand_grad]
    param: [x, out_grad, shape]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {expand_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: expand_grad, func_args: 'x, out_grad, shape, x_grad'}
  backward: expand_double_grad
  forward:
    name: expand
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: shape, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
- name: expm1_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [expm1_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {expm1_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: expm1
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fft_c2c_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_c2c_grad]
    param: [out_grad, axes, normalization, forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2c_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: fft_c2c
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fft_c2r_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: int64_t, name: last_dim_size}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_c2r_grad]
    param: [out_grad, axes, normalization, forward, last_dim_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fft_c2r_grad: null}
    force_backend: null
  infer_meta:
    func: FFTC2RGradInferMeta
    param: [out_grad, axes, normalization, forward, last_dim_size]
  inplace: null
  view: null
  backward: null
  forward:
    name: fft_c2r
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    - {name: last_dim_size, typename: int64_t}
    outputs:
    - {name: out, typename: Tensor}
- name: fft_r2c_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: bool, name: onesided}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fft_r2c_grad]
    param: [x, out_grad, axes, normalization, forward, onesided]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fft_r2c_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: fft_r2c
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    - {name: onesided, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fill_diagonal_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: value}
  - {typename: int, name: offset}
  - {typename: bool, name: wrap}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill_diagonal_grad]
    param: [out_grad, value, offset, wrap]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_grad: null}
    force_backend: null
  infer_meta:
    func: FillDiagonalGradInferMeta
    param: [out_grad, value, offset, wrap]
  inplace: null
  view: null
  backward: null
  forward:
    name: fill_diagonal
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: value, typename: float}
    - {name: offset, typename: int}
    - {name: wrap, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fill_diagonal_tensor_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: offset}
  - {typename: int, name: dim1}
  - {typename: int, name: dim2}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill_diagonal_tensor_grad]
    param: [out_grad, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_tensor_grad: null}
    force_backend: null
  infer_meta:
    func: FillDiagonalTensorGradInferMeta
    param: [out_grad, offset, dim1, dim2]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: fill_diagonal_tensor
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: offset, typename: int64_t}
    - {name: dim1, typename: int}
    - {name: dim2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: fill_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: value, data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fill_grad]
    param: [out_grad, value]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: fill
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: value, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: flash_attn_grad
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: softmax_lse
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_offset
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: q_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: k_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: v_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flash_attn_grad]
    param: [q, k, v, out, softmax_lse, seed_offset, attn_mask, out_grad, dropout,
      causal]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn_grad: null}
    force_backend: null
  infer_meta:
    func: FlashAttnGradInferMeta
    param: [q, k, v]
    spmd_rule: FlashAttGradInferSpmd
  inplace: null
  view: null
  backward: null
  forward:
    name: flash_attn
    inputs:
    - {name: q, typename: Tensor}
    - {name: k, typename: Tensor}
    - {name: v, typename: Tensor}
    - {name: fixed_seed_offset, typename: Tensor}
    - {name: attn_mask, typename: Tensor}
    attrs:
    - {name: dropout, typename: float}
    - {name: causal, typename: bool}
    - {name: return_softmax, typename: bool}
    - {name: is_test, typename: bool}
    - {name: rng_name, typename: str}
    outputs:
    - {name: out, typename: Tensor}
    - {name: softmax, typename: Tensor}
    - {name: softmax_lse, typename: Tensor}
    - {name: seed_offset, typename: Tensor}
- name: flash_attn_unpadded_grad
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: softmax_lse
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_offset
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: max_seqlen_q}
  - {typename: int64_t, name: max_seqlen_k}
  - {typename: float, name: scale}
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: q_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: k_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: v_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flash_attn_unpadded_grad]
    param: [q, k, v, cu_seqlens_q, cu_seqlens_k, out, softmax_lse, seed_offset, attn_mask,
      out_grad, max_seqlen_q, max_seqlen_k, scale, dropout, causal]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn_unpadded_grad: null}
    force_backend: null
  infer_meta:
    func: FlashAttnGradInferMeta
    param: [q, k, v]
  inplace: null
  view: null
  backward: null
  forward:
    name: flash_attn_unpadded
    inputs:
    - {name: q, typename: Tensor}
    - {name: k, typename: Tensor}
    - {name: v, typename: Tensor}
    - {name: cu_seqlens_q, typename: Tensor}
    - {name: cu_seqlens_k, typename: Tensor}
    - {name: fixed_seed_offset, typename: Tensor}
    - {name: attn_mask, typename: Tensor}
    attrs:
    - {name: max_seqlen_q, typename: int64_t}
    - {name: max_seqlen_k, typename: int64_t}
    - {name: scale, typename: float}
    - {name: dropout, typename: float}
    - {name: causal, typename: bool}
    - {name: return_softmax, typename: bool}
    - {name: is_test, typename: bool}
    - {name: rng_name, typename: str}
    outputs:
    - {name: out, typename: Tensor}
    - {name: softmax, typename: Tensor}
    - {name: softmax_lse, typename: Tensor}
    - {name: seed_offset, typename: Tensor}
- name: flatten_grad
  inputs:
  - typename: Tensor
    name: xshape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [flatten_grad]
    param: [xshape, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {flatten_grad: null}
    force_backend: null
  infer_meta:
    func: KernelWithXShapeInferMeta
    param: [xshape, out_grad]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: flatten
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: start_axis, typename: int}
    - {name: stop_axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
    - {name: xshape, typename: Tensor}
- name: flip_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: flip, args: 'out_grad, axis'}
  backward: null
  forward:
    name: flip
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: floor_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [floor_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: floor_grad, func_args: 'out_grad, x_grad'}
  backward: null
  forward:
    name: floor
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fmax_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fmax_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fmax_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: fmax
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fmin_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fmin_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fmin_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: fmin
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fold_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_sizes}
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fold_grad]
    param: [x, out_grad, output_sizes, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fold_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: fold
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: output_sizes, typename: 'int[]'}
    - {name: kernel_sizes, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: dilations, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: fractional_max_pool2d_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_size}
  - {typename: 'int[]', name: kernel_size}
  - {typename: float, name: random_u}
  - {typename: bool, name: return_mask}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fractional_max_pool2d_grad]
    param: [x, mask, out_grad, output_size, kernel_size, random_u, return_mask]
    backend: null
    layout: null
    data_type: null
    dispatch: {fractional_max_pool2d_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: fractional_max_pool2d
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: output_size, typename: 'int[]'}
    - {name: kernel_size, typename: 'int[]'}
    - {name: random_u, typename: float}
    - {name: return_mask, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: mask, typename: Tensor}
- name: fractional_max_pool3d_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_size}
  - {typename: 'int[]', name: kernel_size}
  - {typename: float, name: random_u}
  - {typename: bool, name: return_mask}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fractional_max_pool3d_grad]
    param: [x, mask, out_grad, output_size, kernel_size, random_u, return_mask]
    backend: null
    layout: null
    data_type: null
    dispatch: {fractional_max_pool3d_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: fractional_max_pool3d
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: output_size, typename: 'int[]'}
    - {name: kernel_size, typename: 'int[]'}
    - {name: random_u, typename: float}
    - {name: return_mask, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: mask, typename: Tensor}
- name: frame_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: frame_length}
  - {typename: int, name: hop_length}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [frame_grad]
    param: [x, out_grad, frame_length, hop_length, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {frame_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: frame
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: frame_length, typename: int}
    - {name: hop_length, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: gammaln_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gammaln_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {gammaln_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: gammaln
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: gather_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gather_grad]
    param: [x, index, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {gather_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: gather_grad, func_args: 'x, index, out_grad, axis, x_grad'}
  backward: null
  forward:
    name: gather
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs:
    - {name: axis, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: gather_nd_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gather_nd_grad]
    param: [x, index, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {gather_nd_grad: null}
    force_backend: null
  infer_meta:
    func: GatherNdGradInferMeta
    param: [x, index, out_grad]
  inplace: null
  view: null
  composite: {func_name: gather_nd_grad, func_args: 'x, index, out_grad, x_grad'}
  backward: null
  forward:
    name: gather_nd
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: gaussian_inplace_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mean, default_value: '0'}
  - {typename: float, name: std, default_value: '1.0'}
  - {typename: int, name: seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gaussian_inplace_grad]
    param: [out_grad, mean, std, seed]
    backend: null
    layout: null
    data_type: null
    dispatch: {gaussian_inplace_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: gaussian_inplace
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: mean, typename: float}
    - {name: std, typename: float}
    - {name: seed, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: gelu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: approximate}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gelu_grad]
    param: [x, out_grad, approximate]
    backend: null
    layout: null
    data_type: null
    dispatch: {gelu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: gelu_grad, func_args: 'x, out_grad, approximate, x_grad'}
  backward: null
  forward:
    name: gelu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: approximate, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: grid_sample_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode}
  - {typename: str, name: padding_mode}
  - {typename: bool, name: align_corners}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grid_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [grid_sample_grad]
    param: [x, grid, out_grad, mode, padding_mode, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {grid_sample_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, grid]
  inplace: null
  view: null
  backward: null
  forward:
    name: grid_sample
    inputs:
    - {name: x, typename: Tensor}
    - {name: grid, typename: Tensor}
    attrs:
    - {name: mode, typename: str}
    - {name: padding_mode, typename: str}
    - {name: align_corners, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: group_norm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: scale_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [group_norm_grad]
    param: [x, scale, bias, y, mean, variance, y_grad, epsilon, groups, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [y_grad]
      to_complex_flag: [false]
    dispatch: {group_norm_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [y, scale, bias]
  inplace: {x_grad: y_grad}
  view: null
  composite: {func_name: group_norm_grad, func_args: 'x, scale, bias, y, mean, variance,
      y_grad, epsilon, groups, data_format, x_grad, scale_grad, bias_grad'}
  backward: null
  forward:
    name: group_norm
    inputs:
    - {name: x, typename: Tensor}
    - {name: scale, typename: Tensor}
    - {name: bias, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    - {name: groups, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: y, typename: Tensor}
    - {name: mean, typename: Tensor}
    - {name: variance, typename: Tensor}
- name: gumbel_softmax_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [gumbel_softmax_grad]
    param: [out, out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {gumbel_softmax_grad: null}
    force_backend: null
  infer_meta:
    func: GumbelSoftmaxGradInferMeta
    param: [out, out_grad, axis]
  inplace: null
  view: null
  backward: null
  forward:
    name: gumbel_softmax
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: temperature, typename: float}
    - {name: hard, typename: bool}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: hardshrink_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hard_shrink_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_shrink_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: hardshrink
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: hardsigmoid_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: slope}
  - {typename: float, name: offset}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hardsigmoid_grad]
    param: [out, out_grad, slope, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardsigmoid_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: hardsigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: slope, typename: float}
    - {name: offset, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: hardtanh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: t_min}
  - {typename: float, name: t_max}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [hardtanh_grad]
    param: [x, out_grad, t_min, t_max]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardtanh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: hardtanh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: t_min, typename: float}
    - {name: t_max, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: heaviside_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [heaviside_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {heaviside_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: heaviside
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: huber_loss_grad
  inputs:
  - typename: Tensor
    name: residual
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: delta}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: label_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [huber_loss_grad]
    param: [residual, out_grad, delta]
    backend: null
    layout: null
    data_type: null
    dispatch: {huber_loss_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [residual, residual]
  inplace: null
  view: null
  backward: null
  forward:
    name: huber_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: delta, typename: float}
    outputs:
    - {name: out, typename: Tensor}
    - {name: residual, typename: Tensor}
- name: i0_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i0_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: i0
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: i0e_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i0e_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0e_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: i0e
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: i1_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i1_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: i1
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: i1e_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [i1e_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1e_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: i1e
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: identity_loss_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: reduction}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [identity_loss_grad]
    param: [x, out_grad, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {identity_loss_grad: null}
    force_backend: null
  infer_meta:
    func: IdentityLossGradInferMeta
    param: [x, out_grad, reduction]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: identity_loss
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: reduction, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: imag_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [imag_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [true]
    dispatch: {imag_grad: null}
    force_backend: null
  infer_meta:
    func: RealAndImagGradInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: imag
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: index_add_grad
  inputs:
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: add_value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: add_value_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_add_grad]
    param: [index, add_value, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_add_grad: null}
    force_backend: null
  infer_meta:
    func: IndexAddGradInferMeta
    param: [index, add_value, out_grad, axis]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: index_add
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    - {name: add_value, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: index_put_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor[]
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: bool, name: accumulate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: value_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [indices]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_put_grad]
    param: [x, indices, value, out_grad, accumulate]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_put_grad: null}
    force_backend: null
  infer_meta:
    func: IndexPutGradInferMeta
    param: [x, indices, value, out_grad, accumulate]
  inplace: null
  view: null
  backward: null
  forward:
    name: index_put
    inputs:
    - {name: x, typename: Tensor}
    - {name: indices, typename: 'Tensor[]'}
    - {name: value, typename: Tensor}
    attrs:
    - {name: accumulate, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: index_sample_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_sample_grad]
    param: [x, index, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_sample_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: index_sample
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: index_select_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_select_grad]
    param: [x, index, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_select_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: index_select
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: index_select_strided_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: index}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [index_select_strided_grad]
    param: [x, out_grad, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_select_strided_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: index_select_strided
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: index, typename: int64_t}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: instance_norm_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fwd_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: saved_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: saved_variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_scale_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_bias_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: fwd_scale_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [instance_norm_double_grad]
    param: [x, fwd_scale, saved_mean, saved_variance, grad_y, grad_x_grad, grad_scale_grad,
      grad_bias_grad, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {instance_norm_double_grad: null}
    force_backend: null
  infer_meta:
    func: InstanceNormDoubleGradInferMeta
    param: [x, fwd_scale, saved_mean, saved_variance, grad_y, grad_x_grad, grad_scale_grad,
      grad_bias_grad, epsilon]
  inplace: null
  view: null
  backward: null
  forward:
    name: instance_norm_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: fwd_scale, typename: Tensor}
    - {name: saved_mean, typename: Tensor}
    - {name: saved_variance, typename: Tensor}
    - {name: grad_y, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_scale, typename: Tensor}
    - {name: grad_bias, typename: Tensor}
- name: instance_norm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: saved_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: saved_variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: scale_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [instance_norm_grad]
    param: [x, scale, saved_mean, saved_variance, y_grad, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {instance_norm_grad: null}
    force_backend: null
  infer_meta:
    func: InstanceNormGradInferMeta
    param: [x, scale, saved_mean, saved_variance, y_grad, epsilon]
  inplace: null
  view: null
  composite: {func_name: instance_norm_grad, func_args: 'x, scale, saved_mean, saved_variance,
      y_grad, epsilon, x_grad, scale_grad, bias_grad'}
  backward: instance_norm_double_grad
  forward:
    name: instance_norm
    inputs:
    - {name: x, typename: Tensor}
    - {name: scale, typename: Tensor}
    - {name: bias, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: y, typename: Tensor}
    - {name: saved_mean, typename: Tensor}
    - {name: saved_variance, typename: Tensor}
- name: inverse_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [inverse_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {inverse_grad: null}
    force_backend: null
  infer_meta:
    func: InverseGradInferMeta
    param: [out, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: inverse
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: kldiv_loss_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduction}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kldiv_loss_grad]
    param: [x, label, out_grad, reduction]
    backend: null
    layout: null
    data_type: null
    dispatch: {kldiv_loss_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: kldiv_loss
    inputs:
    - {name: x, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: reduction, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: kron_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kron_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {kron_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: kron
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: kthvalue_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: k}
  - {typename: int, name: axis}
  - {typename: bool, name: keepdim}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [kthvalue_grad]
    param: [x, indices, out_grad, k, axis, keepdim]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {kthvalue_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: kthvalue
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: k, typename: int}
    - {name: axis, typename: int}
    - {name: keepdim, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: label_smooth_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: label_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [label_smooth_grad]
    param: [out_grad, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {label_smooth_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: label_smooth
    inputs:
    - {name: label, typename: Tensor}
    - {name: prior_dist, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: layer_norm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  - {typename: int, name: begin_norm_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: scale_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_grad, optional: false, intermediate: false}
  no_need_buffer: [bias]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [layer_norm_grad]
    param: [x, scale, bias, mean, variance, out_grad, epsilon, begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {layer_norm_grad: null}
    force_backend: null
  infer_meta:
    func: LayerNormGradInferMeta
    spmd_rule: LayerNormGradInferSpmd
    param: [x, scale, bias]
  inplace: null
  view: null
  composite: {func_name: layer_norm_grad, func_args: 'x, scale, bias, mean, variance,
      out_grad, epsilon, begin_norm_axis, x_grad, scale_grad, bias_grad'}
  backward: null
  forward:
    name: layer_norm
    inputs:
    - {name: x, typename: Tensor}
    - {name: scale, typename: Tensor}
    - {name: bias, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    - {name: begin_norm_axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
    - {name: mean, typename: Tensor}
    - {name: variance, typename: Tensor}
- name: leaky_relu_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: negative_slope}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [leaky_relu_double_grad]
    param: [x, grad_x_grad, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu_double_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [grad_x_grad]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: leaky_relu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: negative_slope, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: leaky_relu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: negative_slope}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [leaky_relu_grad]
    param: [x, out_grad, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: leaky_relu_grad, func_args: 'x, out_grad, negative_slope,
      x_grad'}
  backward: leaky_relu_double_grad
  forward:
    name: leaky_relu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: negative_slope, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: lerp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lerp_grad]
    param: [x, y, weight, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {lerp_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: lerp
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: weight, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: lgamma_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lgamma_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {lgamma_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: lgamma
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: linear_interp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format}
  - {typename: int, name: out_d}
  - {typename: int, name: out_h}
  - {typename: int, name: out_w}
  - {typename: 'float[]', name: scale}
  - {typename: str, name: interp_method}
  - {typename: bool, name: align_corners}
  - {typename: int, name: align_mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [linear_interp_grad]
    param: [x, out_size, size_tensor, scale_tensor, output_grad, data_format, out_d,
      out_h, out_w, scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {linear_interp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: linear_interp
    inputs:
    - {name: x, typename: Tensor}
    - {name: out_size, typename: Tensor}
    - {name: size_tensor, typename: 'Tensor[]'}
    - {name: scale_tensor, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: out_d, typename: int}
    - {name: out_h, typename: int}
    - {name: out_w, typename: int}
    - {name: scale, typename: 'float[]'}
    - {name: interp_method, typename: str}
    - {name: align_corners, typename: bool}
    - {name: align_mode, typename: int}
    outputs:
    - {name: output, typename: Tensor}
- name: log10_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log10_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log10_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: log10
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log1p_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log1p_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log1p_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: log1p
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log2_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log2_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log2_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: log2
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: log_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: log_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: log_grad, func_args: 'x, out_grad, x_grad'}
  backward: log_double_grad
  forward:
    name: log
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log_loss_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_loss_grad]
    param: [input, label, out_grad, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_loss_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: log_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: log_softmax_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [log_softmax_grad]
    param: [out, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {log_softmax_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: null
  view: null
  backward: null
  forward:
    name: log_softmax
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: logcumsumexp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: bool, name: flatten}
  - {typename: bool, name: exclusive}
  - {typename: bool, name: reverse}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logcumsumexp_grad]
    param: [x, out, out_grad, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type: null
    dispatch: {logcumsumexp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: logcumsumexp
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: flatten, typename: bool}
    - {name: exclusive, typename: bool}
    - {name: reverse, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: logit_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: eps}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logit_grad]
    param: [x, out_grad, eps]
    backend: null
    layout: null
    data_type: null
    dispatch: {logit_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: logit
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: eps, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: logsigmoid_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [logsigmoid_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsigmoid_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: logsigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: lu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pivots
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pivot}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lu_grad]
    param: [x, out, pivots, out_grad, pivot]
    backend: null
    layout: null
    data_type: null
    dispatch: {lu_grad: null}
    force_backend: null
  infer_meta:
    func: LUGradInferMeta
    param: [x, out, pivots, out_grad, pivot]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: lu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: pivot, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: pivots, typename: Tensor}
    - {name: infos, typename: Tensor}
- name: lu_unpack_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: l
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pmat
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: l_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: unpack_ludata}
  - {typename: bool, name: unpack_pivots}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [lu_unpack_grad]
    param: [x, y, l, u, pmat, l_grad, u_grad, unpack_ludata, unpack_pivots]
    backend: null
    layout: null
    data_type: null
    dispatch: {lu_unpack_grad: null}
    force_backend: null
  infer_meta:
    func: LUUnpackGradInferMeta
    param: [x, y, l, u, pmat, l_grad, u_grad, unpack_ludata, unpack_pivots]
  inplace: null
  view: null
  backward: null
  forward:
    name: lu_unpack
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: unpack_ludata, typename: bool}
    - {name: unpack_pivots, typename: bool}
    outputs:
    - {name: pmat, typename: Tensor}
    - {name: l, typename: Tensor}
    - {name: u, typename: Tensor}
- name: margin_cross_entropy_grad
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: softmax
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: loss_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_softmax}
  - {typename: int, name: ring_id}
  - {typename: int, name: rank}
  - {typename: int, name: nranks}
  - {typename: float, name: margin1}
  - {typename: float, name: margin2}
  - {typename: float, name: margin3}
  - {typename: float, name: scale}
  outputs:
  - {typename: Tensor, name: logits_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [margin_cross_entropy_grad]
    param: [logits, label, softmax, loss_grad, return_softmax, ring_id, rank, nranks,
      margin1, margin2, margin3, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [softmax]
      to_complex_flag: [false]
    dispatch: {margin_cross_entropy_grad: null}
    force_backend: null
  infer_meta:
    func: MarginCrossEntropyGradInferMeta
    param: [logits, label, softmax, loss_grad, return_softmax, ring_id, rank, nranks,
      margin1, margin2, margin3, scale]
  inplace: {logits_grad: softmax}
  view: null
  backward: null
  forward:
    name: margin_cross_entropy
    inputs:
    - {name: logits, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: return_softmax, typename: bool}
    - {name: ring_id, typename: int}
    - {name: rank, typename: int}
    - {name: nranks, typename: int}
    - {name: margin1, typename: float}
    - {name: margin2, typename: float}
    - {name: margin3, typename: float}
    - {name: scale, typename: float}
    outputs:
    - {name: softmax, typename: Tensor}
    - {name: loss, typename: Tensor}
- name: masked_select_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [masked_select_grad]
    param: [x, mask, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_select_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: masked_select
    inputs:
    - {name: x, typename: Tensor}
    - {name: mask, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: matrix_power_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [matrix_power_grad]
    param: [x, out, out_grad, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_power_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: matrix_power
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: n, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: max_pool2d_with_index_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: bool, name: global_pooling}
  - {typename: bool, name: adaptive}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool2d_with_index_grad]
    param: [x, mask, out_grad, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool2d_with_index_grad: null}
    force_backend: null
  infer_meta:
    func: MaxPoolWithIndexGradInferMeta
    param: [x, mask, out_grad, kernel_size, strides, paddings, global_pooling, adaptive]
  inplace: null
  view: null
  backward: null
  forward:
    name: max_pool2d_with_index
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: kernel_size, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: global_pooling, typename: bool}
    - {name: adaptive, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: mask, typename: Tensor}
- name: max_pool3d_with_index_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: bool, name: global_pooling}
  - {typename: bool, name: adaptive}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool3d_with_index_grad]
    param: [x, mask, out_grad, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool3d_with_index_grad: null}
    force_backend: null
  infer_meta:
    func: MaxPoolWithIndexGradInferMeta
    param: [x, mask, out_grad, kernel_size, strides, paddings, global_pooling, adaptive]
  inplace: null
  view: null
  backward: null
  forward:
    name: max_pool3d_with_index
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: kernel_size, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: global_pooling, typename: bool}
    - {name: adaptive, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: mask, typename: Tensor}
- name: maxout_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: groups}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [maxout_grad]
    param: [x, out, out_grad, groups, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {maxout_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: maxout
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: groups, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: mean_all_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mean_all_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {mean_all_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedExceptLayoutInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: mean_all
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: memory_efficient_attention_grad
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: output
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: logsumexp
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_and_offset
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: max_seqlen_q, data_type: float}
  - {typename: Scalar, name: max_seqlen_k, data_type: float}
  - {typename: bool, name: causal}
  - {typename: double, name: dropout_p}
  - {typename: float, name: scale}
  outputs:
  - {typename: Tensor, name: query_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: key_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: value_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [memory_efficient_attention_grad]
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, output, logsumexp,
      seed_and_offset, output_grad, max_seqlen_q, max_seqlen_k, causal, dropout_p,
      scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {memory_efficient_attention_grad: null}
    force_backend: null
  infer_meta:
    func: MemoryEfficientAttentionGradInferMeta
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, output, logsumexp,
      seed_and_offset, output_grad, max_seqlen_q, max_seqlen_k, causal, dropout_p,
      scale]
  inplace: null
  view: null
  backward: null
  forward:
    name: memory_efficient_attention
    inputs:
    - {name: query, typename: Tensor}
    - {name: key, typename: Tensor}
    - {name: value, typename: Tensor}
    - {name: bias, typename: Tensor}
    - {name: cu_seqlens_q, typename: Tensor}
    - {name: cu_seqlens_k, typename: Tensor}
    - {name: causal_diagonal, typename: Tensor}
    - {name: seqlen_k, typename: Tensor}
    attrs:
    - {name: max_seqlen_q, typename: Scalar}
    - {name: max_seqlen_k, typename: Scalar}
    - {name: causal, typename: bool}
    - {name: dropout_p, typename: double}
    - {name: scale, typename: float}
    - {name: is_test, typename: bool}
    outputs:
    - {name: output, typename: Tensor}
    - {name: logsumexp, typename: Tensor}
    - {name: seed_and_offset, typename: Tensor}
- name: meshgrid_grad
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: outputs_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: inputs_grad, size: inputs.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [meshgrid_grad]
    param: [inputs, outputs_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [outputs_grad]
      to_complex_flag: [false]
    dispatch: {meshgrid_grad: null}
    force_backend: null
  infer_meta:
    func: MeshgridGradInferMeta
    param: [inputs, outputs_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: meshgrid
    inputs:
    - {name: inputs, typename: 'Tensor[]'}
    attrs: []
    outputs:
    - {name: outputs, typename: 'Tensor[]'}
- name: mode_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: bool, name: keepdim}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mode_grad]
    param: [x, indices, out_grad, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mode_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: mode
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: keepdim, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: multi_dot_grad
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: x_grad, size: x.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multi_dot_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {multi_dot_grad: null}
    force_backend: null
  infer_meta:
    func: MultiDotGradInferMeta
    param: [x, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: multi_dot
    inputs:
    - {name: x, typename: 'Tensor[]'}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: multiplex_grad
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: inputs_grad, size: inputs.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [index]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multiplex_grad]
    param: [index, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {multiplex_grad: null}
    force_backend: null
  infer_meta:
    func: MultiplexGradInferMeta
    param: [index, out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: multiplex
    inputs:
    - {name: inputs, typename: 'Tensor[]'}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: mv_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: vec
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: vec_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [mv_grad]
    param: [x, vec, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {mv_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, vec]
  inplace: null
  view: null
  backward: null
  forward:
    name: mv
    inputs:
    - {name: x, typename: Tensor}
    - {name: vec, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: nanmedian_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: medians
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nanmedian_grad]
    param: [x, medians, out_grad, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {nanmedian_grad: null}
    force_backend: null
  infer_meta:
    func: NanmedianGradInferMeta
    param: [x, medians, out_grad, axis, keepdim]
  inplace: null
  view: null
  backward: null
  forward:
    name: nanmedian
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    - {name: keepdim, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: medians, typename: Tensor}
- name: nearest_interp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format}
  - {typename: int, name: out_d}
  - {typename: int, name: out_h}
  - {typename: int, name: out_w}
  - {typename: 'float[]', name: scale}
  - {typename: str, name: interp_method}
  - {typename: bool, name: align_corners}
  - {typename: int, name: align_mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nearest_interp_grad]
    param: [x, out_size, size_tensor, scale_tensor, output_grad, data_format, out_d,
      out_h, out_w, scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {nearest_interp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: nearest_interp
    inputs:
    - {name: x, typename: Tensor}
    - {name: out_size, typename: Tensor}
    - {name: size_tensor, typename: 'Tensor[]'}
    - {name: scale_tensor, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: out_d, typename: int}
    - {name: out_h, typename: int}
    - {name: out_w, typename: int}
    - {name: scale, typename: 'float[]'}
    - {name: interp_method, typename: str}
    - {name: align_corners, typename: bool}
    - {name: align_mode, typename: int}
    outputs:
    - {name: output, typename: Tensor}
- name: nll_loss_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: total_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: ignore_index}
  - {typename: str, name: reduction}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [nll_loss_grad]
    param: [input, label, weight, total_weight, out_grad, ignore_index, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nll_loss_grad: null}
    force_backend: null
  infer_meta:
    func: NllLossGradInferMeta
    param: [input, label, weight, total_weight, out_grad, ignore_index, reduction]
  inplace: null
  view: null
  backward: null
  forward:
    name: nll_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: weight, typename: Tensor}
    attrs:
    - {name: ignore_index, typename: int64_t}
    - {name: reduction, typename: str}
    outputs:
    - {name: out, typename: Tensor}
    - {name: total_weight, typename: Tensor}
- name: overlap_add_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: hop_length}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [overlap_add_grad]
    param: [x, out_grad, hop_length, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {overlap_add_grad: null}
    force_backend: null
  infer_meta:
    func: OverlapAddGradInferMeta
    param: [x, out_grad, hop_length, axis]
  inplace: null
  view: null
  backward: null
  forward:
    name: overlap_add
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: hop_length, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: p_norm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: porder}
  - {typename: int, name: axis}
  - {typename: float, name: epsilon}
  - {typename: bool, name: keepdim}
  - {typename: bool, name: asvector}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [p_norm_grad]
    param: [x, out, out_grad, porder, axis, epsilon, keepdim, asvector]
    backend: null
    layout: null
    data_type: null
    dispatch: {p_norm_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: p_norm
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: porder, typename: float}
    - {name: axis, typename: int}
    - {name: epsilon, typename: float}
    - {name: keepdim, typename: bool}
    - {name: asvector, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: pad3d_double_grad
  inputs:
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: paddings, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: mode}
  - {typename: float, name: pad_value}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pad3d]
    param: [grad_x_grad, paddings, mode, pad_value, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pad3d: null}
    force_backend: null
  infer_meta:
    func: Pad3dInferMeta
    param: [grad_x_grad, paddings, mode, pad_value, data_format]
  inplace: null
  view: null
  backward: null
  forward:
    name: pad3d_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: paddings, typename: IntArray}
    - {name: mode, typename: str}
    - {name: pad_value, typename: float}
    - {name: data_format, typename: str}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: pad3d_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: paddings, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: mode}
  - {typename: float, name: pad_value}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pad3d_grad]
    param: [x, out_grad, paddings, mode, pad_value, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pad3d_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: pad3d_double_grad
  forward:
    name: pad3d
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: paddings, typename: IntArray}
    - {name: mode, typename: str}
    - {name: pad_value, typename: float}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: pixel_shuffle_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: upscale_factor}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pixel_shuffle_grad]
    param: [out_grad, upscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_shuffle_grad: null}
    force_backend: null
  infer_meta:
    func: PixelShuffleGradInferMeta
    param: [out_grad, upscale_factor, data_format]
  inplace: null
  view: null
  backward: null
  forward:
    name: pixel_shuffle
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: upscale_factor, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: pixel_unshuffle_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: downscale_factor}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pixel_unshuffle_grad]
    param: [out_grad, downscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_unshuffle_grad: null}
    force_backend: null
  infer_meta:
    func: PixelUnshuffleGradInferMeta
    param: [out_grad, downscale_factor, data_format]
  inplace: null
  view: null
  backward: null
  forward:
    name: pixel_unshuffle
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: downscale_factor, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: poisson_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [poisson_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {poisson_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: poisson
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: polygamma_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [polygamma_grad]
    param: [x, out_grad, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {polygamma_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: polygamma
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: n, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: pow_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: y, data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pow_double_grad]
    param: [x, grad_out, grad_x_grad, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {pow_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, grad_out]
  inplace: {x_grad: grad_x_grad}
  view: null
  backward: pow_triple_grad
  forward:
    name: pow_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: y, typename: Scalar}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: pow_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: y, default_value: '-1', data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pow_grad]
    param: [x, out_grad, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {pow_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: PowGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  backward: pow_double_grad
  forward:
    name: pow
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: y, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: pow_triple_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_grad_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_grad_out_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: y, data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_grad_x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [pow_triple_grad]
    param: [x, grad_out, grad_grad_x, grad_x_grad, grad_grad_out_grad, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {pow_triple_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [x, grad_out, grad_grad_x]
  inplace: null
  view: null
  backward: null
  forward:
    name: pow_double_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    - {name: grad_grad_x, typename: Tensor}
    attrs:
    - {name: y, typename: Scalar}
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_grad_out, typename: Tensor}
- name: prelu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: alpha
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: data_format}
  - {typename: str, name: mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: alpha_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [prelu_grad]
    param: [x, alpha, out_grad, data_format, mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {prelu_grad: null}
    force_backend: null
  infer_meta:
    func: PreluGradInferMeta
    param: [x, alpha]
  inplace: null
  view: null
  backward: null
  forward:
    name: prelu
    inputs:
    - {name: x, typename: Tensor}
    - {name: alpha, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: mode, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: psroi_pool_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height}
  - {typename: int, name: pooled_width}
  - {typename: int, name: output_channels}
  - {typename: float, name: spatial_scale}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [psroi_pool_grad]
    param: [x, boxes, boxes_num, out_grad, pooled_height, pooled_width, output_channels,
      spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {psroi_pool_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: psroi_pool
    inputs:
    - {name: x, typename: Tensor}
    - {name: boxes, typename: Tensor}
    - {name: boxes_num, typename: Tensor}
    attrs:
    - {name: pooled_height, typename: int}
    - {name: pooled_width, typename: int}
    - {name: output_channels, typename: int}
    - {name: spatial_scale, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: put_along_axis_grad
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: str, name: reduce}
  - {typename: bool, name: include_self}
  outputs:
  - {typename: Tensor, name: arr_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: values_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [put_along_axis_grad]
    param: [arr, indices, values, out, out_grad, axis, reduce, include_self]
    backend: null
    layout: null
    data_type: null
    dispatch: {put_along_axis_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [arr, indices]
  inplace: null
  view: null
  backward: null
  forward:
    name: put_along_axis
    inputs:
    - {name: arr, typename: Tensor}
    - {name: indices, typename: Tensor}
    - {name: values, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: reduce, typename: str}
    - {name: include_self, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: qr_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: r
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: q_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: r_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [qr_grad]
    param: [x, q, r, q_grad, r_grad, mode]
    backend: null
    layout: null
    data_type: null
    dispatch: {qr_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: qr
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: mode, typename: str}
    outputs:
    - {name: q, typename: Tensor}
    - {name: r, typename: Tensor}
- name: real_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [real_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [true]
    dispatch: {real_grad: null}
    force_backend: null
  infer_meta:
    func: RealAndImagGradInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: real
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: reciprocal_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [reciprocal_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {reciprocal_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: reciprocal
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: relu6_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [relu6_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu6_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: relu6
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: relu_double_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [relu_double_grad]
    param: [out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu_double_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: relu_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: relu_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [relu_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: relu_grad, func_args: 'out, out_grad, x_grad'}
  backward: relu_double_grad
  forward:
    name: relu
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: renorm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p}
  - {typename: int, name: axis}
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [renorm_grad]
    param: [x, out_grad, p, axis, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch: {renorm_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: renorm
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: p, typename: float}
    - {name: axis, typename: int}
    - {name: max_norm, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: reverse_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: reverse, args: 'out_grad, axis'}
  backward: null
  forward:
    name: reverse
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
- name: roi_align_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height}
  - {typename: int, name: pooled_width}
  - {typename: float, name: spatial_scale}
  - {typename: int, name: sampling_ratio}
  - {typename: bool, name: aligned}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roi_align_grad]
    param: [x, boxes, boxes_num, out_grad, pooled_height, pooled_width, spatial_scale,
      sampling_ratio, aligned]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [boxes]
      to_complex_flag: [false]
    dispatch: {roi_align_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: roi_align
    inputs:
    - {name: x, typename: Tensor}
    - {name: boxes, typename: Tensor}
    - {name: boxes_num, typename: Tensor}
    attrs:
    - {name: pooled_height, typename: int}
    - {name: pooled_width, typename: int}
    - {name: spatial_scale, typename: float}
    - {name: sampling_ratio, typename: int}
    - {name: aligned, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: roi_pool_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: arg_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height}
  - {typename: int, name: pooled_width}
  - {typename: float, name: spatial_scale}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roi_pool_grad]
    param: [x, boxes, boxes_num, arg_max, out_grad, pooled_height, pooled_width, spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roi_pool_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: roi_pool
    inputs:
    - {name: x, typename: Tensor}
    - {name: boxes, typename: Tensor}
    - {name: boxes_num, typename: Tensor}
    attrs:
    - {name: pooled_height, typename: int}
    - {name: pooled_width, typename: int}
    - {name: spatial_scale, typename: float}
    outputs:
    - {name: out, typename: Tensor}
    - {name: arg_max, typename: Tensor}
- name: roll_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shifts, data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [roll_grad]
    param: [x, out_grad, shifts, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roll_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: roll_grad, func_args: 'x, out_grad, shifts, axis, x_grad'}
  backward: null
  forward:
    name: roll
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: shifts, typename: IntArray}
    - {name: axis, typename: 'int64_t[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: round_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [round_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {round_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: round
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: rsqrt_double_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rsqrt_double_grad]
    param: [out, grad_x, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: rsqrt_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: rsqrt_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [rsqrt_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  backward: rsqrt_double_grad
  forward:
    name: rsqrt
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: scale_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: scale, default_value: '1.0', data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: scale, args: 'out_grad, scale, 0.0f, true'}
  backward: null
  forward:
    name: scale
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: scale, typename: Scalar}
    - {name: bias, typename: float}
    - {name: bias_after_scale, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: scatter_grad
  inputs:
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: overwrite}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: updates_grad, optional: false, intermediate: false}
  no_need_buffer: [updates]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [scatter_grad]
    param: [index, updates, out_grad, overwrite]
    backend: null
    layout: null
    data_type: null
    dispatch: {scatter_grad: null}
    force_backend: null
  infer_meta:
    func: ScatterGradInferMeta
    param: [index, updates, out_grad, overwrite]
  inplace: null
  view: null
  composite: {func_name: scatter_grad, func_args: 'index, updates, out_grad, overwrite,
      x_grad, updates_grad'}
  backward: null
  forward:
    name: scatter
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    - {name: updates, typename: Tensor}
    attrs:
    - {name: overwrite, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: scatter_nd_add_grad
  inputs:
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: updates_grad, optional: false, intermediate: false}
  no_need_buffer: [updates]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [scatter_nd_add_grad]
    param: [index, updates, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {scatter_nd_add_grad: null}
    force_backend: null
  infer_meta:
    func: ScatterNdAddGradInferMeta
    param: [index, updates, out_grad]
  inplace: null
  view: null
  composite: {func_name: scatter_nd_add_grad, func_args: 'index, updates, out_grad,
      x_grad, updates_grad'}
  backward: null
  forward:
    name: scatter_nd_add
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    - {name: updates, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: segment_pool_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: segment_ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: summed_ids
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: pooltype}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [segment_pool_grad]
    param: [x, segment_ids, out, summed_ids, out_grad, pooltype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {segment_pool_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: segment_pool
    inputs:
    - {name: x, typename: Tensor}
    - {name: segment_ids, typename: Tensor}
    attrs:
    - {name: pooltype, typename: str}
    outputs:
    - {name: out, typename: Tensor}
    - {name: summed_ids, typename: Tensor}
- name: selu_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale}
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [selu_grad]
    param: [out, out_grad, scale, alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out]
      to_complex_flag: [false]
    dispatch: {selu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: null
  view: null
  backward: null
  forward:
    name: selu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: scale, typename: float}
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: send_u_recv_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_count
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduce_op, default_value: '"SUM"'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_u_recv_grad]
    param: [x, src_index, dst_index, out, dst_count, out_grad, reduce_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {send_u_recv_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: send_u_recv
    inputs:
    - {name: x, typename: Tensor}
    - {name: src_index, typename: Tensor}
    - {name: dst_index, typename: Tensor}
    attrs:
    - {name: reduce_op, typename: str}
    - {name: out_size, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: dst_count, typename: Tensor}
- name: send_ue_recv_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_count
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op}
  - {typename: str, name: reduce_op}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_ue_recv_grad]
    param: [x, y, src_index, dst_index, out, dst_count, out_grad, message_op, reduce_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {send_ue_recv_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: send_ue_recv
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: src_index, typename: Tensor}
    - {name: dst_index, typename: Tensor}
    attrs:
    - {name: message_op, typename: str}
    - {name: reduce_op, typename: str}
    - {name: out_size, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: dst_count, typename: Tensor}
- name: send_uv_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [send_uv_grad]
    param: [x, y, src_index, dst_index, out_grad, message_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_uv_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: send_uv
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: src_index, typename: Tensor}
    - {name: dst_index, typename: Tensor}
    attrs:
    - {name: message_op, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: sigmoid_cross_entropy_with_logits_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pos_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: normalize}
  - {typename: int, name: ignore_index}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid_cross_entropy_with_logits_grad]
    param: [x, label, pos_weight, out_grad, normalize, ignore_index]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_cross_entropy_with_logits_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: sigmoid_cross_entropy_with_logits
    inputs:
    - {name: x, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: pos_weight, typename: Tensor}
    attrs:
    - {name: normalize, typename: bool}
    - {name: ignore_index, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: sigmoid_double_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fwd_grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: fwd_grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid_double_grad]
    param: [out, fwd_grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, fwd_grad_out]
  inplace: {fwd_grad_out_grad: grad_x_grad}
  view: null
  backward: sigmoid_triple_grad
  forward:
    name: sigmoid_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: fwd_grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sigmoid_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: sigmoid_grad, func_args: 'out, out_grad, x_grad'}
  backward: sigmoid_double_grad
  forward:
    name: sigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sigmoid_triple_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fwd_grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_grad_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_grad_out_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: fwd_grad_out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_grad_x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sigmoid_triple_grad]
    param: [out, fwd_grad_out, grad_grad_x, grad_out_grad, grad_grad_out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_triple_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [out, fwd_grad_out, grad_grad_x]
  inplace: {fwd_grad_out_grad: grad_grad_x}
  view: null
  backward: null
  forward:
    name: sigmoid_double_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: fwd_grad_out, typename: Tensor}
    - {name: grad_grad_x, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_out, typename: Tensor}
    - {name: grad_grad_out, typename: Tensor}
- name: sign_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: scale, args: 'out_grad, 0.0f, 0.0f, true'}
  backward: null
  forward:
    name: sign
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: silu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [silu_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {silu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: silu_grad, func_args: 'x, out, out_grad, x_grad'}
  backward: silu_double_grad
  forward:
    name: silu
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sin_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sin_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: sin_triple_grad
  forward:
    name: sin_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sin_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sin_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: sin_grad, func_args: 'x, out_grad, x_grad'}
  backward: sin_double_grad
  forward:
    name: sin
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sin_triple_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_forward
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad_forward
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_grad_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sin_triple_grad]
    param: [x, grad_out_forward, grad_x_grad_forward, grad_x_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_triple_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [x, x, grad_x_grad_forward]
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  view: null
  backward: null
  forward:
    name: sin_double_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: sinh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sinh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sinh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: sinh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: slogdet_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [slogdet_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {slogdet_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: slogdet
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: softplus_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta}
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softplus_double_grad]
    param: [x, grad_out, grad_x_grad, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: softplus_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: beta, typename: float}
    - {name: threshold, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: softplus_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta}
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softplus_grad]
    param: [x, out_grad, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: softplus_double_grad
  forward:
    name: softplus
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: beta, typename: float}
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: softshrink_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softshrink_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softshrink_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: softshrink
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: softsign_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [softsign_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {softsign_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: softsign
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: solve_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [solve_grad]
    param: [x, y, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {solve_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: spectral_norm_grad
  inputs:
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim}
  - {typename: int, name: power_iters}
  - {typename: float, name: eps}
  outputs:
  - {typename: Tensor, name: weight_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [spectral_norm_grad]
    param: [weight, u, v, out_grad, dim, power_iters, eps]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch: {spectral_norm_grad: null}
    force_backend: null
  infer_meta:
    func: SpectralNormGradInferMeta
    param: [weight, u, v, out_grad, dim, power_iters, eps]
  inplace: null
  view: null
  backward: null
  forward:
    name: spectral_norm
    inputs:
    - {name: weight, typename: Tensor}
    - {name: u, typename: Tensor}
    - {name: v, typename: Tensor}
    attrs:
    - {name: dim, typename: int}
    - {name: power_iters, typename: int}
    - {name: eps, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: sqrt_double_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sqrt_double_grad]
    param: [out, grad_x, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sqrt_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: sqrt_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sqrt_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sqrt_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sqrt_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: sqrt_grad, func_args: 'out, out_grad, x_grad'}
  backward: sqrt_double_grad
  forward:
    name: sqrt
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: square_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [square_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {square_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  backward: null
  forward:
    name: square_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: square_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [square_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {square_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
    spmd_rule: ElementwiseUnaryGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  backward: square_double_grad
  forward:
    name: square
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: squared_l2_norm_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [squared_l2_norm_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {squared_l2_norm_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: squared_l2_norm
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: squeeze_double_grad
  inputs:
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: squeeze, args: 'grad_x_grad, axis'}
  backward: null
  forward:
    name: squeeze_grad
    inputs:
    - {name: xshape, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: squeeze_grad
  inputs:
  - typename: Tensor
    name: xshape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [squeeze_grad]
    param: [xshape, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {squeeze_grad: null}
    force_backend: null
  infer_meta:
    func: KernelWithXShapeInferMeta
    param: [xshape, out_grad]
    spmd_rule: SqueezeGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  backward: squeeze_double_grad
  forward:
    name: squeeze
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: xshape, typename: Tensor}
- name: stack_grad
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: 'Tensor[]', name: x_grad, size: x.size(), optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [stack_grad]
    param: [out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {stack_grad: null}
    force_backend: null
  infer_meta:
    func: StackGradInferMeta
    param: [out_grad, axis]
    spmd_rule: StackGradInferSpmd
  inplace: null
  view: null
  backward: null
  forward:
    name: stack
    inputs:
    - {name: x, typename: 'Tensor[]'}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: stanh_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale_a}
  - {typename: float, name: scale_b}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [stanh_grad]
    param: [x, out_grad, scale_a, scale_b]
    backend: null
    layout: null
    data_type: null
    dispatch: {stanh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: stanh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: scale_a, typename: float}
    - {name: scale_b, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: svd_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: vh
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: s
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: vh_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: s_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: full_matrices}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [svd_grad]
    param: [x, u, vh, s, u_grad, vh_grad, s_grad, full_matrices]
    backend: null
    layout: null
    data_type: null
    dispatch: {svd_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: svd
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: full_matrices, typename: bool}
    outputs:
    - {name: u, typename: Tensor}
    - {name: s, typename: Tensor}
    - {name: vh, typename: Tensor}
- name: take_along_axis_grad
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: arr_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [take_along_axis_grad]
    param: [arr, indices, out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {take_along_axis_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [arr]
  inplace: null
  view: null
  backward: null
  forward:
    name: take_along_axis
    inputs:
    - {name: arr, typename: Tensor}
    - {name: indices, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: tan_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tan_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tan_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: tan
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_double_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh_double_grad]
    param: [out, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_double_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  inplace: {grad_out_grad: grad_x_grad}
  view: null
  composite: {func_name: tanh_double_grad, func_args: 'out, grad_out, grad_x_grad,
      out_grad, grad_out_grad'}
  backward: tanh_triple_grad
  forward:
    name: tanh_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: tanh_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  inplace: {x_grad: out_grad}
  view: null
  composite: {func_name: tanh_grad, func_args: 'out, out_grad, x_grad'}
  backward: tanh_double_grad
  forward:
    name: tanh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_shrink_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh_shrink_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_shrink_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: tanh_shrink
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_triple_grad
  inputs:
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_forward
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad_forward
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_new_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out_grad_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tanh_triple_grad]
    param: [out, grad_out_forward, grad_x_grad_forward, grad_out_new_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_triple_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [out, out, grad_x_grad_forward]
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  view: null
  composite: {func_name: tanh_triple_grad, func_args: 'out, grad_out_forward, grad_x_grad_forward,
      grad_out_new_grad, grad_out_grad_grad, out_grad, grad_out_forward_grad, grad_x_grad_forward_grad'}
  backward: null
  forward:
    name: tanh_double_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_out_new, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: temporal_shift_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: seg_num}
  - {typename: float, name: shift_ratio}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [temporal_shift_grad]
    param: [out_grad, seg_num, shift_ratio, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {temporal_shift_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: temporal_shift
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: seg_num, typename: int}
    - {name: shift_ratio, typename: float}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: tensor_unfold_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: axis}
  - {typename: int64_t, name: size}
  - {typename: int64_t, name: step}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [tensor_unfold_grad]
    param: [input, out_grad, axis, size, step]
    backend: null
    layout: null
    data_type: null
    dispatch: {tensor_unfold_grad: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: tensor_unfold
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: axis, typename: int64_t}
    - {name: size, typename: int64_t}
    - {name: step, typename: int64_t}
    outputs:
    - {name: out, typename: Tensor}
- name: thresholded_relu_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [thresholded_relu_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {thresholded_relu_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: thresholded_relu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: topk_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: k, data_type: float}
  - {typename: int, name: axis}
  - {typename: bool, name: largest}
  - {typename: bool, name: sorted}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [topk_grad]
    param: [x, indices, out_grad, k, axis, largest, sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {topk_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  composite: {func_name: topk_grad, func_args: 'x, indices, out_grad, k, axis, largest,
      sorted, x_grad'}
  backward: null
  forward:
    name: topk
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: k, typename: Scalar}
    - {name: axis, typename: int}
    - {name: largest, typename: bool}
    - {name: sorted, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: trace_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset}
  - {typename: int, name: axis1}
  - {typename: int, name: axis2}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trace_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {trace_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: trace
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: triangular_solve_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper}
  - {typename: bool, name: transpose}
  - {typename: bool, name: unitriangular}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [triangular_solve_grad]
    param: [x, y, out, out_grad, upper, transpose, unitriangular]
    backend: null
    layout: null
    data_type: null
    dispatch: {triangular_solve_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
  forward:
    name: triangular_solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    - {name: transpose, typename: bool}
    - {name: unitriangular, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: trilinear_interp_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: output_grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_format}
  - {typename: int, name: out_d}
  - {typename: int, name: out_h}
  - {typename: int, name: out_w}
  - {typename: 'float[]', name: scale}
  - {typename: str, name: interp_method}
  - {typename: bool, name: align_corners}
  - {typename: int, name: align_mode}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trilinear_interp_grad]
    param: [x, out_size, size_tensor, scale_tensor, output_grad, data_format, out_d,
      out_h, out_w, scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [output_grad]
      to_complex_flag: [false]
    dispatch: {trilinear_interp_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: trilinear_interp
    inputs:
    - {name: x, typename: Tensor}
    - {name: out_size, typename: Tensor}
    - {name: size_tensor, typename: 'Tensor[]'}
    - {name: scale_tensor, typename: Tensor}
    attrs:
    - {name: data_format, typename: str}
    - {name: out_d, typename: int}
    - {name: out_h, typename: int}
    - {name: out_w, typename: int}
    - {name: scale, typename: 'float[]'}
    - {name: interp_method, typename: str}
    - {name: align_corners, typename: bool}
    - {name: align_mode, typename: int}
    outputs:
    - {name: output, typename: Tensor}
- name: trunc_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [trunc_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {trunc_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  inplace: null
  view: null
  backward: null
  forward:
    name: trunc
    inputs:
    - {name: input, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: unbind_grad
  inputs:
  - typename: Tensor[]
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: stack, args: 'out_grad, axis'}
  backward: null
  forward:
    name: unbind
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: 'Tensor[]'}
- name: unfold_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unfold_grad]
    param: [x, out_grad, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {unfold_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: unfold
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: kernel_sizes, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: dilations, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: uniform_inplace_grad
  inputs:
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: min, default_value: '-1.0'}
  - {typename: float, name: max, default_value: '1.0'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: int, name: diag_num, default_value: '0'}
  - {typename: int, name: diag_step, default_value: '0'}
  - {typename: float, name: diag_val, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [uniform_inplace_grad]
    param: [out_grad, min, max, seed, diag_num, diag_step, diag_val]
    backend: null
    layout: null
    data_type: null
    dispatch: {uniform_inplace_grad: null}
    force_backend: null
  infer_meta:
    func: UniformRandomInplaceGradInferMeta
    param: [out_grad, min, max, seed, diag_num, diag_step, diag_val]
  inplace: {x_grad: out_grad}
  view: null
  backward: null
  forward:
    name: uniform_inplace
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: min, typename: float}
    - {name: max, typename: float}
    - {name: seed, typename: int}
    - {name: diag_num, typename: int}
    - {name: diag_step, typename: int}
    - {name: diag_val, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: unsqueeze_double_grad
  inputs:
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  invoke: {func: unsqueeze, args: 'grad_x_grad, axis'}
  backward: null
  forward:
    name: unsqueeze_grad
    inputs:
    - {name: xshape, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: unsqueeze_grad
  inputs:
  - typename: Tensor
    name: xshape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unsqueeze_grad]
    param: [xshape, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {unsqueeze_grad: null}
    force_backend: null
  infer_meta:
    func: KernelWithXShapeInferMeta
    param: [xshape, out_grad]
    spmd_rule: UnsqueezeGradInferSpmd
  inplace: {x_grad: out_grad}
  view: null
  backward: unsqueeze_double_grad
  forward:
    name: unsqueeze
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: xshape, typename: Tensor}
- name: unstack_grad
  inputs:
  - typename: Tensor[]
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unstack_grad]
    param: [out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {unstack_grad: null}
    force_backend: null
  infer_meta:
    func: UnStackGradInferMeta
    param: [out_grad, axis]
  inplace: null
  view: null
  backward: null
  forward:
    name: unstack
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: num, typename: int}
    outputs:
    - {name: out, typename: 'Tensor[]'}
- name: view_dtype_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [view_dtype_grad]
    param: [input, out_grad, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {view_dtype_grad: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: view_dtype
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: dtype, typename: DataType}
    outputs:
    - {name: out, typename: Tensor}
- name: view_shape_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [view_shape_grad]
    param: [input, out_grad, dims]
    backend: null
    layout: null
    data_type: null
    dispatch: {view_shape_grad: null}
    force_backend: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: view_shape
    inputs:
    - {name: input, typename: Tensor}
    attrs:
    - {name: dims, typename: 'int64_t[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: warpctc_grad
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: logits_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: warpctcgrad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: loss_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank}
  - {typename: bool, name: norm_by_times}
  outputs:
  - {typename: Tensor, name: logits_grad, optional: false, intermediate: false}
  no_need_buffer: [logits]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [warpctc_grad]
    param: [logits, logits_length, warpctcgrad, loss_grad, blank, norm_by_times]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [loss_grad]
      to_complex_flag: [false]
    dispatch: {warpctc_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [logits]
  inplace: null
  view: null
  backward: null
  forward:
    name: warpctc
    inputs:
    - {name: logits, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: logits_length, typename: Tensor}
    - {name: labels_length, typename: Tensor}
    attrs:
    - {name: blank, typename: int}
    - {name: norm_by_times, typename: bool}
    outputs:
    - {name: loss, typename: Tensor}
    - {name: warpctcgrad, typename: Tensor}
- name: warprnnt_grad
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: input_lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: warprnntgrad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: loss_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: float, name: fastemit_lambda, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: input_grad, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [warprnnt_grad]
    param: [input, input_lengths, warprnntgrad, loss_grad, blank, fastemit_lambda]
    backend: null
    layout: null
    data_type: null
    dispatch: {warprnnt_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  inplace: null
  view: null
  backward: null
  forward:
    name: warprnnt
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: input_lengths, typename: Tensor}
    - {name: label_lengths, typename: Tensor}
    attrs:
    - {name: blank, typename: int}
    - {name: fastemit_lambda, typename: float}
    outputs:
    - {name: loss, typename: Tensor}
    - {name: warprnntgrad, typename: Tensor}
- name: weight_only_linear_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: weight_dtype}
  - {typename: int, name: arch}
  - {typename: int, name: group_size}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [weight_only_linear_grad]
    param: [x, weight, bias, weight_scale, out_grad, weight_dtype, arch, group_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {weight_only_linear_grad: null}
    force_backend: null
  infer_meta:
    func: WeightOnlyLinearGradInferMeta
    param: [x, weight, bias, weight_scale, out_grad, weight_dtype, arch, group_size]
  inplace: null
  view: null
  backward: null
  forward:
    name: weight_only_linear
    inputs:
    - {name: x, typename: Tensor}
    - {name: weight, typename: Tensor}
    - {name: bias, typename: Tensor}
    - {name: weight_scale, typename: Tensor}
    attrs:
    - {name: weight_dtype, typename: str}
    - {name: arch, typename: int}
    - {name: group_size, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: where_grad
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: true
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: y_grad, optional: false, intermediate: false}
  no_need_buffer: [x, y]
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [where_grad]
    param: [condition, x, y, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {where_grad: null}
    force_backend: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
    spmd_rule: WhereGradInferSpmd
  inplace: null
  view: null
  backward: null
  forward:
    name: where
    inputs:
    - {name: condition, typename: Tensor}
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: yolo_loss_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_score
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: objectness_mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_match_mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: loss_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: anchors}
  - {typename: 'int[]', name: anchor_mask}
  - {typename: int, name: class_num}
  - {typename: float, name: ignore_thresh}
  - {typename: int, name: downsample_ratio}
  - {typename: bool, name: use_label_smooth}
  - {typename: float, name: scale_x_y}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: gt_box_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: gt_label_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: gt_score_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [yolo_loss_grad]
    param: [x, gt_box, gt_label, gt_score, objectness_mask, gt_match_mask, loss_grad,
      anchors, anchor_mask, class_num, ignore_thresh, downsample_ratio, use_label_smooth,
      scale_x_y]
    backend: null
    layout: null
    data_type: null
    dispatch: {yolo_loss_grad: null}
    force_backend: null
  infer_meta:
    func: YoloLossGradInferMeta
    param: [x, gt_box, gt_label, gt_score, objectness_mask, gt_match_mask, loss_grad,
      anchors, anchor_mask, class_num, ignore_thresh, downsample_ratio, use_label_smooth,
      scale_x_y]
  inplace: null
  view: null
  backward: null
  forward:
    name: yolo_loss
    inputs:
    - {name: x, typename: Tensor}
    - {name: gt_box, typename: Tensor}
    - {name: gt_label, typename: Tensor}
    - {name: gt_score, typename: Tensor}
    attrs:
    - {name: anchors, typename: 'int[]'}
    - {name: anchor_mask, typename: 'int[]'}
    - {name: class_num, typename: int}
    - {name: ignore_thresh, typename: float}
    - {name: downsample_ratio, typename: int}
    - {name: use_label_smooth, typename: bool}
    - {name: scale_x_y, typename: float}
    outputs:
    - {name: loss, typename: Tensor}
    - {name: objectness_mask, typename: Tensor}
    - {name: gt_match_mask, typename: Tensor}
- name: silu_double_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_x_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  composite: {func_name: silu_double_grad, func_args: 'x, out, grad_out, grad_x_grad,
      x_grad, grad_out_grad'}
  backward: null
  forward:
    name: silu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: unpool3d_grad
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: ksize}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: output_size}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [unpool3d_grad]
    param: [x, indices, out, out_grad, ksize, strides, paddings, output_size, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unpool3d_grad: null}
    force_backend: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  inplace: null
  view: null
  backward: null
  forward:
    name: unpool3d
    inputs:
    - {name: x, typename: Tensor}
    - {name: indices, typename: Tensor}
    attrs:
    - {name: ksize, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: output_size, typename: 'int[]'}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
