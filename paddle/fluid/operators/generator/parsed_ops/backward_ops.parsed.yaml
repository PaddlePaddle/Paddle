- name: acos_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acos_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {acos_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: acos
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: acosh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acosh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {acosh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: acosh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: addmm_grad
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha}
  - {typename: float, name: beta}
  outputs:
  - {typename: Tensor, name: input_grad, intermediate: false}
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [input, x, y]
  kernel:
    func: [addmm_grad]
    param: [input, x, y, out_grad, alpha, beta]
    backend: null
    layout: null
    data_type: null
    dispatch: {addmm_grad: null}
  inplace: null
  backward: null
  forward:
    name: addmm
    inputs:
    - {name: input, typename: Tensor}
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: beta, typename: float}
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: angle_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [angle_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {angle_grad: null}
  inplace: null
  backward: null
  forward:
    name: angle
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: argsort_grad
  inputs:
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  - {typename: bool, name: descending}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [argsort_grad]
    param: [indices, x, out_grad, axis, descending]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {argsort_grad: null}
  inplace: null
  backward: null
  forward:
    name: argsort
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: descending, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: as_complex_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  invoke: {func: as_real, args: out_grad}
  backward: null
  forward:
    name: as_complex
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: as_real_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  invoke: {func: as_complex, args: out_grad}
  backward: null
  forward:
    name: as_real
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: asin_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asin_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {asin_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: asin
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: asinh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asinh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {asinh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: asinh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atan2_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [atan2_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan2_grad: null}
  inplace: null
  backward: null
  forward:
    name: atan2
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atan_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atan_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: atan
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: atanh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atanh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {atanh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: atanh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: bmm_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: BmmGradInferMeta
    param: [x, y, out_grad]
  kernel:
    func: [bmm_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {bmm_grad: null}
  inplace: null
  backward: null
  forward:
    name: bmm
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: ceil_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [ceil_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {ceil_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: ceil
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: celu_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [celu_double_grad]
    param: [x, grad_out, grad_x_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: celu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: celu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [celu_grad]
    param: [x, out_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu_grad: null}
  inplace: {x_grad: out_grad}
  backward: celu_double_grad
  forward:
    name: celu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [cholesky_grad]
    param: [out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_grad: null}
  inplace: null
  backward: null
  forward:
    name: cholesky
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: cholesky_solve_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [cholesky_solve_grad]
    param: [x, y, out, out_grad, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_solve_grad: null}
  inplace: null
  backward: null
  forward:
    name: cholesky_solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: upper, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: clip_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar, name: min, default_value: '0.', data_type: float}
  - {typename: Scalar, name: max, default_value: '0.', data_type: float}
  outputs:
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [clip_grad]
    param: [x, grad_x_grad, min, max]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {clip_grad: null}
  inplace: null
  backward: null
  forward:
    name: clip_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: min, typename: Scalar}
    - {name: max, typename: Scalar}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: clip_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar, name: min, default_value: '0.', data_type: float}
  - {typename: Scalar, name: max, default_value: '0.', data_type: float}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [clip_grad]
    param: [x, out_grad, min, max]
    backend: null
    layout: null
    data_type: null
    dispatch: {clip_grad: null}
  inplace: {x_grad: out_grad}
  backward: clip_double_grad
  forward:
    name: clip
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: min, typename: Scalar}
    - {name: max, typename: Scalar}
    outputs:
    - {name: out, typename: Tensor}
- name: complex_grad
  inputs:
  - {typename: Tensor, name: real, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: imag, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: real_grad, intermediate: false}
  - {typename: Tensor, name: imag_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ComplexGradInferMeta
    param: [real, imag, out_grad]
  kernel:
    func: [complex_grad]
    param: [real, imag, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [real]
      to_complex_flag: [false]
    dispatch: {complex_grad: null}
  inplace: null
  backward: null
  forward:
    name: complex
    inputs:
    - {name: real, typename: Tensor}
    - {name: imag, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: conj_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  invoke: {func: conj, args: out_grad}
  backward: null
  forward:
    name: conj
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: cos_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [cos_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: cos_triple_grad
  forward:
    name: cos_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: cos_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cos_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_grad: null}
  inplace: {x_grad: out_grad}
  backward: cos_double_grad
  forward:
    name: cos
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: cos_triple_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_forward, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad_forward, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_grad_grad, optional: true, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [x, x, grad_x_grad_forward]
  kernel:
    func: [cos_triple_grad]
    param: [x, grad_out_forward, grad_x_grad_forward, grad_x_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos_triple_grad: null}
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  backward: null
  forward:
    name: cos_double_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: cosh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cosh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {cosh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: cosh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: crop_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: offsets, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CropGradInferMeta
    param: [x, out_grad, offsets]
  kernel:
    func: [crop_grad]
    param: [x, out_grad, offsets]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {crop_grad: null}
  inplace: null
  backward: null
  forward:
    name: crop
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: shape, typename: IntArray}
    - {name: offsets, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
- name: cross_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [cross_grad]
    param: [x, y, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {cross_grad: null}
  inplace: null
  backward: null
  forward:
    name: cross
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: det_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [determinant_grad]
    param: [x, out, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {determinant_grad: null}
  inplace: null
  backward: null
  forward:
    name: det
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: diag_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [diag_grad]
    param: [x, out_grad, offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {diag_grad: null}
  inplace: null
  backward: null
  forward:
    name: diag
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: padding_value, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: diagonal_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [diagonal_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {diagonal_grad: null}
  inplace: null
  backward: null
  forward:
    name: diagonal
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: digamma_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [digamma_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {digamma_grad: null}
  inplace: null
  backward: null
  forward:
    name: digamma
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: dist_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: p}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [dist_grad]
    param: [x, y, out, out_grad, p]
    backend: null
    layout: null
    data_type: null
    dispatch: {dist_grad: null}
  inplace: null
  backward: null
  forward:
    name: dist
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: p, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: dot_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [dot_grad]
    param: [x, y, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {dot_grad: null}
  inplace: null
  backward: null
  forward:
    name: dot
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: eig_grad
  inputs:
  - {typename: Tensor, name: out_w, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_v, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_w_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_v_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: EigGradInferMeta
    param: [out_w, out_v, out_w_grad, out_v_grad]
  kernel:
    func: [eig_grad]
    param: [out_w, out_v, out_w_grad, out_v_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_v]
      to_complex_flag: [false]
    dispatch: {eig_grad: null}
  inplace: null
  backward: null
  forward:
    name: eig
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out_w, typename: Tensor}
    - {name: out_v, typename: Tensor}
- name: eigh_grad
  inputs:
  - {typename: Tensor, name: out_w, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_v, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_w_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_v_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_v]
  kernel:
    func: [eigh_grad]
    param: [out_w, out_v, out_w_grad, out_v_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_v]
      to_complex_flag: [false]
    dispatch: {eigh_grad: null}
  inplace: null
  backward: null
  forward:
    name: eigh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: UPLO, typename: str}
    outputs:
    - {name: out_w, typename: Tensor}
    - {name: out_v, typename: Tensor}
- name: elu_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [elu_double_grad]
    param: [x, grad_out, grad_x_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: elu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: elu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [elu_grad]
    param: [x, out, out_grad, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu_grad: null}
  inplace: {x_grad: out_grad}
  backward: elu_double_grad
  forward:
    name: elu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: erf_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erf_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {erf_grad: null}
  inplace: null
  backward: null
  forward:
    name: erf
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: erfinv_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [erfinv_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {erfinv_grad: null}
  inplace: null
  backward: null
  forward:
    name: erfinv
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: exp_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [exp_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {exp_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: exp
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: expm1_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [expm1_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {expm1_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: expm1
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fft_c2c_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [fft_c2c_grad]
    param: [out_grad, axes, normalization, forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2c_grad: null}
  inplace: null
  backward: null
  forward:
    name: fft_c2c
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fft_c2r_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: int64_t, name: last_dim_size}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FFTC2RGradInferMeta
    param: [out_grad, axes, normalization, forward, last_dim_size]
  kernel:
    func: [fft_c2r_grad]
    param: [out_grad, axes, normalization, forward, last_dim_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fft_c2r_grad: null}
  inplace: null
  backward: null
  forward:
    name: fft_c2r
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    - {name: last_dim_size, typename: int64_t}
    outputs:
    - {name: out, typename: Tensor}
- name: fft_r2c_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: bool, name: onesided}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [fft_r2c_grad]
    param: [x, out_grad, axes, normalization, forward, onesided]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fft_r2c_grad: null}
  inplace: null
  backward: null
  forward:
    name: fft_r2c
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: 'int64_t[]'}
    - {name: normalization, typename: str}
    - {name: forward, typename: bool}
    - {name: onesided, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fill_diagonal_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: value}
  - {typename: int, name: offset}
  - {typename: bool, name: wrap}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FillDiagonalGradInferMeta
    param: [out_grad, value, offset, wrap]
  kernel:
    func: [fill_diagonal_grad]
    param: [out_grad, value, offset, wrap]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_grad: null}
  inplace: null
  backward: null
  forward:
    name: fill_diagonal
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: value, typename: float}
    - {name: offset, typename: int}
    - {name: wrap, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: fill_diagonal_tensor_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int64_t, name: offset}
  - {typename: int, name: dim1}
  - {typename: int, name: dim2}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FillDiagonalTensorGradInferMeta
    param: [out_grad, offset, dim1, dim2]
  kernel:
    func: [fill_diagonal_tensor_grad]
    param: [out_grad, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_tensor_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: fill_diagonal_tensor
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: offset, typename: int64_t}
    - {name: dim1, typename: int}
    - {name: dim2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: flip_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  invoke: {func: flip, args: 'out_grad, axis'}
  backward: null
  forward:
    name: flip
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: floor_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [floor_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: floor
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: fold_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: output_sizes}
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [fold_grad]
    param: [x, out_grad, output_sizes, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {fold_grad: null}
  inplace: null
  backward: null
  forward:
    name: fold
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: output_sizes, typename: 'int[]'}
    - {name: kernel_sizes, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: dilations, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: frame_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: frame_length}
  - {typename: int, name: hop_length}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [frame_grad]
    param: [x, out_grad, frame_length, hop_length, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {frame_grad: null}
  inplace: null
  backward: null
  forward:
    name: frame
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: frame_length, typename: int}
    - {name: hop_length, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: gather_nd_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: GatherNdGradInferMeta
    param: [x, index, out_grad]
  kernel:
    func: [gather_nd_grad]
    param: [x, index, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {gather_nd_grad: null}
  inplace: null
  backward: null
  forward:
    name: gather_nd
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: gelu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: approximate}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [gelu_grad]
    param: [x, out_grad, approximate]
    backend: null
    layout: null
    data_type: null
    dispatch: {gelu_grad: null}
  inplace: null
  backward: null
  forward:
    name: gelu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: approximate, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: grid_sample_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grid, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: mode}
  - {typename: str, name: padding_mode}
  - {typename: bool, name: align_corners}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grid_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, grid]
  kernel:
    func: [grid_sample_grad]
    param: [x, grid, out_grad, mode, padding_mode, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {grid_sample_grad: null}
  inplace: null
  backward: null
  forward:
    name: grid_sample
    inputs:
    - {name: x, typename: Tensor}
    - {name: grid, typename: Tensor}
    attrs:
    - {name: mode, typename: str}
    - {name: padding_mode, typename: str}
    - {name: align_corners, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: gumbel_softmax_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GumbelSoftmaxGradInferMeta
    param: [out, out_grad, axis]
  kernel:
    func: [gumbel_softmax_grad]
    param: [out, out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {gumbel_softmax_grad: null}
  inplace: null
  backward: null
  forward:
    name: gumbel_softmax
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: temperature, typename: float}
    - {name: hard, typename: bool}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: hardshrink_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hard_shrink_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_shrink_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: hardshrink
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: hardsigmoid_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: slope}
  - {typename: float, name: offset}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [hard_sigmoid_grad]
    param: [out, out_grad, slope, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_sigmoid_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: hardsigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: slope, typename: float}
    - {name: offset, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: hardtanh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: t_min}
  - {typename: float, name: t_max}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hardtanh_grad]
    param: [x, out_grad, t_min, t_max]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardtanh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: hardtanh
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: t_min, typename: float}
    - {name: t_max, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: imag_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RealAndImagGradInferMeta
    param: [out_grad]
  kernel:
    func: [imag_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [true]
    dispatch: {imag_grad: null}
  inplace: null
  backward: null
  forward:
    name: imag
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: index_sample_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [index_sample_grad]
    param: [x, index, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_sample_grad: null}
  inplace: null
  backward: null
  forward:
    name: index_sample
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: index_select_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [index_select_grad]
    param: [x, index, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {index_select_grad: null}
  inplace: null
  backward: null
  forward:
    name: index_select
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: inverse_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: InverseGradInferMeta
    param: [out, out_grad]
  kernel:
    func: [inverse_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {inverse_grad: null}
  inplace: null
  backward: null
  forward:
    name: inverse
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: kthvalue_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: k}
  - {typename: int, name: axis}
  - {typename: bool, name: keepdim}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [kthvalue_grad]
    param: [x, indices, out_grad, k, axis, keepdim]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {kthvalue_grad: null}
  inplace: null
  backward: null
  forward:
    name: kthvalue
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: k, typename: int}
    - {name: axis, typename: int}
    - {name: keepdim, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: label_smooth_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: label_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [label_smooth_grad]
    param: [out_grad, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {label_smooth_grad: null}
  inplace: null
  backward: null
  forward:
    name: label_smooth
    inputs:
    - {name: label, typename: Tensor}
    - {name: prior_dist, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: leaky_relu_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: negative_slope}
  outputs:
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [grad_x_grad]
  kernel:
    func: [leaky_relu_double_grad]
    param: [x, grad_x_grad, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: leaky_relu_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: negative_slope, typename: float}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: leaky_relu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: negative_slope}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [leaky_relu_grad]
    param: [x, out_grad, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu_grad: null}
  inplace: {x_grad: out_grad}
  backward: leaky_relu_double_grad
  forward:
    name: leaky_relu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: negative_slope, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: lerp_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: weight, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [lerp_grad]
    param: [x, y, weight, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {lerp_grad: null}
  inplace: null
  backward: null
  forward:
    name: lerp
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: weight, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: lgamma_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [lgamma_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {lgamma_grad: null}
  inplace: null
  backward: null
  forward:
    name: lgamma
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log10_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log10_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log10_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: log10
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log1p_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log1p_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log1p_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: log1p
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log2_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log2_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log2_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: log2
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [log_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: log_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: log_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_grad: null}
  inplace: {x_grad: out_grad}
  backward: log_double_grad
  forward:
    name: log
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: log_loss_grad
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: input_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  kernel:
    func: [log_loss_grad]
    param: [input, label, out_grad, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_loss_grad: null}
  inplace: null
  backward: null
  forward:
    name: log_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    attrs:
    - {name: epsilon, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: logit_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: eps}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logit_grad]
    param: [x, out_grad, eps]
    backend: null
    layout: null
    data_type: null
    dispatch: {logit_grad: null}
  inplace: null
  backward: null
  forward:
    name: logit
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: eps, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: logsigmoid_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logsigmoid_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsigmoid_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: logsigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: lu_unpack_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: l, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: u, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: pmat, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: l_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: u_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: unpack_ludata}
  - {typename: bool, name: unpack_pivots}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: LUUnpackGradInferMeta
    param: [x, y, l, u, pmat, l_grad, u_grad, unpack_ludata, unpack_pivots]
  kernel:
    func: [lu_unpack_grad]
    param: [x, y, l, u, pmat, l_grad, u_grad, unpack_ludata, unpack_pivots]
    backend: null
    layout: null
    data_type: null
    dispatch: {lu_unpack_grad: null}
  inplace: null
  backward: null
  forward:
    name: lu_unpack
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs:
    - {name: unpack_ludata, typename: bool}
    - {name: unpack_pivots, typename: bool}
    outputs:
    - {name: pmat, typename: Tensor}
    - {name: l, typename: Tensor}
    - {name: u, typename: Tensor}
- name: masked_select_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: mask, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [masked_select_grad]
    param: [x, mask, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_select_grad: null}
  inplace: null
  backward: null
  forward:
    name: masked_select
    inputs:
    - {name: x, typename: Tensor}
    - {name: mask, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: matrix_power_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [matrix_power_grad]
    param: [x, out, out_grad, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_power_grad: null}
  inplace: null
  backward: null
  forward:
    name: matrix_power
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: n, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: maxout_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: groups}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralUnaryGradInferMeta
    param: [x]
  kernel:
    func: [maxout_grad]
    param: [x, out, out_grad, groups, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {maxout_grad: null}
  inplace: null
  backward: null
  forward:
    name: maxout
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: groups, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: meshgrid_grad
  inputs:
  - {typename: 'Tensor[]', name: inputs, optional: false, no_need_buffer: false}
  - {typename: 'Tensor[]', name: outputs_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: inputs_grad, size: inputs.size(), intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MeshgridGradInferMeta
    param: [inputs, outputs_grad]
  kernel:
    func: [meshgrid_grad]
    param: [inputs, outputs_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [outputs_grad]
      to_complex_flag: [false]
    dispatch: {meshgrid_grad: null}
  inplace: null
  backward: null
  forward:
    name: meshgrid
    inputs:
    - {name: inputs, typename: 'Tensor[]'}
    attrs: []
    outputs:
    - {name: outputs, typename: 'Tensor[]'}
- name: mode_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  - {typename: bool, name: keepdim}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [mode_grad]
    param: [x, indices, out_grad, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mode_grad: null}
  inplace: null
  backward: null
  forward:
    name: mode
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: keepdim, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: multi_dot_grad
  inputs:
  - {typename: 'Tensor[]', name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: x_grad, size: x.size(), intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MultiDotGradInferMeta
    param: [x, out_grad]
  kernel:
    func: [multi_dot_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {multi_dot_grad: null}
  inplace: null
  backward: null
  forward:
    name: multi_dot
    inputs:
    - {name: x, typename: 'Tensor[]'}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: multiplex_grad
  inputs:
  - {typename: 'Tensor[]', name: inputs, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: inputs_grad, size: inputs.size(), intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MultiplexGradInferMeta
    param: [index, out_grad]
  kernel:
    func: [multiplex_grad]
    param: [index, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {multiplex_grad: null}
  inplace: null
  backward: null
  forward:
    name: multiplex
    inputs:
    - {name: inputs, typename: 'Tensor[]'}
    - {name: index, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: mv_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: vec, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: vec_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, vec]
  kernel:
    func: [mv_grad]
    param: [x, vec, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {mv_grad: null}
  inplace: null
  backward: null
  forward:
    name: mv
    inputs:
    - {name: x, typename: Tensor}
    - {name: vec, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: nll_loss_grad
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: weight, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: total_weight, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int64_t, name: ignore_index}
  - {typename: str, name: reduction}
  outputs:
  - {typename: Tensor, name: input_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: NllLossGradInferMeta
    param: [input, label, weight, total_weight, out_grad, ignore_index, reduction]
  kernel:
    func: [nll_loss_grad]
    param: [input, label, weight, total_weight, out_grad, ignore_index, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nll_loss_grad: null}
  inplace: null
  backward: null
  forward:
    name: nll_loss
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: weight, typename: Tensor}
    attrs:
    - {name: ignore_index, typename: int64_t}
    - {name: reduction, typename: str}
    outputs:
    - {name: out, typename: Tensor}
    - {name: total_weight, typename: Tensor}
- name: overlap_add_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: hop_length}
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: OverlapAddGradInferMeta
    param: [x, out_grad, hop_length, axis]
  kernel:
    func: [overlap_add_grad]
    param: [x, out_grad, hop_length, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {overlap_add_grad: null}
  inplace: null
  backward: null
  forward:
    name: overlap_add
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: hop_length, typename: int}
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: pixel_shuffle_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: upscale_factor}
  - {typename: str, name: data_format}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: PixelShuffleGradInferMeta
    param: [out_grad, upscale_factor, data_format]
  kernel:
    func: [pixel_shuffle_grad]
    param: [out_grad, upscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_shuffle_grad: null}
  inplace: null
  backward: null
  forward:
    name: pixel_shuffle
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: upscale_factor, typename: int}
    - {name: data_format, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: poisson_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [poisson_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {poisson_grad: null}
  inplace: null
  backward: null
  forward:
    name: poisson
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: put_along_axis_grad
  inputs:
  - {typename: Tensor, name: arr, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  - {typename: str, name: reduce}
  outputs:
  - {typename: Tensor, name: arr_grad, intermediate: false}
  - {typename: Tensor, name: value_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [arr, indices]
  kernel:
    func: [put_along_axis_grad]
    param: [arr, indices, out_grad, axis, reduce]
    backend: null
    layout: null
    data_type: null
    dispatch: {put_along_axis_grad: null}
  inplace: null
  backward: null
  forward:
    name: put_along_axis
    inputs:
    - {name: arr, typename: Tensor}
    - {name: indices, typename: Tensor}
    - {name: value, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: reduce, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: qr_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: q, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: r, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: q_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: r_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: mode}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [qr_grad]
    param: [x, q, r, q_grad, r_grad, mode]
    backend: null
    layout: null
    data_type: null
    dispatch: {qr_grad: null}
  inplace: null
  backward: null
  forward:
    name: qr
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: mode, typename: str}
    outputs:
    - {name: q, typename: Tensor}
    - {name: r, typename: Tensor}
- name: real_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RealAndImagGradInferMeta
    param: [out_grad]
  kernel:
    func: [real_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [true]
    dispatch: {real_grad: null}
  inplace: null
  backward: null
  forward:
    name: real
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: reciprocal_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [reciprocal_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {reciprocal_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: reciprocal
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: relu_double_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [relu_double_grad]
    param: [out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: relu_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: relu_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [relu_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu_grad: null}
  inplace: {x_grad: out_grad}
  backward: relu_double_grad
  forward:
    name: relu
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: renorm_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: p}
  - {typename: int, name: axis}
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [renorm_grad]
    param: [x, out_grad, p, axis, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch: {renorm_grad: null}
  inplace: null
  backward: null
  forward:
    name: renorm
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: p, typename: float}
    - {name: axis, typename: int}
    - {name: max_norm, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: roll_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: shifts, data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [roll_grad]
    param: [x, out_grad, shifts, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roll_grad: null}
  inplace: null
  backward: null
  forward:
    name: roll
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: shifts, typename: IntArray}
    - {name: axis, typename: 'int64_t[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: round_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [round_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {round_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: round
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: rsqrt_double_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  kernel:
    func: [rsqrt_double_grad]
    param: [out, grad_x, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: rsqrt_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: rsqrt_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [rsqrt_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt_grad: null}
  inplace: {x_grad: out_grad}
  backward: rsqrt_double_grad
  forward:
    name: rsqrt
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: scatter_grad
  inputs:
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: updates, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: overwrite}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: updates_grad, intermediate: false}
  no_need_buffer: [updates]
  infer_meta:
    func: ScatterGradInferMeta
    param: [index, updates, out_grad, overwrite]
  kernel:
    func: [scatter_grad]
    param: [index, updates, out_grad, overwrite]
    backend: null
    layout: null
    data_type: null
    dispatch: {scatter_grad: null}
  inplace: null
  backward: null
  forward:
    name: scatter
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    - {name: updates, typename: Tensor}
    attrs:
    - {name: overwrite, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
- name: scatter_nd_add_grad
  inputs:
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: updates, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: updates_grad, intermediate: false}
  no_need_buffer: [updates]
  infer_meta:
    func: ScatterNdAddGradInferMeta
    param: [index, updates, out_grad]
  kernel:
    func: [scatter_nd_add_grad]
    param: [index, updates, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {scatter_nd_add_grad: null}
  inplace: null
  backward: null
  forward:
    name: scatter_nd_add
    inputs:
    - {name: x, typename: Tensor}
    - {name: index, typename: Tensor}
    - {name: updates, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: selu_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: scale}
  - {typename: float, name: alpha}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [selu_grad]
    param: [out, out_grad, scale, alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out]
      to_complex_flag: [false]
    dispatch: {selu_grad: null}
  inplace: null
  backward: null
  forward:
    name: selu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: scale, typename: float}
    - {name: alpha, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: send_uv_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: src_index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: dst_index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [send_uv_grad]
    param: [x, y, src_index, dst_index, out_grad, message_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_uv_grad: null}
  inplace: null
  backward: null
  forward:
    name: send_uv
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    - {name: src_index, typename: Tensor}
    - {name: dst_index, typename: Tensor}
    attrs:
    - {name: message_op, typename: str}
    outputs:
    - {name: out, typename: Tensor}
- name: sigmoid_double_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: fwd_grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: fwd_grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, fwd_grad_out]
  kernel:
    func: [sigmoid_double_grad]
    param: [out, fwd_grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_double_grad: null}
  inplace: {fwd_grad_out_grad: grad_x_grad}
  backward: sigmoid_triple_grad
  forward:
    name: sigmoid_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: fwd_grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sigmoid_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [sigmoid_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_grad: null}
  inplace: {x_grad: out_grad}
  backward: sigmoid_double_grad
  forward:
    name: sigmoid
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sigmoid_triple_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: fwd_grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_grad_x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_grad_out_grad, optional: true, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: fwd_grad_out_grad, intermediate: false}
  - {typename: Tensor, name: grad_grad_x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [out, fwd_grad_out, grad_grad_x]
  kernel:
    func: [sigmoid_triple_grad]
    param: [out, fwd_grad_out, grad_grad_x, grad_out_grad, grad_grad_out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_triple_grad: null}
  inplace: {fwd_grad_out_grad: grad_grad_x}
  backward: null
  forward:
    name: sigmoid_double_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: fwd_grad_out, typename: Tensor}
    - {name: grad_grad_x, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_out, typename: Tensor}
    - {name: grad_grad_out, typename: Tensor}
- name: silu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [silu_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {silu_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: silu
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sin_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [sin_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: sin_triple_grad
  forward:
    name: sin_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sin_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sin_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_grad: null}
  inplace: {x_grad: out_grad}
  backward: sin_double_grad
  forward:
    name: sin
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sin_triple_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_forward, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad_forward, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_grad_grad, optional: true, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [x, x, grad_x_grad_forward]
  kernel:
    func: [sin_triple_grad]
    param: [x, grad_out_forward, grad_x_grad_forward, grad_x_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin_triple_grad: null}
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  backward: null
  forward:
    name: sin_double_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: sinh_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sinh_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sinh_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: sinh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: softplus_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: beta}
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softplus_grad]
    param: [x, out_grad, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: softplus
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: beta, typename: float}
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: softshrink_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softshrink_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softshrink_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: softshrink
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: softsign_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softsign_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {softsign_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: softsign
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: solve_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [solve_grad]
    param: [x, y, out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {solve_grad: null}
  inplace: null
  backward: null
  forward:
    name: solve
    inputs:
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: sqrt_double_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  kernel:
    func: [sqrt_double_grad]
    param: [out, grad_x, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sqrt_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: sqrt_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: sqrt_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [sqrt_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {sqrt_grad: null}
  inplace: {x_grad: out_grad}
  composite: {func_name: sqrt_grad, func_args: 'out, out_grad, x_grad'}
  backward: sqrt_double_grad
  forward:
    name: sqrt
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: square_double_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, x]
  kernel:
    func: [square_double_grad]
    param: [x, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {square_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: null
  forward:
    name: square_grad
    inputs:
    - {name: x, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: square_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [square_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {square_grad: null}
  inplace: {x_grad: out_grad}
  backward: square_double_grad
  forward:
    name: square
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: squeeze_double_grad
  inputs:
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  - {typename: Tensor, name: xshape, intermediate: true}
  no_need_buffer: null
  invoke: {func: squeeze, args: 'grad_x_grad, axis'}
  backward: null
  forward:
    name: squeeze_grad
    inputs:
    - {name: xshape, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: squeeze_grad
  inputs:
  - {typename: Tensor, name: xshape, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: KernelWithXShapeInferMeta
    param: [xshape]
  kernel:
    func: [squeeze_grad]
    param: [xshape, out_grad, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {squeeze_grad: null}
  inplace: {x_grad: out_grad}
  backward: squeeze_double_grad
  forward:
    name: squeeze
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: xshape, typename: Tensor}
- name: svd_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: u, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: vh, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: s, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: u_grad, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: vh_grad, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: s_grad, optional: true, no_need_buffer: false}
  attrs:
  - {typename: bool, name: full_matrices}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [svd_grad]
    param: [x, u, vh, s, u_grad, vh_grad, s_grad, full_matrices]
    backend: null
    layout: null
    data_type: null
    dispatch: {svd_grad: null}
  inplace: null
  backward: null
  forward:
    name: svd
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: full_matrices, typename: bool}
    outputs:
    - {name: u, typename: Tensor}
    - {name: s, typename: Tensor}
    - {name: vh, typename: Tensor}
- name: take_along_axis_grad
  inputs:
  - {typename: Tensor, name: arr, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: arr_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [arr]
  kernel:
    func: [take_along_axis_grad]
    param: [arr, indices, out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {take_along_axis_grad: null}
  inplace: null
  backward: null
  forward:
    name: take_along_axis
    inputs:
    - {name: arr, typename: Tensor}
    - {name: indices, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: tan_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tan_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tan_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: tan
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_double_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [out, out]
  kernel:
    func: [tanh_double_grad]
    param: [out, grad_out, grad_x_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_double_grad: null}
  inplace: {grad_out_grad: grad_x_grad}
  backward: tanh_triple_grad
  forward:
    name: tanh_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_x, typename: Tensor}
- name: tanh_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out]
  kernel:
    func: [tanh_grad]
    param: [out, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_grad: null}
  inplace: {x_grad: out_grad}
  composite: {func_name: tanh_grad, func_args: 'out, out_grad, x_grad'}
  backward: tanh_double_grad
  forward:
    name: tanh
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_shrink_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tanh_shrink_grad]
    param: [x, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_shrink_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: tanh_shrink
    inputs:
    - {name: x, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: tanh_triple_grad
  inputs:
  - {typename: Tensor, name: out, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_forward, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_x_grad_forward, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_new_grad, optional: true, no_need_buffer: false}
  - {typename: Tensor, name: grad_out_grad_grad, optional: true, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_grad, intermediate: false}
  - {typename: Tensor, name: grad_out_forward_grad, intermediate: false}
  - {typename: Tensor, name: grad_x_grad_forward_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GeneralTernaryGradInferMeta
    param: [out, out, grad_x_grad_forward]
  kernel:
    func: [tanh_triple_grad]
    param: [out, grad_out_forward, grad_x_grad_forward, grad_out_new_grad, grad_out_grad_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_triple_grad: null}
  inplace: {grad_out_forward_grad: grad_x_grad_forward}
  backward: null
  forward:
    name: tanh_double_grad
    inputs:
    - {name: out, typename: Tensor}
    - {name: grad_out_forward, typename: Tensor}
    - {name: grad_x_grad_forward, typename: Tensor}
    attrs: []
    outputs:
    - {name: grad_out_new, typename: Tensor}
    - {name: grad_out_grad, typename: Tensor}
- name: thresholded_relu_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [thresholded_relu_grad]
    param: [x, out_grad, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {thresholded_relu_grad: null}
  inplace: {x_grad: out_grad}
  backward: null
  forward:
    name: thresholded_relu
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: threshold, typename: float}
    outputs:
    - {name: out, typename: Tensor}
- name: topk_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar, name: k, data_type: float}
  - {typename: int, name: axis}
  - {typename: bool, name: largest}
  - {typename: bool, name: sorted}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [topk_grad]
    param: [x, indices, out_grad, k, axis, largest, sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {topk_grad: null}
  inplace: null
  backward: null
  forward:
    name: topk
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: k, typename: Scalar}
    - {name: axis, typename: int}
    - {name: largest, typename: bool}
    - {name: sorted, typename: bool}
    outputs:
    - {name: out, typename: Tensor}
    - {name: indices, typename: Tensor}
- name: trace_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset}
  - {typename: int, name: axis1}
  - {typename: int, name: axis2}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [trace_grad]
    param: [x, out_grad, offset, axis1, axis2]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {trace_grad: null}
  inplace: null
  backward: null
  forward:
    name: trace
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: offset, typename: int}
    - {name: axis1, typename: int}
    - {name: axis2, typename: int}
    outputs:
    - {name: out, typename: Tensor}
- name: trunc_grad
  inputs:
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: input_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [out_grad]
  kernel:
    func: [trunc_grad]
    param: [out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {trunc_grad: null}
  inplace: null
  backward: null
  forward:
    name: trunc
    inputs:
    - {name: input, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
- name: unfold_grad
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: [x]
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [unfold_grad]
    param: [x, out_grad, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {unfold_grad: null}
  inplace: null
  backward: null
  forward:
    name: unfold
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: kernel_sizes, typename: 'int[]'}
    - {name: strides, typename: 'int[]'}
    - {name: paddings, typename: 'int[]'}
    - {name: dilations, typename: 'int[]'}
    outputs:
    - {name: out, typename: Tensor}
- name: unsqueeze_double_grad
  inputs:
  - {typename: Tensor, name: grad_x_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axes, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: grad_out_grad, intermediate: false}
  - {typename: Tensor, name: xshape, intermediate: true}
  no_need_buffer: null
  invoke: {func: unsqueeze, args: 'grad_x_grad, axes'}
  backward: null
  forward:
    name: unsqueeze_grad
    inputs:
    - {name: xshape, typename: Tensor}
    - {name: grad_out, typename: Tensor}
    attrs:
    - {name: axes, typename: IntArray}
    outputs:
    - {name: grad_x, typename: Tensor}
- name: unsqueeze_grad
  inputs:
  - {typename: Tensor, name: xshape, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axes, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: KernelWithXShapeInferMeta
    param: [xshape]
  kernel:
    func: [unsqueeze_grad]
    param: [xshape, out_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [out_grad]
      to_complex_flag: [false]
    dispatch: {unsqueeze_grad: null}
  inplace: {x_grad: out_grad}
  backward: unsqueeze_double_grad
  forward:
    name: unsqueeze
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axes, typename: IntArray}
    outputs:
    - {name: out, typename: Tensor}
    - {name: xshape, typename: Tensor}
- name: unstack_grad
  inputs:
  - {typename: 'Tensor[]', name: out_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnStackGradInferMeta
    param: [out_grad, axis]
  kernel:
    func: [unstack_grad]
    param: [out_grad, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {unstack_grad: null}
  inplace: null
  backward: null
  forward:
    name: unstack
    inputs:
    - {name: x, typename: Tensor}
    attrs:
    - {name: axis, typename: int}
    - {name: num, typename: int}
    outputs:
    - {name: out, typename: 'Tensor[]'}
- name: warprnnt_grad
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: input_lengths, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: warprnntgrad, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: loss_grad, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: float, name: fastemit_lambda, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: input_grad, intermediate: false}
  no_need_buffer: [input]
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  kernel:
    func: [warprnnt_grad]
    param: [input, input_lengths, warprnntgrad, loss_grad, blank, fastemit_lambda]
    backend: null
    layout: null
    data_type: null
    dispatch: {warprnnt_grad: null}
  inplace: null
  backward: null
  forward:
    name: warprnnt
    inputs:
    - {name: input, typename: Tensor}
    - {name: label, typename: Tensor}
    - {name: input_lengths, typename: Tensor}
    - {name: label_lengths, typename: Tensor}
    attrs:
    - {name: blank, typename: int}
    - {name: fastemit_lambda, typename: float}
    outputs:
    - {name: loss, typename: Tensor}
    - {name: warprnntgrad, typename: Tensor}
- name: where_grad
  inputs:
  - {typename: Tensor, name: condition, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: x, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: true}
  - {typename: Tensor, name: out_grad, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: x_grad, intermediate: false}
  - {typename: Tensor, name: y_grad, intermediate: false}
  no_need_buffer: [x, y]
  infer_meta:
    func: GeneralBinaryGradInferMeta
    param: [x, y]
  kernel:
    func: [where_grad]
    param: [condition, x, y, out_grad]
    backend: null
    layout: null
    data_type: null
    dispatch: {where_grad: null}
  inplace: null
  backward: null
  forward:
    name: where
    inputs:
    - {name: condition, typename: Tensor}
    - {name: x, typename: Tensor}
    - {name: y, typename: Tensor}
    attrs: []
    outputs:
    - {name: out, typename: Tensor}
