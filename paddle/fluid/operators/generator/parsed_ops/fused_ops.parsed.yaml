- name: add_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_act_xpu]
    param: [x, x_max, y, y_max, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {add_act_xpu: null}
    force_backend: null
  infer_meta:
    func: AddActXPUInferMeta
    param: [x, x_max, y, y_max, act_type]
  inplace: null
  view: null
  backward: null
- name: add_layernorm_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [add_layernorm_xpu]
    param: [x, y, scale, bias, begin_norm_axis, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {add_layernorm_xpu: null}
    force_backend: null
  infer_meta:
    func: AddLayernormXPUInferMeta
    param: [x, y, scale, bias, begin_norm_axis, epsilon]
  inplace: null
  view: null
  backward: null
- name: addcmul_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [addcmul_xpu]
    param: [x, y, w]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {addcmul_xpu: null}
    force_backend: null
  infer_meta:
    func: AddCMulXPUInferMeta
    param: [x, y, w]
  inplace: null
  view: null
  backward: null
- name: block_multihead_attention_
  inputs:
  - typename: Tensor
    name: qkv
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key_cache
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value_cache
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_encoder
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_decoder
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens_this_time
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: padding_offsets
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cum_offsets
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: block_tables
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pre_key_cache
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pre_value_cache
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rope_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: tgt_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_k_quant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_v_quant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_k_dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cache_v_dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_out_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: qkv_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_shift
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_smooth
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: max_seq_len}
  - {typename: int, name: block_size}
  - {typename: bool, name: use_neox_style}
  - {typename: bool, name: dynamic_cachekv_quant, default_value: 'false'}
  - {typename: int, name: quant_round_type, default_value: '1'}
  - {typename: float, name: quant_max_bound, default_value: '127.0'}
  - {typename: float, name: quant_min_bound, default_value: '-127.0'}
  - {typename: float, name: out_scale, default_value: '-1'}
  - {typename: str, name: compute_dtype, default_value: '"default"'}
  outputs:
  - {typename: Tensor, name: fmha_out, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_out, optional: false, intermediate: false}
  - {typename: Tensor, name: key_cache_out, optional: false, intermediate: false}
  - {typename: Tensor, name: value_cache_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [block_multihead_attention]
    param: [qkv, key_cache, value_cache, seq_lens_encoder, seq_lens_decoder, seq_lens_this_time,
      padding_offsets, cum_offsets, cu_seqlens_q, cu_seqlens_k, block_tables, pre_key_cache,
      pre_value_cache, rope_emb, mask, tgt_mask, cache_k_quant_scales, cache_v_quant_scales,
      cache_k_dequant_scales, cache_v_dequant_scales, qkv_out_scale, qkv_bias, out_shift,
      out_smooth, max_seq_len, block_size, use_neox_style, dynamic_cachekv_quant,
      quant_round_type, quant_max_bound, quant_min_bound, out_scale, compute_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [qkv]
      to_complex_flag: [false]
    dispatch: {block_multihead_attention: null}
    force_backend: null
  infer_meta:
    func: BlockMultiheadAttentionInferMeta
    param: [qkv, key_cache, value_cache, seq_lens_encoder, seq_lens_decoder, seq_lens_this_time,
      padding_offsets, cum_offsets, cu_seqlens_q, cu_seqlens_k, block_tables, pre_key_cache,
      pre_value_cache, rope_emb, mask, tgt_mask, cache_k_quant_scales, cache_v_quant_scales,
      cache_k_dequant_scales, cache_v_dequant_scales, qkv_out_scale, qkv_bias, out_shift,
      out_smooth, max_seq_len, block_size, use_neox_style, dynamic_cachekv_quant,
      quant_round_type, quant_max_bound, quant_min_bound, out_scale, compute_dtype]
  inplace: {qkv_out: qkv, key_cache_out: key_cache, value_cache_out: value_cache}
  view: null
  backward: null
- name: bn_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variance
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: str, name: data_format}
  - {typename: int, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [bn_act_xpu]
    param: [x, mean, variance, scale, bias, momentum, epsilon, data_format, act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bn_act_xpu: null}
    force_backend: null
  infer_meta:
    func: BNActXPUInferMeta
    param: [x, mean, variance, scale, bias, momentum, epsilon, data_format, act_type]
  inplace: null
  view: null
  backward: null
- name: conv1d_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: dilations}
  - {typename: int, name: strides}
  - {typename: int, name: groups}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv1d_xpu]
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, paddings, padding_algorithm,
      dilations, strides, groups, act_type, act_param]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv1d_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv1dXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, paddings, padding_algorithm,
      dilations, strides, groups, act_type, act_param]
  inplace: null
  view: null
  backward: null
- name: conv2d_transpose_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: output_padding}
  - {typename: IntArray, name: output_size, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: 'int[]', name: dilations}
  - {typename: str, name: data_format}
  - {typename: bool, name: has_bias}
  - {typename: bool, name: with_act}
  - {typename: str, name: act_type}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_transpose_xpu]
    param: [x, x_max, filter, filter_max, bias, strides, paddings, output_padding,
      output_size, padding_algorithm, groups, dilations, data_format, has_bias, with_act,
      act_type]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv2d_transpose_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv2dTransposeXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, strides, paddings, output_padding,
      output_size, padding_algorithm, groups, dilations, data_format, has_bias, with_act,
      act_type]
  inplace: null
  view: null
  backward: null
- name: conv2d_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_max_in
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [conv2d_xpu]
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, scale_max, out_max_in,
      paddings, dilations, strides, padding_algorithm, groups, act_type, act_param,
      out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv2d_xpu: null}
    force_backend: null
  infer_meta:
    func: Conv2dXPUInferMeta
    param: [x, x_max, filter, filter_max, bias, branch, branch_max, scale_max, out_max_in,
      paddings, dilations, strides, padding_algorithm, groups, act_type, act_param,
      out_dtype]
  inplace: null
  view: null
  backward: null
- name: dequantize_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: out_dtype}
  - {typename: float, name: scale, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [dequantize_xpu]
    param: [x, out_dtype, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dequantize_xpu: null}
    force_backend: null
  infer_meta:
    func: DeQuantizeXPUInferMeta
    param: [x, out_dtype, scale]
  inplace: null
  view: null
  backward: null
- name: embedding_with_eltwise_add_xpu
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: tables
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: padding_idx}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: seq_lod, optional: true, intermediate: false}
  - {typename: Tensor, name: max_seq_len, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [embedding_with_eltwise_add_xpu]
    param: [ids, tables, mask, padding_idx]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [tables]
      to_complex_flag: [false]
    dispatch: {embedding_with_eltwise_add_xpu: null}
    force_backend: null
  infer_meta:
    func: EmbeddingWithEltwiseAddXPUInferMeta
    param: [ids, tables, mask]
  inplace: null
  view: null
  backward: null
- name: fast_layernorm_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fast_layernorm_xpu]
    param: [x, scale, bias, begin_norm_axis, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fast_layernorm_xpu: null}
    force_backend: null
  infer_meta:
    func: FastLayernormXPUInferMeta
    param: [x, scale, bias, begin_norm_axis, epsilon]
  inplace: null
  view: null
  backward: null
- name: fast_where_xpu
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fast_where_xpu]
    param: [condition, x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fast_where_xpu: null}
    force_backend: null
  infer_meta:
    func: FastWhereXPUInferMeta
    param: [condition, x, y]
  inplace: null
  view: null
  backward: null
- name: fc
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: in_num_col_dims, default_value: '1'}
  - {typename: str, name: activation_type, default_value: '""'}
  - {typename: bool, name: padding_weights, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fc]
    param: [input, w, bias, in_num_col_dims, activation_type, padding_weights]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {fc: null}
    force_backend: null
  infer_meta:
    func: FCInferMeta
    param: [input, w, bias, in_num_col_dims, activation_type, padding_weights]
  inplace: null
  view: null
  backward: null
- name: fc_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: out_max_in
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: in_num_col_dims}
  - {typename: bool, name: transpose_x}
  - {typename: float, name: alpha}
  - {typename: float, name: beta}
  - {typename: int, name: act_type}
  - {typename: float, name: act_alpha}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fc_xpu]
    param: [x, x_max, w, w_max, bias, scale_max, out_max_in, in_num_col_dims, transpose_x,
      alpha, beta, act_type, act_alpha, out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fc_xpu: null}
    force_backend: null
  infer_meta:
    func: FcXPUInferMeta
    param: [x, x_max, w, w_max, bias, scale_max, out_max_in, in_num_col_dims, transpose_x,
      alpha, beta, act_type, act_alpha, out_dtype]
  inplace: null
  view: null
  backward: null
- name: fused_bias_act
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dequant_scales
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: shift
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: smooth
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: act_method, default_value: '"gelu"'}
  - {typename: str, name: compute_dtype, default_value: '"default"'}
  - {typename: float, name: quant_scale, default_value: '-1'}
  - {typename: int, name: quant_round_type, default_value: '1'}
  - {typename: float, name: quant_max_bound, default_value: '127.0'}
  - {typename: float, name: quant_min_bound, default_value: '-127.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_act]
    param: [x, bias, dequant_scales, shift, smooth, act_method, compute_dtype, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_act: null}
    force_backend: null
  infer_meta:
    func: FusedBiasActInferMeta
    param: [x, bias, dequant_scales, shift, smooth, act_method, compute_dtype, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
  inplace: null
  view: null
  backward: null
- name: fused_bias_dropout_residual_layer_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ln_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout_rate, default_value: 0.5f}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: bool, name: dropout_fix_seed, default_value: 'true'}
  - {typename: int, name: dropout_seed, default_value: 'true'}
  - {typename: str, name: dropout_implementation, default_value: '"downgrade_in_infer"'}
  - {typename: float, name: ln_epsilon, default_value: 1e-5}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: bias_dropout_residual_out, optional: false, intermediate: true}
  - {typename: Tensor, name: dropout_mask_out, optional: false, intermediate: true}
  - {typename: Tensor, name: ln_mean, optional: false, intermediate: true}
  - {typename: Tensor, name: ln_variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_dropout_residual_layer_norm]
    param: [x, residual, bias, ln_scale, ln_bias, dropout_rate, is_test, dropout_fix_seed,
      dropout_seed, dropout_implementation, ln_epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_dropout_residual_layer_norm: null}
    force_backend: null
  infer_meta:
    func: FusedBiasDropoutResidualLnInferMeta
    param: [x, residual, bias, ln_scale, ln_bias, dropout_rate, is_test, dropout_fix_seed,
      dropout_seed, dropout_implementation, ln_epsilon]
  inplace: null
  view: null
  backward: fused_bias_dropout_residual_layer_norm_grad
- name: fused_bias_residual_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: float, name: residual_alpha}
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: quant_scale}
  - {typename: int, name: quant_round_type}
  - {typename: float, name: quant_max_bound}
  - {typename: float, name: quant_min_bound}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual_out, optional: true, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: false}
  - {typename: Tensor, name: variance, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_bias_residual_layernorm]
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_residual_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedLayerNormInferMeta
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
  inplace: null
  view: null
  backward: null
- name: fused_conv2d_add_act
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual_data
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: str, name: activation, default_value: '"relu"'}
  - {typename: 'int[]', name: split_channels, default_value: '{}'}
  - {typename: bool, name: exhaustive_search, default_value: 'false'}
  - {typename: int, name: workspace_size_MB, default_value: '32'}
  - {typename: float, name: fuse_alpha, default_value: 0.0f}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: outputs, size: split_channels.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_conv2d_add_act]
    param: [input, filter, bias, residual_data, strides, paddings, padding_algorithm,
      dilations, groups, data_format, activation, split_channels, exhaustive_search,
      workspace_size_MB, fuse_alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {fused_conv2d_add_act: null}
    force_backend: null
  infer_meta:
    func: FusedConv2dAddActInferMeta
    param: [input, filter, bias, residual_data, strides, paddings, padding_algorithm,
      dilations, groups, data_format, activation, split_channels]
  inplace: null
  view: null
  backward: null
- name: fused_dconv_drelu_dbn
  inputs:
  - typename: Tensor
    name: grad_output
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad_output_add
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_eqscale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_eqbias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: conv_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_inv_std
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_gamma
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_beta
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn1_input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_mean
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_inv_std
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_gamma
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_beta
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn2_input
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  - {typename: bool, name: fuse_shortcut}
  - {typename: bool, name: fuse_dual}
  - {typename: bool, name: fuse_add}
  - {typename: bool, name: exhaustive_search}
  outputs:
  - {typename: Tensor, name: grad_weight, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_input, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_gamma, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn1_beta, optional: false, intermediate: false}
  - {typename: Tensor, name: grad_bn2_input, optional: true, intermediate: false}
  - {typename: Tensor, name: grad_bn2_gamma, optional: true, intermediate: false}
  - {typename: Tensor, name: grad_bn2_beta, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dconv_drelu_dbn]
    param: [grad_output, weight, grad_output_add, residual_input, bn1_eqscale, bn1_eqbias,
      conv_input, bn1_mean, bn1_inv_std, bn1_gamma, bn1_beta, bn1_input, bn2_mean,
      bn2_inv_std, bn2_gamma, bn2_beta, bn2_input, paddings, dilations, strides, padding_algorithm,
      groups, data_format, fuse_shortcut, fuse_dual, fuse_add, exhaustive_search]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [grad_output]
      to_complex_flag: [false]
    dispatch: {fused_dconv_drelu_dbn: null}
    force_backend: null
  infer_meta:
    func: FusedDconvDreluDbnInferMeta
    param: [grad_output, weight, grad_output_add, residual_input, bn1_eqscale, bn1_eqbias,
      conv_input, bn1_mean, bn1_inv_std, bn1_gamma, bn1_beta, bn1_input, bn2_mean,
      bn2_inv_std, bn2_gamma, bn2_beta, bn2_input, paddings, dilations, strides, padding_algorithm,
      groups, data_format, fuse_shortcut, fuse_dual, fuse_add, exhaustive_search]
  inplace: null
  view: null
  backward: null
- name: fused_dot_product_attention
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scaling_factor}
  - {typename: float, name: dropout_probability}
  - {typename: bool, name: is_training, default_value: 'false'}
  - {typename: bool, name: is_causal_masking, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_out, optional: false, intermediate: false}
  - {typename: Tensor, name: rng_state, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dot_product_attention]
    param: [q, k, v, mask, scaling_factor, dropout_probability, is_training, is_causal_masking]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {fused_dot_product_attention: null}
    force_backend: null
  infer_meta:
    func: FusedDotProductAttentionInferMeta
    param: [q, k, v]
  inplace: null
  view: null
  backward: fused_dot_product_attention_grad
- name: fused_dropout_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seed_tensor
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: p, data_type: float}
  - {typename: bool, name: is_test}
  - {typename: str, name: mode}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: bool, name: fix_seed, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_dropout_add]
    param: [x, y, seed_tensor, p, is_test, mode, seed, fix_seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_dropout_add: null}
    force_backend: null
  infer_meta:
    func: FusedDropoutAddInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: fused_dropout_add_grad
- name: fused_embedding_eltwise_layernorm
  inputs:
  - typename: Tensor[]
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: embs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 0.00001f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_embedding_eltwise_layernorm]
    param: [ids, embs, bias, scale, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [embs]
      to_complex_flag: [false]
    dispatch: {fused_embedding_eltwise_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedEmbeddingEltWiseLayerNormInferMeta
    param: [ids, embs, bias, scale, epsilon]
  inplace: null
  view: null
  backward: null
- name: fused_fc_elementwise_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias0
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias1
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: x_num_col_dims, default_value: '1'}
  - {typename: str, name: activation_type, default_value: '""'}
  - {typename: float, name: epsilon, default_value: 0.00001f}
  - {typename: int, name: begin_norm_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: true, intermediate: false}
  - {typename: Tensor, name: variance, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_fc_elementwise_layernorm]
    param: [x, w, y, bias0, scale, bias1, x_num_col_dims, activation_type, epsilon,
      begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_fc_elementwise_layernorm: null}
    force_backend: null
  infer_meta:
    func: FusedFCElementwiseLayerNormInferMeta
    param: [x, w, y, bias0, scale, bias1, x_num_col_dims, activation_type, epsilon,
      begin_norm_axis]
  inplace: null
  view: null
  backward: null
- name: fused_linear_param_grad_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dout
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dweight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dbias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'true'}
  - {typename: bool, name: has_bias, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: dweight_out, optional: false, intermediate: false}
  - {typename: Tensor, name: dbias_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_linear_param_grad_add]
    param: [x, dout, dweight, dbias, multi_precision, has_bias]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dout]
      to_complex_flag: [false]
    dispatch: {fused_linear_param_grad_add: null}
    force_backend: null
  infer_meta:
    func: FusedLinearParamGradAddInferMeta
    param: [x, dout, dweight, dbias, multi_precision, has_bias]
  inplace: null
  view: null
  backward: null
- name: fused_multi_transformer_int8_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_in_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_scales
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: cache_kv
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: pre_caches
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rotary_pos_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: time_step
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lengths
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gather_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_buffer
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pre_layer_norm}
  - {typename: int, name: rotary_emb_dims}
  - {typename: float, name: epsilon}
  - {typename: float, name: dropout_rate}
  - {typename: bool, name: is_test}
  - {typename: str, name: dropout_implementation}
  - {typename: str, name: act_method}
  - {typename: bool, name: trans_qkvw}
  - {typename: int, name: ring_id}
  - {typename: int, name: gather_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: cache_kv_out, size: out_linear_w.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_multi_transformer_int8_xpu]
    param: [x, ln_scale, ln_bias, qkv_in_max, qkvw, qkv_bias, qkv_scales, out_linear_in_max,
      out_linear_w, out_linear_bias, out_linear_scales, ffn_ln_scale, ffn_ln_bias,
      ffn1_in_max, ffn1_weight, ffn1_bias, ffn1_scales, ffn2_in_max, ffn2_weight,
      ffn2_bias, ffn2_scales, cache_kv, pre_caches, rotary_pos_emb, time_step, seq_lengths,
      src_mask, gather_index, max_buffer, pre_layer_norm, rotary_emb_dims, epsilon,
      dropout_rate, is_test, dropout_implementation, act_method, trans_qkvw, ring_id,
      gather_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_multi_transformer_int8_xpu: null}
    force_backend: null
  infer_meta:
    func: FusedMultiTransformerInt8XpuInferMeta
    param: [x, ln_scale, ln_bias, qkv_in_max, qkvw, qkv_bias, qkv_scales, out_linear_in_max,
      out_linear_w, out_linear_bias, out_linear_scales, ffn_ln_scale, ffn_ln_bias,
      ffn1_in_max, ffn1_weight, ffn1_bias, ffn1_scales, ffn2_in_max, ffn2_weight,
      ffn2_bias, ffn2_scales, cache_kv, pre_caches, rotary_pos_emb, time_step, seq_lengths,
      src_mask, gather_index, max_buffer, pre_layer_norm, rotary_emb_dims, epsilon,
      dropout_rate, is_test, dropout_implementation, act_method, trans_qkvw, ring_id,
      gather_axis]
  inplace: null
  view: null
  backward: null
- name: fused_multi_transformer_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkvw_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: qkv_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_wmax
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: out_linear_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn_ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn1_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ffn2_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: cache_kv
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: pre_caches
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rotary_pos_emb
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: time_step
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lengths
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gather_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_buffer
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pre_layer_norm}
  - {typename: int, name: rotary_emb_dims}
  - {typename: float, name: epsilon}
  - {typename: float, name: dropout_rate}
  - {typename: bool, name: is_test}
  - {typename: str, name: dropout_implementation}
  - {typename: str, name: act_method}
  - {typename: bool, name: trans_qkvw}
  - {typename: int, name: ring_id}
  - {typename: int, name: gather_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: cache_kv_out, size: out_linear_w.size(), optional: false,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_multi_transformer_xpu]
    param: [x, ln_scale, ln_bias, qkvw, qkvw_max, qkv_bias, out_linear_w, out_linear_wmax,
      out_linear_bias, ffn_ln_scale, ffn_ln_bias, ffn1_weight, ffn1_weight_max, ffn1_bias,
      ffn2_weight, ffn2_weight_max, ffn2_bias, cache_kv, pre_caches, rotary_pos_emb,
      time_step, seq_lengths, src_mask, gather_index, max_buffer, pre_layer_norm,
      rotary_emb_dims, epsilon, dropout_rate, is_test, dropout_implementation, act_method,
      trans_qkvw, ring_id, gather_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_multi_transformer_xpu: null}
    force_backend: null
  infer_meta:
    func: FusedMultiTransformerXpuInferMeta
    param: [x, ln_scale, ln_bias, qkvw, qkvw_max, qkv_bias, out_linear_w, out_linear_wmax,
      out_linear_bias, ffn_ln_scale, ffn_ln_bias, ffn1_weight, ffn1_weight_max, ffn1_bias,
      ffn2_weight, ffn2_weight_max, ffn2_bias, cache_kv, pre_caches, rotary_pos_emb,
      time_step, seq_lengths, src_mask, gather_index, max_buffer, pre_layer_norm,
      rotary_emb_dims, epsilon, dropout_rate, is_test, dropout_implementation, act_method,
      trans_qkvw, ring_id, gather_axis]
  inplace: null
  view: null
  backward: null
- name: fused_rotary_position_embedding
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: sin
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cos
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: position_ids
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: use_neox_rotary_style, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out_q, optional: false, intermediate: false}
  - {typename: Tensor, name: out_k, optional: true, intermediate: false}
  - {typename: Tensor, name: out_v, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_rotary_position_embedding]
    param: [q, k, v, sin, cos, position_ids, use_neox_rotary_style]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {fused_rotary_position_embedding: null}
    force_backend: null
  infer_meta:
    func: FusedRopeInferMeta
    spmd_rule: FusedRopeInferSpmd
    param: [q, k, v, sin, cos, position_ids, use_neox_rotary_style]
  inplace: null
  view: null
  backward: fused_rotary_position_embedding_grad
- name: fused_scale_bias_add_relu
  inputs:
  - typename: Tensor
    name: x1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale2
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias2
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: fuse_dual}
  - {typename: bool, name: exhaustive_search}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_scale_bias_add_relu]
    param: [x1, scale1, bias1, x2, scale2, bias2, fuse_dual, exhaustive_search]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x1]
      to_complex_flag: [false]
    dispatch: {fused_scale_bias_add_relu: null}
    force_backend: null
  infer_meta:
    func: FusedScaleBiasAddReluInferMeta
    param: [x1, scale1, bias1, x2, scale2, bias2, fuse_dual, exhaustive_search]
  inplace: null
  view: null
  backward: null
- name: fused_scale_bias_relu_conv_bn
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bn_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_running_mean
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_running_var
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  - {typename: 'int[]', name: strides}
  - {typename: str, name: padding_algorithm}
  - {typename: int, name: groups}
  - {typename: str, name: data_format}
  - {typename: float, name: momentum}
  - {typename: float, name: epsilon}
  - {typename: bool, name: fuse_prologue}
  - {typename: bool, name: exhaustive_search}
  - {typename: int64_t, name: accumulation_count, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_running_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: out_running_var, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_var, optional: false, intermediate: false}
  - {typename: Tensor, name: eq_scale, optional: false, intermediate: false}
  - {typename: Tensor, name: eq_bias, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fused_scale_bias_relu_conv_bn]
    param: [x, w, scale, bias, bn_scale, bn_bias, input_running_mean, input_running_var,
      paddings, dilations, strides, padding_algorithm, groups, data_format, momentum,
      epsilon, fuse_prologue, exhaustive_search, accumulation_count]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_scale_bias_relu_conv_bn: null}
    force_backend: null
  infer_meta:
    func: FusedScaleBiasReluConvBnInferMeta
    param: [x, w, scale, bias, bn_scale, bn_bias, input_running_mean, input_running_var,
      paddings, dilations, strides, padding_algorithm, groups, data_format, momentum,
      epsilon, fuse_prologue, exhaustive_search, accumulation_count]
  inplace: null
  view: null
  backward: null
- name: fusion_gru
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: h0
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_h
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: activation, default_value: '"tanh"'}
  - {typename: str, name: gate_activation, default_value: '"sigmoid"'}
  - {typename: bool, name: is_reverse, default_value: 'false'}
  - {typename: bool, name: use_seq, default_value: 'true'}
  - {typename: bool, name: origin_mode, default_value: 'false'}
  - {typename: bool, name: use_mkldnn, default_value: 'false'}
  - {typename: str, name: mkldnn_data_type, default_value: '"float32"'}
  - {typename: float, name: scale_data, default_value: 1.0f}
  - {typename: float, name: shift_data, default_value: 0.0f}
  - {typename: 'float[]', name: scale_weights, default_value: '{1.0f}'}
  - {typename: bool, name: force_fp32_output, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: reordered_h0, optional: false, intermediate: true}
  - {typename: Tensor, name: xx, optional: false, intermediate: true}
  - {typename: Tensor, name: batched_input, optional: false, intermediate: true}
  - {typename: Tensor, name: batched_out, optional: false, intermediate: true}
  - {typename: Tensor, name: hidden, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_gru]
    param: [x, h0, weight_x, weight_h, bias, activation, gate_activation, is_reverse,
      use_seq, origin_mode, use_mkldnn, mkldnn_data_type, scale_data, shift_data,
      scale_weights, force_fp32_output]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_gru: null}
    force_backend: null
  infer_meta:
    func: FusionGRUInferMeta
    param: [x, h0, weight_x, weight_h, bias, activation, gate_activation, is_reverse,
      use_seq, origin_mode, use_mkldnn, mkldnn_data_type, scale_data, shift_data,
      scale_weights, force_fp32_output]
  inplace: null
  view: null
  backward: null
- name: fusion_repeated_fc_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: relu_out, size: w.size()-1, optional: false, intermediate: true}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_repeated_fc_relu]
    param: [x, w, bias]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_repeated_fc_relu: null}
    force_backend: null
  infer_meta:
    func: FusionRepeatedFCReluInferMeta
    param: [x, w, bias]
  inplace: null
  view: null
  backward: null
- name: fusion_seqconv_eltadd_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: context_length}
  - {typename: int, name: context_start, default_value: '0'}
  - {typename: int, name: context_stride, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: col_mat, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_seqconv_eltadd_relu]
    param: [x, filter, bias, context_length, context_start, context_stride]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_seqconv_eltadd_relu: null}
    force_backend: null
  infer_meta:
    func: FusionSeqConvEltAddReluInferMeta
    param: [x, filter, bias, context_length, context_start, context_stride]
  inplace: null
  view: null
  backward: null
- name: fusion_seqexpand_concat_fc
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fc_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fc_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: fc_activation, default_value: '"identity"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: fc_out, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_seqexpand_concat_fc]
    param: [x, fc_weight, fc_bias, fc_activation]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_seqexpand_concat_fc: null}
    force_backend: null
  infer_meta:
    func: FusionSeqExpandConcatFCInferMeta
    param: [x, fc_weight, fc_bias, fc_activation]
  inplace: null
  view: null
  backward: null
- name: fusion_squared_mat_sub
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scalar, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: squared_x, optional: false, intermediate: true}
  - {typename: Tensor, name: squared_y, optional: false, intermediate: true}
  - {typename: Tensor, name: squared_xy, optional: false, intermediate: true}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_squared_mat_sub]
    param: [x, y, scalar]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_squared_mat_sub: null}
    force_backend: null
  infer_meta:
    func: FusionSquaredMatSubInferMeta
    param: [x, y, scalar]
  inplace: null
  view: null
  backward: null
- name: fusion_transpose_flatten_concat
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: trans_axis}
  - {typename: int, name: flatten_axis}
  - {typename: int, name: concat_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [fusion_transpose_flatten_concat]
    param: [x, trans_axis, flatten_axis, concat_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fusion_transpose_flatten_concat: null}
    force_backend: null
  infer_meta:
    func: FusionTransposeFlattenConcatInferMeta
    param: [x, trans_axis, flatten_axis, concat_axis]
  inplace: null
  view: null
  backward: null
- name: generate_sequence_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [generate_sequence_xpu]
    param: [x, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {generate_sequence_xpu: null}
    force_backend: null
  infer_meta:
    func: GenerateSequenceXPUInferMeta
    param: [x, dtype]
  inplace: null
  view: null
  backward: null
- name: layer_norm_act_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: epsilon}
  - {typename: int, name: act_type}
  - {typename: float, name: act_param}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [layer_norm_act_xpu]
    param: [x, scale, bias, begin_norm_axis, epsilon, act_type, act_param]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {layer_norm_act_xpu: null}
    force_backend: null
  infer_meta:
    func: LayerNormActXPUInferMeta
    param: [x, scale, bias, begin_norm_axis, epsilon, act_type, act_param]
  inplace: null
  view: null
  backward: null
- name: max_pool2d_v2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_idx, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [max_pool2d_v2]
    param: [x, kernel_size, strides, paddings, data_format, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool2d_v2: null}
    force_backend: null
  infer_meta:
    func: MaxPoolV2InferMeta
    param: [x, kernel_size, strides, paddings, data_format, global_pooling, adaptive]
  inplace: null
  view: null
  backward: max_pool2d_v2_grad
- name: multi_encoder_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_weight_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: fc_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: ln_bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lod
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: max_seq_len
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: layer_num}
  - {typename: bool, name: norm_before}
  - {typename: int, name: hidden_dim}
  - {typename: int, name: head_num}
  - {typename: int, name: size_per_head}
  - {typename: int, name: ffn_hidden_dim_scale}
  - {typename: int, name: act_type}
  - {typename: int, name: relative_type}
  - {typename: int, name: slice_idx}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: x_fp16, optional: true, intermediate: false}
  - {typename: Tensor, name: out_fp16, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multi_encoder_xpu]
    param: [x, fc_weight, fc_weight_max, fc_bias, ln_scale, ln_bias, mask, seq_lod,
      max_seq_len, layer_num, norm_before, hidden_dim, head_num, size_per_head, ffn_hidden_dim_scale,
      act_type, relative_type, slice_idx]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {multi_encoder_xpu: null}
    force_backend: null
  infer_meta:
    func: MultiEncoderXPUInferMeta
    param: [x, fc_weight, fc_weight_max, fc_bias, ln_scale, ln_bias, mask, seq_lod,
      max_seq_len, layer_num, norm_before, hidden_dim, head_num, size_per_head, ffn_hidden_dim_scale,
      act_type, relative_type, slice_idx]
  inplace: null
  view: null
  backward: null
- name: multihead_matmul
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: w
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias_qk
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: transpose_q, default_value: 'false'}
  - {typename: bool, name: transpose_k, default_value: 'true'}
  - {typename: bool, name: transpose_v, default_value: 'false'}
  - {typename: float, name: alpha, default_value: 1.0f}
  - {typename: int, name: head_number, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [multihead_matmul]
    param: [input, w, bias, bias_qk, transpose_q, transpose_k, transpose_v, alpha,
      head_number]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {multihead_matmul: null}
    force_backend: null
  infer_meta:
    func: MultiheadMatmulInferMeta
    param: [input, w, bias, bias_qk, transpose_q, transpose_k, transpose_v, alpha,
      head_number]
  inplace: null
  view: null
  backward: null
- name: qkv_attention_xpu
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: q_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha}
  - {typename: int, name: head_num}
  - {typename: int, name: head_dim}
  - {typename: bool, name: qkv_fc_fusion}
  - {typename: DataType, name: out_dtype}
  outputs:
  - {typename: Tensor, name: qkv, optional: false, intermediate: false}
  - {typename: Tensor, name: qkv_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [qkv_attention_xpu]
    param: [q, k, v, q_max, k_max, v_max, alpha, head_num, head_dim, qkv_fc_fusion,
      out_dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {qkv_attention_xpu: null}
    force_backend: null
  infer_meta:
    func: QKVAttentionXPUInferMeta
    param: [q, k, v, q_max, k_max, v_max, alpha, head_num, head_dim, qkv_fc_fusion,
      out_dtype]
  inplace: null
  view: null
  backward: null
- name: quantize_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: out_dtype}
  - {typename: float, name: scale, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [quantize_xpu]
    param: [x, out_dtype, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {quantize_xpu: null}
    force_backend: null
  infer_meta:
    func: QuantizeXPUInferMeta
    param: [x, out_dtype, scale]
  inplace: null
  view: null
  backward: null
- name: self_dp_attention
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: 1.0f}
  - {typename: int, name: head_number, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [self_dp_attention]
    param: [x, alpha, head_number]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {self_dp_attention: null}
    force_backend: null
  infer_meta:
    func: SelfDPAttenInferMeta
    param: [x, alpha, head_number]
  inplace: null
  view: null
  backward: null
- name: sine_pos_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [sine_pos_xpu]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {sine_pos_xpu: null}
    force_backend: null
  infer_meta:
    func: SinePosXPUInferMeta
    param: [x, y]
  inplace: null
  view: null
  backward: null
- name: skip_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: int, name: begin_norm_axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [skip_layernorm]
    param: [x, y, scale, bias, epsilon, begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {skip_layernorm: null}
    force_backend: null
  infer_meta:
    func: SkipLayerNormInferMeta
    param: [x, y, scale, bias, epsilon, begin_norm_axis]
  inplace: null
  view: null
  backward: null
- name: squeeze_excitation_block
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter_max
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: branch
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: act_type}
  - {typename: 'float[]', name: act_param}
  - {typename: 'int[]', name: filter_dims}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [squeeze_excitation_block]
    param: [x, filter, filter_max, bias, branch, act_type, act_param, filter_dims]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {squeeze_excitation_block: null}
    force_backend: null
  infer_meta:
    func: SqueezeExcitationInferMeta
    param: [x, filter, filter_max, bias, branch, act_type, act_param, filter_dims]
  inplace: null
  view: null
  backward: null
- name: variable_length_memory_efficient_attention
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: kv_seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale}
  - {typename: bool, name: causal}
  - {typename: int, name: pre_cache_length}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [variable_length_memory_efficient_attention]
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal, pre_cache_length]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [query]
      to_complex_flag: [false]
    dispatch: {variable_length_memory_efficient_attention: null}
    force_backend: null
  infer_meta:
    func: VariableLengthMemoryEfficientAttentionInferMeta
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal, pre_cache_length]
  inplace: null
  view: null
  backward: null
- name: yolo_box_xpu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x_max
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stride
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: anchor_grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: offset}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: out_max, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  support_tensor: []
  traits: []
  interfaces: []
  kernel:
    func: [yolo_box_xpu]
    param: [x, x_max, grid, stride, anchor_grid, offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_box_xpu: null}
    force_backend: null
  infer_meta:
    func: YoloBoxXPUInferMeta
    param: [x, x_max, grid, stride, anchor_grid, offset]
  inplace: null
  view: null
  backward: null
