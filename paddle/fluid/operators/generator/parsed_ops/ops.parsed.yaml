- name: abs
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [abs]
    param: [x]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {abs: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: abs_grad
- name: accuracy
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: accuracy, optional: false, intermediate: false}
  - {typename: Tensor, name: correct, optional: false, intermediate: false}
  - {typename: Tensor, name: total, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AccuracyInferMeta
    param: [x, indices, label]
  kernel:
    func: [accuracy]
    param: [x, indices, label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {accuracy: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: acos
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acos: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: acos_grad
- name: acosh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acosh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: acosh_grad
- name: adagrad_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1.0e-6f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AdagradInferMeta
    param: [param, grad, moment, learning_rate, master_param, epsilon, multi_precision]
  kernel:
    func: [adagrad, adagrad_dense_param_sparse_grad]
    param: [param, grad, moment, learning_rate, master_param, epsilon, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      adagrad:
      - [dense, dense, dense, dense, dense]
      - [dense, dense, dense]
      adagrad_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense]
      - [dense, dense, dense]
    force_backend: null
  inplace: {param_out: param, moment_out: moment, master_param_out: master_param}
  view: null
  backward: null
- name: adam_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: bool, name: lazy_mode, default_value: 'false'}
  - {typename: int64_t, name: min_row_size_to_use_multithread, default_value: '1000'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AdamInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lazy_mode, min_row_size_to_use_multithread,
      multi_precision, use_global_beta_pow]
  kernel:
    func: [adam, adam_dense_param_sparse_grad]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lazy_mode, min_row_size_to_use_multithread,
      multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      adam:
      - [dense, dense, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
      adam_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: adamax_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: inf_norm
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta1, default_value: 0.9f}
  - {typename: float, name: beta2, default_value: 0.999f}
  - {typename: float, name: epsilon, default_value: 1.0e-8f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: inf_norm_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AdamaxInferMeta
    param: [param, grad, learning_rate, moment, inf_norm, beta1_pow, master_param,
      beta1, beta2, epsilon, multi_precision]
  kernel:
    func: [adamax]
    param: [param, grad, learning_rate, moment, inf_norm, beta1_pow, master_param,
      beta1, beta2, epsilon, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {adamax: null}
    force_backend: null
  inplace: {param_out: param, moment_out: moment, inf_norm_out: inf_norm, master_param_out: master_param}
  view: null
  backward: null
- name: adamw_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: float, name: lr_ratio, default_value: 1.0f}
  - {typename: float, name: coeff, default_value: 0.01f}
  - {typename: bool, name: with_decay, default_value: 'false'}
  - {typename: bool, name: lazy_mode, default_value: 'false'}
  - {typename: int64_t, name: min_row_size_to_use_multithread, default_value: '1000'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AdamwInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lr_ratio, coeff, with_decay, lazy_mode,
      min_row_size_to_use_multithread, multi_precision, use_global_beta_pow]
  kernel:
    func: [adamw]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, beta1, beta2, epsilon, lr_ratio, coeff, with_decay, lazy_mode,
      min_row_size_to_use_multithread, multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {adamw: null}
    force_backend: null
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: addmm
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AddmmInferMeta
    param: [input, x, y, beta, alpha]
  kernel:
    func: [addmm]
    param: [input, x, y, beta, alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {addmm: null}
    force_backend: null
  inplace: {out: input}
  view: null
  backward: addmm_grad
- name: affine_grid
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: output_shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AffineGridInferMeta
    param: [input, output_shape, align_corners]
  kernel:
    func: [affine_grid]
    param: [input, output_shape, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {affine_grid: null}
    force_backend: null
  inplace: null
  view: null
  backward: affine_grid_grad
- name: allclose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: rtol, default_value: '"1e-5"', data_type: float}
  - {typename: Scalar, name: atol, default_value: '"1e-8"', data_type: float}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AllValueCompareInferMeta
    param: [x, y]
  kernel:
    func: [allclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {allclose: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: angle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [angle]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {angle: null}
    force_backend: null
  inplace: null
  view: null
  backward: angle_grad
- name: argmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int64_t), name: axis, data_type: int64_t}
  - {typename: bool, name: keepdims, default_value: 'false'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: int, name: dtype, default_value: '3'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ArgMinMaxInferMeta
    param: [x, axis, keepdims, flatten, dtype]
  kernel:
    func: [argmax]
    param: [x, axis, keepdims, flatten, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {argmax: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: argmin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int64_t), name: axis, data_type: int64_t}
  - {typename: bool, name: keepdims, default_value: 'false'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: int, name: dtype, default_value: '3'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ArgMinMaxInferMeta
    param: [x, axis, keepdims, flatten, dtype]
  kernel:
    func: [argmin]
    param: [x, axis, keepdims, flatten, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {argmin: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: argsort
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: descending, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ArgsortInferMeta
    param: [x, axis, descending]
  kernel:
    func: [argsort]
    param: [x, axis, descending]
    backend: null
    layout: null
    data_type: null
    dispatch: {argsort: null}
    force_backend: null
  inplace: null
  view: null
  backward: argsort_grad
- name: as_complex
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AsComplexInferMeta
    param: [x]
  kernel:
    func: [as_complex]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_complex: null}
    force_backend: null
  inplace: null
  view: null
  backward: as_complex_grad
- name: as_real
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AsRealInferMeta
    param: [x]
  kernel:
    func: [as_real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_real: null}
    force_backend: null
  inplace: null
  view: null
  backward: as_real_grad
- name: as_strided
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  - {typename: 'int64_t[]', name: stride, default_value: '{}'}
  - {typename: int64_t, name: offset, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  kernel:
    func: [as_strided]
    param: [input, dims, stride, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_strided: null}
    force_backend: null
  inplace: null
  view: null
  backward: as_strided_grad
- name: asin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asin: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: asin_grad
- name: asinh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asinh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: asinh_grad
- name: atan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: atan_grad
- name: atan2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: Atan2InferMeta
    param: [x, y]
  kernel:
    func: [atan2]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan2: null}
    force_backend: null
  inplace: null
  view: null
  backward: atan2_grad
- name: atanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atanh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: atanh_grad
- name: auc
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stat_pos
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: stat_neg
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: ins_tag_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: curve, default_value: '"ROC"'}
  - {typename: int, name: num_thresholds, default_value: (2 << 12) - 1}
  - {typename: int, name: slide_steps, default_value: '1'}
  outputs:
  - {typename: Tensor, name: auc, optional: false, intermediate: false}
  - {typename: Tensor, name: stat_pos_out, optional: false, intermediate: false}
  - {typename: Tensor, name: stat_neg_out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AucInferMeta
    param: [x, label, stat_pos, stat_neg, ins_tag_weight, curve, num_thresholds, slide_steps]
  kernel:
    func: [auc]
    param: [x, label, stat_pos, stat_neg, ins_tag_weight, curve, num_thresholds, slide_steps]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {auc: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: average_accumulates_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_sum_3
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_num_accumulates
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_old_num_accumulates
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: in_num_updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: average_window, default_value: '0'}
  - {typename: int64_t, name: max_average_window, default_value: INT64_MAX}
  - {typename: int64_t, name: min_average_window, default_value: 10000L}
  outputs:
  - {typename: Tensor, name: out_sum_1, optional: false, intermediate: false}
  - {typename: Tensor, name: out_sum_2, optional: false, intermediate: false}
  - {typename: Tensor, name: out_sum_3, optional: false, intermediate: false}
  - {typename: Tensor, name: out_num_accumulates, optional: false, intermediate: false}
  - {typename: Tensor, name: out_old_num_accumulates, optional: false, intermediate: false}
  - {typename: Tensor, name: out_num_updates, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: AverageAccumulatesInferMeta
    param: [param, in_sum_1, in_sum_2, in_sum_3, in_num_accumulates, in_old_num_accumulates,
      in_num_updates, average_window, max_average_window, min_average_window]
  kernel:
    func: [average_accumulates]
    param: [param, in_sum_1, in_sum_2, in_sum_3, in_num_accumulates, in_old_num_accumulates,
      in_num_updates, average_window, max_average_window, min_average_window]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      average_accumulates:
      - [dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  inplace: {out_sum_1: in_sum_1, out_sum_2: in_sum_2, out_sum_3: in_sum_3, out_num_accumulates: in_num_accumulates,
    out_old_num_accumulates: in_old_num_accumulates, out_num_updates: in_num_updates}
  view: null
  backward: null
- name: bce_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BCELossInferMeta
    param: [input, label]
  kernel:
    func: [bce_loss]
    param: [input, label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {bce_loss: null}
    force_backend: null
  inplace: {out: input}
  view: null
  backward: bce_loss_grad
- name: bernoulli
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [bernoulli]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {bernoulli: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bicubic_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  kernel:
    func: [bicubic_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bicubic_interp: null}
    force_backend: null
  inplace: null
  view: null
  backward: bicubic_interp_grad
- name: bilinear
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BilinearInferMeta
    param: [x, y, weight, bias]
  kernel:
    func: [bilinear]
    param: [x, y, weight, bias]
    backend: null
    layout: null
    data_type: null
    dispatch: {bilinear: null}
    force_backend: null
  inplace: null
  view: null
  backward: bilinear_grad
- name: bilinear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  kernel:
    func: [bilinear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {bilinear_interp: null}
    force_backend: null
  inplace: null
  view: null
  backward: bilinear_interp_grad
- name: bincount
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weights
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: minlength, default_value: '0', data_type: int}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BincountInferMeta
    param: [x, weights, minlength]
  kernel:
    func: [bincount]
    param: [x, weights, minlength]
    backend: null
    layout: null
    data_type: null
    dispatch: {bincount: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bitwise_and
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [bitwise_and]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_and: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bitwise_not
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [bitwise_not]
    param: [x]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_not: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bitwise_or
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [bitwise_or]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_or: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bitwise_xor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [bitwise_xor]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type: null
    dispatch: {bitwise_xor: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: bmm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BmmInferMeta
    param: [x, y]
  kernel:
    func: [bmm]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {bmm: null}
    force_backend: null
  inplace: null
  view: null
  backward: bmm_grad
- name: box_coder
  inputs:
  - typename: Tensor
    name: prior_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: prior_box_var
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: target_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: code_type, default_value: '"encode_center_size"'}
  - {typename: bool, name: box_normalized, default_value: 'true'}
  - {typename: int, name: axis, default_value: '0'}
  - {typename: 'float[]', name: variance, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: output_box, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BoxCoderInferMeta
    param: [prior_box, prior_box_var, target_box, code_type, box_normalized, axis,
      variance]
  kernel:
    func: [box_coder]
    param: [prior_box, prior_box_var, target_box, code_type, box_normalized, axis,
      variance]
    backend: null
    layout: null
    data_type: null
    dispatch: {box_coder: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: broadcast_tensors
  inputs:
  - typename: Tensor[]
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: input.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: BroadcastTensorsInferMeta
    param: [input]
  kernel:
    func: [broadcast_tensors]
    param: [input]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {broadcast_tensors: null}
    force_backend: null
  inplace: null
  view: null
  backward: broadcast_tensors_grad
- name: ceil
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [ceil]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {ceil: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: ceil_grad
- name: celu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [celu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu: null}
    force_backend: null
  inplace: null
  view: null
  backward: celu_grad
- name: check_finite_and_unscale_
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: x.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: found_infinite, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CheckFiniteAndUnscaleInferMeta
    param: [x, scale]
  kernel:
    func: [check_finite_and_unscale]
    param: [x, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {check_finite_and_unscale: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: null
- name: check_numerics
  inputs:
  - typename: Tensor
    name: tensor
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: op_type, default_value: '""'}
  - {typename: str, name: var_name, default_value: '""'}
  - {typename: int, name: check_nan_inf_level, default_value: '0'}
  - {typename: int, name: stack_height_limit, default_value: '-1'}
  - {typename: str, name: output_dir, default_value: '""'}
  outputs:
  - {typename: Tensor, name: stats, optional: false, intermediate: false}
  - {typename: Tensor, name: values, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CheckNumericsInferMeta
    param: [tensor, op_type, var_name, check_nan_inf_level, stack_height_limit, output_dir]
  kernel:
    func: [check_numerics]
    param: [tensor, op_type, var_name, check_nan_inf_level, stack_height_limit, output_dir]
    backend: null
    layout: null
    data_type: null
    dispatch: {check_numerics: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: cholesky
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CholeskyInferMeta
    param: [x, upper]
  kernel:
    func: [cholesky]
    param: [x, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky: null}
    force_backend: null
  inplace: null
  view: null
  backward: cholesky_grad
- name: cholesky_solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CholeskySolveInferMeta
    param: [x, y, upper]
  kernel:
    func: [cholesky_solve]
    param: [x, y, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_solve: null}
    force_backend: null
  inplace: null
  view: null
  backward: cholesky_solve_grad
- name: class_center_sample
  inputs:
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: num_classes}
  - {typename: int, name: num_samples}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: rank, default_value: '0'}
  - {typename: int, name: nranks, default_value: '1'}
  - {typename: bool, name: fix_seed, default_value: 'false'}
  - {typename: int, name: seed, default_value: '0'}
  outputs:
  - {typename: Tensor, name: remapped_label, optional: false, intermediate: false}
  - {typename: Tensor, name: sampled_local_class_center, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ClassCenterSampleInferMeta
    param: [label, num_classes, num_samples, ring_id, rank, nranks, fix_seed, seed]
  kernel:
    func: [class_center_sample]
    param: [label, num_classes, num_samples, ring_id, rank, nranks, fix_seed, seed]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [label]
      to_complex_flag: [false]
    dispatch: {class_center_sample: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: clip
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(float), name: min, data_type: float}
  - {typename: Scalar(float), name: max, data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [clip]
    param: [x, min, max]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {clip: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: clip_grad
- name: clip_by_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ClipByNormInferMeta
    param: [x, max_norm]
  kernel:
    func: [clip_by_norm, clip_by_norm_sr]
    param: [x, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch:
      clip_by_norm:
      - [dense]
      - [dense]
      clip_by_norm_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: coalesce_tensor
  inputs:
  - typename: Tensor[]
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  - {typename: bool, name: copy_data, default_value: 'false'}
  - {typename: bool, name: set_constant, default_value: 'false'}
  - {typename: bool, name: persist_output, default_value: 'false'}
  - {typename: float, name: constant, default_value: '0.0'}
  - {typename: bool, name: use_align, default_value: 'true'}
  - {typename: int, name: align_size, default_value: '-1'}
  - {typename: int, name: size_of_dtype, default_value: '-1'}
  - {typename: 'int64_t[]', name: concated_shapes, default_value: '{}'}
  - {typename: 'int64_t[]', name: concated_ranks, default_value: '{}'}
  outputs:
  - {typename: 'Tensor[]', name: output, size: input.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: fused_output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CoalesceTensorInferMeta
    param: [input, dtype, copy_data, set_constant, persist_output, constant, use_align,
      align_size, size_of_dtype, concated_shapes, concated_ranks]
  kernel:
    func: [coalesce_tensor]
    param: [input, dtype, copy_data, set_constant, persist_output, constant, use_align,
      align_size, size_of_dtype, concated_shapes, concated_ranks]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {coalesce_tensor: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: complex
  inputs:
  - typename: Tensor
    name: real
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: imag
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ComplexInferMeta
    param: [real, imag]
  kernel:
    func: [complex]
    param: [real, imag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [real]
      to_complex_flag: [false]
    dispatch: {complex: null}
    force_backend: null
  inplace: null
  view: null
  backward: complex_grad
- name: concat
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ConcatInferMeta
    param: [x, axis]
  kernel:
    func: [concat]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {concat: null}
    force_backend: null
  inplace: null
  view: null
  backward: concat_grad
- name: conj
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [conj]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {conj: null}
    force_backend: null
  inplace: null
  view: null
  backward: conj_grad
- name: conv2d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ConvInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, dilations, groups,
      data_format]
  kernel:
    func: [conv2d]
    param: [input, filter, strides, paddings, padding_algorithm, dilations, groups,
      data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {conv2d: null}
    force_backend: null
  inplace: null
  view: null
  backward: conv2d_grad
- name: conv3d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: Conv3DInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
  kernel:
    func: [conv3d]
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {conv3d: null}
    force_backend: null
  inplace: null
  view: null
  backward: conv3d_grad
- name: conv3d_transpose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: 'int[]', name: output_padding, default_value: '{}'}
  - {typename: 'int[]', name: output_size, default_value: '{}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ConvTransposeInferMeta
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
  kernel:
    func: [conv3d_transpose]
    param: [x, filter, strides, paddings, output_padding, output_size, padding_algorithm,
      groups, dilations, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {conv3d_transpose: null}
    force_backend: null
  inplace: null
  view: null
  backward: conv3d_transpose_grad
- name: cos
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: cos_grad
- name: cosh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cosh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: cosh_grad
- name: crop
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: offsets, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CropInferMeta
    param: [x, shape, offsets]
  kernel:
    func: [crop]
    param: [x, shape, offsets]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {crop: null}
    force_backend: null
  inplace: null
  view: null
  backward: crop_grad
- name: cross
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '9'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CrossInferMeta
    param: [x, y, axis]
  kernel:
    func: [cross]
    param: [x, y, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cross: null}
    force_backend: null
  inplace: null
  view: null
  backward: cross_grad
- name: cross_entropy_with_softmax
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: soft_label, default_value: 'false'}
  - {typename: bool, name: use_softmax, default_value: 'true'}
  - {typename: bool, name: numeric_stable_mode, default_value: 'true'}
  - {typename: int, name: ignore_index, default_value: '-100'}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CrossEntropyWithSoftmaxInferMeta
    param: [input, label, soft_label, use_softmax, numeric_stable_mode, ignore_index,
      axis]
  kernel:
    func: [cross_entropy_with_softmax]
    param: [input, label, soft_label, use_softmax, numeric_stable_mode, ignore_index,
      axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {cross_entropy_with_softmax: null}
    force_backend: null
  inplace: {softmax: input}
  view: null
  backward: cross_entropy_with_softmax_grad
- name: cummax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: int, name: dtype, default_value: '3'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CumWithIndicesInferMeta
    param: [x, axis, dtype]
  kernel:
    func: [cummax]
    param: [x, axis, dtype]
    backend: null
    layout: null
    data_type: null
    dispatch: {cummax: null}
    force_backend: null
  inplace: null
  view: null
  backward: cummax_grad
- name: cummin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: int, name: dtype, default_value: '3'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CumWithIndicesInferMeta
    param: [x, axis, dtype]
  kernel:
    func: [cummin]
    param: [x, axis, dtype]
    backend: null
    layout: null
    data_type: null
    dispatch: {cummin: null}
    force_backend: null
  inplace: null
  view: null
  backward: cummin_grad
- name: cumprod
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMetaCheckAxis
    param: [x, dim]
  kernel:
    func: [cumprod]
    param: [x, dim]
    backend: null
    layout: null
    data_type: null
    dispatch: {cumprod: null}
    force_backend: null
  inplace: null
  view: null
  backward: cumprod_grad
- name: cumsum
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '-1', data_type: float}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: bool, name: exclusive, default_value: 'false'}
  - {typename: bool, name: reverse, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CumScalarAxisInferMeta
    param: [x, axis, flatten, exclusive, reverse]
  kernel:
    func: [cumsum]
    param: [x, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cumsum: null}
    force_backend: null
  inplace: null
  view: null
  backward: cumsum_grad
- name: data
  inputs: []
  attrs:
  - {typename: int64_t, name: index}
  - {typename: DataType, name: dtype}
  - {typename: str, name: name}
  - {typename: Place, name: place}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FeedWithPlaceInferMeta
    param: [index, dtype]
  kernel:
    func: [data]
    param: [index, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {data: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: depthwise_conv2d
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: filter
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: str, name: padding_algorithm, default_value: '"EXPLICIT"'}
  - {typename: int, name: groups, default_value: '1'}
  - {typename: 'int[]', name: dilations, default_value: '{1, 1}'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DepthwiseConvInferMeta
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
  kernel:
    func: [depthwise_conv2d]
    param: [input, filter, strides, paddings, padding_algorithm, groups, dilations,
      data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {depthwise_conv2d: null}
    force_backend: null
  inplace: null
  view: null
  backward: depthwise_conv2d_grad
- name: det
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [determinant]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {determinant: null}
    force_backend: null
  inplace: null
  view: null
  backward: det_grad
- name: diag
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: float, name: padding_value, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DiagInferMeta
    param: [x, offset, padding_value]
  kernel:
    func: [diag]
    param: [x, offset, padding_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag: null}
    force_backend: null
  inplace: null
  view: null
  backward: diag_grad
- name: diag_embed
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '-2'}
  - {typename: int, name: dim2, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DiagEmbedInferMeta
    param: [input, offset, dim1, dim2]
  kernel:
    func: [diag_embed]
    param: [input, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag_embed: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: diagonal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DiagonalInferMeta
    param: [x, offset, axis1, axis2]
  kernel:
    func: [diagonal]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diagonal: null}
    force_backend: null
  inplace: null
  view: null
  backward: diagonal_grad
- name: digamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [digamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {digamma: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: digamma_grad
- name: dirichlet
  inputs:
  - typename: Tensor
    name: alpha
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DirichletInferMeta
    param: [alpha]
  kernel:
    func: [dirichlet]
    param: [alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {dirichlet: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: dist
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p, default_value: '2.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DistInferMeta
    param: [x, y, p]
  kernel:
    func: [dist]
    param: [x, y, p]
    backend: null
    layout: null
    data_type: null
    dispatch: {dist: null}
    force_backend: null
  inplace: null
  view: null
  backward: dist_grad
- name: dot
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: DotInferMeta
    param: [x, y]
  kernel:
    func: [dot]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dot: null}
    force_backend: null
  inplace: null
  view: null
  backward: dot_grad
- name: edit_distance
  inputs:
  - typename: Tensor
    name: hyps
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: refs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hypslength
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: refslength
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: normalized, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: sequencenum, optional: false, intermediate: false}
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EditDistanceInferMeta
    param: [hyps, refs, hypslength, refslength, normalized]
  kernel:
    func: [edit_distance]
    param: [hyps, refs, hypslength, refslength, normalized]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: ['DataType::FLOAT32']
      to_complex_flag: [false]
    dispatch: {edit_distance: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: eig
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_w, optional: false, intermediate: false}
  - {typename: Tensor, name: out_v, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EigInferMeta
    param: [x]
  kernel:
    func: [eig]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eig: null}
    force_backend: null
  inplace: null
  view: null
  backward: eig_grad
- name: eigh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: UPLO, default_value: '"L"'}
  outputs:
  - {typename: Tensor, name: out_w, optional: false, intermediate: false}
  - {typename: Tensor, name: out_v, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EighInferMeta
    param: [x, UPLO]
  kernel:
    func: [eigh]
    param: [x, UPLO]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigh: null}
    force_backend: null
  inplace: null
  view: null
  backward: eigh_grad
- name: eigvals
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EigvalsInferMeta
    param: [x]
  kernel:
    func: [eigvals]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigvals: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: eigvalsh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: uplo, default_value: '"L"'}
  - {typename: bool, name: is_test, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: eigenvalues, optional: false, intermediate: false}
  - {typename: Tensor, name: eigenvectors, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: EigvalshInferMeta
    param: [x, uplo, is_test]
  kernel:
    func: [eigvalsh]
    param: [x, uplo, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {eigvalsh: null}
    force_backend: null
  inplace: null
  view: null
  backward: eigvalsh_grad
- name: elu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: alpha, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [elu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: elu_grad
- name: equal_all
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CompareAllInferMeta
    param: [x, y]
  kernel:
    func: [equal_all]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {equal_all: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: erf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erf]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erf: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: erf_grad
- name: erfinv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erfinv]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erfinv: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: erfinv_grad
- name: exp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [exp]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {exp: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: exp_grad
- name: expand
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ExpandInferMeta
    param: [x, shape]
  kernel:
    func: [expand]
    param: [x, shape]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {expand: null}
    force_backend: null
  inplace: null
  view: null
  backward: expand_grad
- name: expand_as
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: target_shape, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ExpandAsInferMeta
    param: [x, y, target_shape]
  kernel:
    func: [expand_as]
    param: [x, y, target_shape]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {expand_as: null}
    force_backend: null
  inplace: null
  view: null
  backward: expand_as_grad
- name: expm1
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [expm1]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {expm1: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: expm1_grad
- name: fft_c2c
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FFTC2CInferMeta
    param: [x, axes, normalization, forward]
  kernel:
    func: [fft_c2c]
    param: [x, axes, normalization, forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2c: null}
    force_backend: null
  inplace: null
  view: null
  backward: fft_c2c_grad
- name: fft_c2r
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: int64_t, name: last_dim_size, default_value: 0L}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FFTC2RInferMeta
    param: [x, axes, normalization, forward, last_dim_size]
  kernel:
    func: [fft_c2r]
    param: [x, axes, normalization, forward, last_dim_size]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2r: null}
    force_backend: null
  inplace: null
  view: null
  backward: fft_c2r_grad
- name: fft_r2c
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: bool, name: onesided}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FFTR2CInferMeta
    param: [x, axes, normalization, forward, onesided]
  kernel:
    func: [fft_r2c]
    param: [x, axes, normalization, forward, onesided]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_r2c: null}
    force_backend: null
  inplace: null
  view: null
  backward: fft_r2c_grad
- name: fill
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: value, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [fill]
    param: [x, value]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: fill_grad
- name: fill_diagonal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: value, default_value: '0'}
  - {typename: int, name: offset, default_value: '0'}
  - {typename: bool, name: wrap, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FillDiagonalInferMeta
    param: [x, value, offset, wrap]
  kernel:
    func: [fill_diagonal]
    param: [x, value, offset, wrap]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fill_diagonal: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: fill_diagonal_grad
- name: fill_diagonal_tensor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '0'}
  - {typename: int, name: dim2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FillDiagonalTensorInferMeta
    param: [x, y, offset, dim1, dim2]
  kernel:
    func: [fill_diagonal_tensor]
    param: [x, y, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_tensor: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: fill_diagonal_tensor_grad
- name: flash_attn
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fixed_seed_offset
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: str, name: rng_name, default_value: '""'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_lse, optional: false, intermediate: true}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FlashAttnInferMeta
    param: [q, k, v]
  kernel:
    func: [flash_attn]
    param: [q, k, v, fixed_seed_offset, attn_mask, dropout, causal, return_softmax,
      is_test, rng_name]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn: null}
    force_backend: null
  inplace: null
  view: null
  backward: flash_attn_grad
- name: flash_attn_unpadded
  inputs:
  - typename: Tensor
    name: q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: fixed_seed_offset
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: attn_mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: max_seqlen_q}
  - {typename: int64_t, name: max_seqlen_k}
  - {typename: float, name: scale}
  - {typename: float, name: dropout, default_value: '0.0'}
  - {typename: bool, name: causal, default_value: 'false'}
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: bool, name: is_test, default_value: 'false'}
  - {typename: str, name: rng_name, default_value: '""'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: softmax_lse, optional: false, intermediate: true}
  - {typename: Tensor, name: seed_offset, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FlashAttnInferMeta
    param: [q, k, v]
  kernel:
    func: [flash_attn_unpadded]
    param: [q, k, v, cu_seqlens_q, cu_seqlens_k, fixed_seed_offset, attn_mask, max_seqlen_q,
      max_seqlen_k, scale, dropout, causal, return_softmax, is_test, rng_name]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [q]
      to_complex_flag: [false]
    dispatch: {flash_attn_unpadded: null}
    force_backend: null
  inplace: null
  view: null
  backward: flash_attn_unpadded_grad
- name: flatten
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: start_axis, default_value: '1'}
  - {typename: int, name: stop_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FlattenWithXShapeInferMeta
    param: [x, start_axis, stop_axis]
  kernel:
    func: [flatten]
    param: [x, start_axis, stop_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {flatten: null}
    force_backend: null
  inplace: {out: x}
  view: {out: x}
  backward: flatten_grad
- name: flip
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FlipInferMeta
    param: [x, axis]
  kernel:
    func: [flip]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {flip: null}
    force_backend: null
  inplace: null
  view: null
  backward: flip_grad
- name: floor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [floor]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: floor_grad
- name: fmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    param: [x, y]
    func: ElementwiseInferMeta
  kernel:
    func: [fmax]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {fmax: null}
    force_backend: null
  inplace: null
  view: null
  backward: fmax_grad
- name: fmin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [fmin]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {fmin: null}
    force_backend: null
  inplace: null
  view: null
  backward: fmin_grad
- name: fold
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: output_sizes}
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FoldInferMeta
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
  kernel:
    func: [fold]
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {fold: null}
    force_backend: null
  inplace: null
  view: null
  backward: fold_grad
- name: frame
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: frame_length}
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FrameInferMeta
    param: [x, frame_length, hop_length, axis]
  kernel:
    func: [frame]
    param: [x, frame_length, hop_length, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {frame: null}
    force_backend: null
  inplace: null
  view: null
  backward: frame_grad
- name: full_int_array
  inputs: []
  attrs:
  - {typename: IntArray, name: value, data_type: 'std::vector<int64_t>'}
  - {typename: DataType, name: dtype, default_value: 'DataType::FLOAT32'}
  - {typename: Place, name: place, default_value: CPUPlace()}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CreateIntArrayInferMeta
    param: [value, dtype]
  kernel:
    func: [full_int_array]
    param: [value, dtype]
    backend:
      ordered: false
      candidates: [place]
    layout: null
    data_type:
      ordered: false
      candidates: [dtype]
      to_complex_flag: [false]
    dispatch: {full_int_array: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: fused_bias_residual_layernorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: float, name: residual_alpha}
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: quant_scale}
  - {typename: int, name: quant_round_type}
  - {typename: float, name: quant_max_bound}
  - {typename: float, name: quant_min_bound}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual_out, optional: true, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: false}
  - {typename: Tensor, name: variance, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: FusedLayerNormInferMeta
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
  kernel:
    func: [fused_bias_residual_layernorm]
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, residual_alpha, begin_norm_axis,
      quant_scale, quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fused_bias_residual_layernorm: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: gather
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: axis, default_value: '0', data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GatherInferMeta
    param: [x, index, axis]
  kernel:
    func: [gather]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gather: null}
    force_backend: null
  inplace: null
  view: null
  backward: gather_grad
- name: gather_nd
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GatherNdInferMeta
    param: [x, index]
  kernel:
    func: [gather_nd]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gather_nd: null}
    force_backend: null
  inplace: null
  view: null
  backward: gather_nd_grad
- name: gather_tree
  inputs:
  - typename: Tensor
    name: ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: parents
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GatherTreeMeta
    param: [ids, parents]
  kernel:
    func: [gather_tree]
    param: [ids, parents]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [ids]
      to_complex_flag: [false]
    dispatch: {gather_tree: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: gelu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: approximate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [gelu]
    param: [x, approximate]
    backend: null
    layout: null
    data_type: null
    dispatch: {gelu: null}
    force_backend: null
  inplace: null
  view: null
  backward: gelu_grad
- name: generate_proposals
  inputs:
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bbox_deltas
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: im_shape
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: anchors
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: variances
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pre_nms_top_n}
  - {typename: int, name: post_nms_top_n}
  - {typename: float, name: nms_thresh}
  - {typename: float, name: min_size}
  - {typename: float, name: eta}
  - {typename: bool, name: pixel_offset, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: rpn_rois, optional: false, intermediate: false}
  - {typename: Tensor, name: rpn_roi_probs, optional: false, intermediate: false}
  - {typename: Tensor, name: rpn_rois_num, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GenerateProposalsV2InferMeta
    param: [scores, bbox_deltas, im_shape, anchors, variances, pre_nms_top_n, post_nms_top_n,
      nms_thresh, min_size, eta, pixel_offset]
  kernel:
    func: [generate_proposals]
    param: [scores, bbox_deltas, im_shape, anchors, variances, pre_nms_top_n, post_nms_top_n,
      nms_thresh, min_size, eta, pixel_offset]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [anchors]
      to_complex_flag: [false]
    dispatch: {generate_proposals: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: grid_sample
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grid
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode, default_value: '"bilinear"'}
  - {typename: str, name: padding_mode, default_value: '"zeros"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GridSampleBaseInferMeta
    param: [x, grid]
  kernel:
    func: [grid_sample]
    param: [x, grid, mode, padding_mode, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {grid_sample: null}
    force_backend: null
  inplace: null
  view: null
  backward: grid_sample_grad
- name: group_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  - {typename: int, name: groups, default_value: '-1'}
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: true}
  - {typename: Tensor, name: variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GroupNormInferMeta
    param: [x, scale, bias, epsilon, groups, data_layout]
  kernel:
    func: [group_norm]
    param: [x, scale, bias, epsilon, groups, data_layout]
    backend: null
    layout: null
    data_type: null
    dispatch: {group_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: group_norm_grad
- name: gumbel_softmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: temperature, default_value: '1.0'}
  - {typename: bool, name: hard, default_value: 'false'}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GumbelSoftmaxInferMeta
    param: [x, temperature, hard, axis]
  kernel:
    func: [gumbel_softmax]
    param: [x, temperature, hard, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {gumbel_softmax: null}
    force_backend: null
  inplace: null
  view: null
  backward: gumbel_softmax_grad
- name: hardshrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hard_shrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_shrink: null}
    force_backend: null
  inplace: null
  view: null
  backward: hardshrink_grad
- name: hardsigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: slope, default_value: '0.2'}
  - {typename: float, name: offset, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hardsigmoid]
    param: [x, slope, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardsigmoid: null}
    force_backend: null
  inplace: null
  view: null
  backward: hardsigmoid_grad
- name: hardtanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: t_min, default_value: '0'}
  - {typename: float, name: t_max, default_value: '24'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hardtanh]
    param: [x, t_min, t_max]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardtanh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: hardtanh_grad
- name: heaviside
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [heaviside]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {heaviside: null}
    force_backend: null
  inplace: null
  view: null
  backward: heaviside_grad
- name: histogram
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: bins, default_value: '100'}
  - {typename: int, name: min, default_value: '0'}
  - {typename: int, name: max, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: HistogramInferMeta
    param: [input, bins, min, max]
  kernel:
    func: [histogram]
    param: [input, bins, min, max]
    backend: null
    layout: null
    data_type: null
    dispatch: {histogram: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: huber_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: delta}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: HuberLossInferMeta
    param: [input, label, delta]
  kernel:
    func: [huber_loss]
    param: [input, label, delta]
    backend: null
    layout: null
    data_type: null
    dispatch: {huber_loss: null}
    force_backend: null
  inplace: null
  view: null
  backward: huber_loss_grad
- name: i0
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [i0]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: i0_grad
- name: i0e
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [i0e]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i0e: null}
    force_backend: null
  inplace: null
  view: null
  backward: i0e_grad
- name: i1
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [i1]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1: null}
    force_backend: null
  inplace: null
  view: null
  backward: i1_grad
- name: i1e
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [i1e]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {i1e: null}
    force_backend: null
  inplace: null
  view: null
  backward: i1e_grad
- name: imag
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [imag]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {imag: null}
    force_backend: null
  inplace: null
  view: null
  backward: imag_grad
- name: index_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: add_value
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IndexAddInferMeta
    param: [x, index, add_value, axis]
  kernel:
    func: [index_add]
    param: [x, index, add_value, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_add: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: index_add_grad
- name: index_put
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: accumulate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IndexPutInferMeta
    param: [x, indices, value, accumulate]
  kernel:
    func: [index_put]
    param: [x, indices, value, accumulate]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_put: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: index_put_grad
- name: index_sample
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IndexSampleInferMeta
    param: [x, index]
  kernel:
    func: [index_sample]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_sample: null}
    force_backend: null
  inplace: null
  view: null
  backward: index_sample_grad
- name: index_select
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IndexSelectInferMeta
    param: [x, index, axis]
  kernel:
    func: [index_select]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_select: null}
    force_backend: null
  inplace: null
  view: null
  backward: index_select_grad
- name: index_select_strided
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: index}
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IndexSelectStridedInferMeta
    param: [x, index, axis]
  kernel:
    func: [index_select_strided]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_select_strided: null}
    force_backend: null
  inplace: null
  view: null
  backward: index_select_strided_grad
- name: instance_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  outputs:
  - {typename: Tensor, name: y, optional: false, intermediate: false}
  - {typename: Tensor, name: saved_mean, optional: false, intermediate: true}
  - {typename: Tensor, name: saved_variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: InstanceNormInferMeta
    param: [x, scale, bias, epsilon]
  kernel:
    func: [instance_norm]
    param: [x, scale, bias, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {instance_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: instance_norm_grad
- name: inverse
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: InverseInferMeta
    param: [x]
  kernel:
    func: [inverse]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {inverse: null}
    force_backend: null
  inplace: null
  view: null
  backward: inverse_grad
- name: is_empty
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IsEmptyInferMeta
    param: [x]
  kernel:
    func: [is_empty]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {is_empty: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: isclose
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: rtol, default_value: '"1e-5"', data_type: float}
  - {typename: Scalar, name: atol, default_value: '"1e-8"', data_type: float}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ValueCompareInferMeta
    param: [x, y]
  kernel:
    func: [isclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {isclose: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: isfinite
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isfinite, isfinite_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isfinite:
      - [dense]
      - [dense]
      isfinite_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: isinf
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isinf, isinf_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isinf:
      - [dense]
      - [dense]
      isinf_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: isnan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isnan, isnan_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isnan:
      - [dense]
      - [dense]
      isnan_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: kldiv_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduction, default_value: '"mean"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: KLDivInferMeta
    param: [x, label, reduction]
  kernel:
    func: [kldiv_loss]
    param: [x, label, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {kldiv_loss: null}
    force_backend: null
  inplace: null
  view: null
  backward: kldiv_loss_grad
- name: kron
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: KronInferMeta
    param: [x, y]
  kernel:
    func: [kron]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {kron: null}
    force_backend: null
  inplace: null
  view: null
  backward: kron_grad
- name: kthvalue
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: k, default_value: '1'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: KthvalueInferMeta
    param: [x, k, axis, keepdim]
  kernel:
    func: [kthvalue]
    param: [x, k, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {kthvalue: null}
    force_backend: null
  inplace: null
  view: null
  backward: kthvalue_grad
- name: label_smooth
  inputs:
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: prior_dist
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 0.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [label]
  kernel:
    func: [label_smooth]
    param: [label, prior_dist, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [label]
      to_complex_flag: [false]
    dispatch: {label_smooth: null}
    force_backend: null
  inplace: null
  view: null
  backward: label_smooth_grad
- name: lamb_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: skip_update
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: weight_decay}
  - {typename: float, name: beta1, default_value: '0.9'}
  - {typename: float, name: beta2, default_value: '0.999'}
  - {typename: float, name: epsilon, default_value: 1.0e-6f}
  - {typename: bool, name: always_adapt, default_value: 'false'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment1_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment2_out, optional: false, intermediate: false}
  - {typename: Tensor, name: beta1_pow_out, optional: true, intermediate: false}
  - {typename: Tensor, name: beta2_pow_out, optional: true, intermediate: false}
  - {typename: Tensor, name: master_param_outs, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LambInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, weight_decay, beta1, beta2, epsilon, always_adapt, multi_precision]
  kernel:
    func: [lamb, lamb_sr]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      skip_update, weight_decay, beta1, beta2, epsilon, always_adapt, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      lamb:
      - [dense, dense, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
      lamb_sr:
      - [dense, selected_rows, dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense, dense]
    force_backend: null
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_outs: master_param}
  view: null
  backward: null
- name: layer_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scale
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1e-5}
  - {typename: int, name: begin_norm_axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean, optional: false, intermediate: true}
  - {typename: Tensor, name: variance, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LayerNormInferMeta
    param: [x, scale, bias, epsilon, begin_norm_axis]
  kernel:
    func: [layer_norm]
    param: [x, scale, bias, epsilon, begin_norm_axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {layer_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: layer_norm_grad
- name: leaky_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: negative_slope, default_value: 0.02f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [leaky_relu]
    param: [x, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: leaky_relu_grad
- name: lerp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LerpInferMeta
    param: [x, y, weight]
  kernel:
    func: [lerp]
    param: [x, y, weight]
    backend: null
    layout: null
    data_type: null
    dispatch: {lerp: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: lerp_grad
- name: lgamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [lgamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {lgamma: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: lgamma_grad
- name: linear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  kernel:
    func: [linear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {linear_interp: null}
    force_backend: null
  inplace: null
  view: null
  backward: linear_interp_grad
- name: llm_int8_matmul
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '6.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LLMInt8MatmulInferMeta
    param: [x, weight]
  kernel:
    func: [llm_int8_matmul]
    param: [x, weight, weight_scale, threshold]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {llm_int8_matmul: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: log
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: log_grad
- name: log10
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log10]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log10: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: log10_grad
- name: log1p
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log1p]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log1p: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: log1p_grad
- name: log2
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log2]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log2: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: log2_grad
- name: log_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LogLossInferMeta
    param: [input, label, epsilon]
  kernel:
    func: [log_loss]
    param: [input, label, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_loss: null}
    force_backend: null
  inplace: null
  view: null
  backward: log_loss_grad
- name: log_softmax
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMetaCheckAxis
    param: [x, axis]
  kernel:
    func: [log_softmax]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {log_softmax: null}
    force_backend: null
  inplace: null
  view: null
  backward: log_softmax_grad
- name: logcumsumexp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: flatten, default_value: 'false'}
  - {typename: bool, name: exclusive, default_value: 'false'}
  - {typename: bool, name: reverse, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: CumInferMeta
    param: [x, axis, flatten, exclusive, reverse]
  kernel:
    func: [logcumsumexp]
    param: [x, axis, flatten, exclusive, reverse]
    backend: null
    layout: null
    data_type: null
    dispatch: {logcumsumexp: null}
    force_backend: null
  inplace: null
  view: null
  backward: logcumsumexp_grad
- name: logical_and
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [logical_and]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_and: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: logical_not
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logical_not]
    param: [x]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_not: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: logical_or
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [logical_or]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_or: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: logical_xor
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [logical_xor]
    param: [x, y]
    backend:
      ordered: false
      candidates: [x]
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {logical_xor: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: logit
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: eps, default_value: 1e-6f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logit]
    param: [x, eps]
    backend: null
    layout: null
    data_type: null
    dispatch: {logit: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: logit_grad
- name: logsigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logsigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsigmoid: null}
    force_backend: null
  inplace: null
  view: null
  backward: logsigmoid_grad
- name: lstsq
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: rcond, default_value: 0.0f, data_type: float}
  - {typename: str, name: driver, default_value: '"gels"'}
  outputs:
  - {typename: Tensor, name: solution, optional: false, intermediate: false}
  - {typename: Tensor, name: residuals, optional: true, intermediate: false}
  - {typename: Tensor, name: rank, optional: false, intermediate: false}
  - {typename: Tensor, name: singular_values, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LstsqInferMeta
    param: [x, y, rcond, driver]
  kernel:
    func: [lstsq]
    param: [x, y, rcond, driver]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lstsq: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: lu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: pivot, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: pivots, optional: false, intermediate: false}
  - {typename: Tensor, name: infos, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LUInferMeta
    param: [x, pivot]
  kernel:
    func: [lu]
    param: [x, pivot]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lu: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: lu_grad
- name: lu_unpack
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: unpack_ludata, default_value: 'true'}
  - {typename: bool, name: unpack_pivots, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: pmat, optional: false, intermediate: false}
  - {typename: Tensor, name: l, optional: false, intermediate: false}
  - {typename: Tensor, name: u, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: LUUnpackInferMeta
    param: [x, y, unpack_ludata, unpack_pivots]
  kernel:
    func: [lu_unpack]
    param: [x, y, unpack_ludata, unpack_pivots]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lu_unpack: null}
    force_backend: null
  inplace: null
  view: null
  backward: lu_unpack_grad
- name: margin_cross_entropy
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_softmax, default_value: 'false'}
  - {typename: int, name: ring_id, default_value: '0'}
  - {typename: int, name: rank, default_value: '0'}
  - {typename: int, name: nranks, default_value: '1'}
  - {typename: float, name: margin1, default_value: 1.0f}
  - {typename: float, name: margin2, default_value: 0.5f}
  - {typename: float, name: margin3, default_value: 0.0f}
  - {typename: float, name: scale, default_value: 64.0f}
  outputs:
  - {typename: Tensor, name: softmax, optional: false, intermediate: false}
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MarginCrossEntropyInferMeta
    param: [logits, label, return_softmax, ring_id, rank, nranks, margin1, margin2,
      margin3, scale]
  kernel:
    func: [margin_cross_entropy]
    param: [logits, label, return_softmax, ring_id, rank, nranks, margin1, margin2,
      margin3, scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [logits]
      to_complex_flag: [false]
    dispatch: {margin_cross_entropy: null}
    force_backend: null
  inplace: null
  view: null
  backward: margin_cross_entropy_grad
- name: masked_select
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MaskedSelectInferMeta
    param: [x, mask]
  kernel:
    func: [masked_select]
    param: [x, mask]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_select: null}
    force_backend: null
  inplace: null
  view: null
  backward: masked_select_grad
- name: matrix_nms
  inputs:
  - typename: Tensor
    name: bboxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: score_threshold}
  - {typename: int, name: nms_top_k}
  - {typename: int, name: keep_top_k}
  - {typename: float, name: post_threshold, default_value: '0.'}
  - {typename: bool, name: use_gaussian, default_value: 'false'}
  - {typename: float, name: gaussian_sigma, default_value: '2.'}
  - {typename: int, name: background_label, default_value: '0'}
  - {typename: bool, name: normalized, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: false, intermediate: false}
  - {typename: Tensor, name: roisnum, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MatrixNMSInferMeta
    param: [bboxes, scores, score_threshold, nms_top_k, keep_top_k, post_threshold,
      use_gaussian, gaussian_sigma, background_label, normalized]
  kernel:
    func: [matrix_nms]
    param: [bboxes, scores, score_threshold, nms_top_k, keep_top_k, post_threshold,
      use_gaussian, gaussian_sigma, background_label, normalized]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_nms: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: matrix_power
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MatrixPowerInferMeta
    param: [x, n]
  kernel:
    func: [matrix_power]
    param: [x, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_power: null}
    force_backend: null
  inplace: null
  view: null
  backward: matrix_power_grad
- name: max_pool2d_with_index
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0}'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MaxPoolWithIndexInferMeta
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
  kernel:
    func: [max_pool2d_with_index]
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool2d_with_index: null}
    force_backend: null
  inplace: null
  view: null
  backward: max_pool2d_with_index_grad
- name: max_pool3d_with_index
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_size}
  - {typename: 'int[]', name: strides, default_value: '{1, 1, 1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0, 0, 0}'}
  - {typename: bool, name: global_pooling, default_value: 'false'}
  - {typename: bool, name: adaptive, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: mask, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MaxPoolWithIndexInferMeta
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
  kernel:
    func: [max_pool3d_with_index]
    param: [x, kernel_size, strides, paddings, global_pooling, adaptive]
    backend: null
    layout: null
    data_type: null
    dispatch: {max_pool3d_with_index: null}
    force_backend: null
  inplace: null
  view: null
  backward: max_pool3d_with_index_grad
- name: maxout
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: groups}
  - {typename: int, name: axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MaxOutInferMeta
    param: [x, groups, axis]
  kernel:
    func: [maxout]
    param: [x, groups, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {maxout: null}
    force_backend: null
  inplace: null
  view: null
  backward: maxout_grad
- name: mean_all
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MeanAllInferMeta
    param: [x]
  kernel:
    func: [mean_all]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {mean_all: null}
    force_backend: null
  inplace: null
  view: null
  backward: mean_all_grad
- name: memory_efficient_attention
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_q
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: cu_seqlens_k
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: causal_diagonal
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seqlen_k
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: max_seqlen_q, data_type: float}
  - {typename: Scalar, name: max_seqlen_k, data_type: float}
  - {typename: bool, name: causal}
  - {typename: double, name: dropout_p}
  - {typename: float, name: scale}
  - {typename: bool, name: is_test}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  - {typename: Tensor, name: logsumexp, optional: false, intermediate: false}
  - {typename: Tensor, name: seed_and_offset, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MemoryEfficientAttentionInferMeta
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, causal_diagonal,
      seqlen_k, max_seqlen_q, max_seqlen_k, causal, dropout_p, scale, is_test]
  kernel:
    func: [memory_efficient_attention]
    param: [query, key, value, bias, cu_seqlens_q, cu_seqlens_k, causal_diagonal,
      seqlen_k, max_seqlen_q, max_seqlen_k, causal, dropout_p, scale, is_test]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [query]
      to_complex_flag: [false]
    dispatch: {memory_efficient_attention: null}
    force_backend: null
  inplace: null
  view: null
  backward: memory_efficient_attention_grad
- name: merge_selected_rows
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [merge_selected_rows]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      merge_selected_rows:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: merged_adam_
  inputs:
  - typename: Tensor[]
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moment1
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: moment2
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta1_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: beta2_pow
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: beta1, default_value: 0.9f, data_type: float}
  - {typename: Scalar, name: beta2, default_value: 0.999f, data_type: float}
  - {typename: Scalar, name: epsilon, default_value: 1.0e-8f, data_type: float}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: bool, name: use_global_beta_pow, default_value: 'false'}
  outputs:
  - {typename: 'Tensor[]', name: param_out, size: param.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: moment1_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: moment2_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta1_pow_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: beta2_pow_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_param_out, size: param.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MergedAdamInferMeta
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      beta1, beta2, epsilon, multi_precision, use_global_beta_pow]
  kernel:
    func: [merged_adam]
    param: [param, grad, learning_rate, moment1, moment2, beta1_pow, beta2_pow, master_param,
      beta1, beta2, epsilon, multi_precision, use_global_beta_pow]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {merged_adam: null}
    force_backend: null
  inplace: {param_out: param, moment1_out: moment1, moment2_out: moment2, beta1_pow_out: beta1_pow,
    beta2_pow_out: beta2_pow, master_param_out: master_param}
  view: null
  backward: null
- name: merged_momentum_
  inputs:
  - typename: Tensor[]
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor[]
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: bool, name: use_nesterov, default_value: 'false'}
  - {typename: 'str[]', name: regularization_method, default_value: '{}'}
  - {typename: 'float[]', name: regularization_coeff, default_value: '{}'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: 'Tensor[]', name: param_out, size: param.size(), optional: false, intermediate: false}
  - {typename: 'Tensor[]', name: velocity_out, size: param.size(), optional: false,
    intermediate: false}
  - {typename: 'Tensor[]', name: master_param_out, size: param.size(), optional: true,
    intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MergedMomentumInferMeta
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
  kernel:
    func: [merged_momentum]
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch: {merged_momentum: null}
    force_backend: null
  inplace: {param_out: param, velocity_out: velocity, master_param_out: master_param}
  view: null
  backward: null
- name: meshgrid
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: inputs.size(), optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MeshgridInferMeta
    param: [inputs]
  kernel:
    func: [meshgrid]
    param: [inputs]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {meshgrid: null}
    force_backend: null
  inplace: null
  view: null
  backward: meshgrid_grad
- name: mode
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ModeInferMeta
    param: [x, axis, keepdim]
  kernel:
    func: [mode]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mode: null}
    force_backend: null
  inplace: null
  view: null
  backward: mode_grad
- name: momentum_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: velocity
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: mu}
  - {typename: bool, name: use_nesterov, default_value: 'false'}
  - {typename: str, name: regularization_method, default_value: '""'}
  - {typename: float, name: regularization_coeff, default_value: 0.0f}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  - {typename: float, name: rescale_grad, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: velocity_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MomentumInferMeta
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
  kernel:
    func: [momentum, momentum_dense_param_sparse_grad]
    param: [param, grad, velocity, learning_rate, master_param, mu, use_nesterov,
      regularization_method, regularization_coeff, multi_precision, rescale_grad]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      momentum:
      - [dense, dense, dense, dense, dense]
      - [dense, dense, dense]
      momentum_dense_param_sparse_grad:
      - [dense, selected_rows, dense, dense, dense]
      - [dense, dense, dense]
    force_backend: null
  inplace: {param_out: param, velocity_out: velocity, master_param_out: master_param}
  view: null
  backward: null
- name: multi_dot
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MultiDotInferMeta
    param: [x]
  kernel:
    func: [multi_dot]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {multi_dot: null}
    force_backend: null
  inplace: null
  view: null
  backward: multi_dot_grad
- name: multiclass_nms3
  inputs:
  - typename: Tensor
    name: bboxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: scores
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: rois_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: score_threshold}
  - {typename: int, name: nms_top_k}
  - {typename: int, name: keep_top_k}
  - {typename: float, name: nms_threshold, default_value: '0.3'}
  - {typename: bool, name: normalized, default_value: 'true'}
  - {typename: float, name: nms_eta, default_value: '1.0'}
  - {typename: int, name: background_label, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: false, intermediate: false}
  - {typename: Tensor, name: nms_rois_num, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MultiClassNMSInferMeta
    param: [bboxes, scores, rois_num, score_threshold, nms_top_k, keep_top_k, nms_threshold,
      normalized, nms_eta, background_label]
  kernel:
    func: [multiclass_nms3]
    param: [bboxes, scores, rois_num, score_threshold, nms_top_k, keep_top_k, nms_threshold,
      normalized, nms_eta, background_label]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [scores]
      to_complex_flag: [false]
    dispatch: {multiclass_nms3: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: multinomial
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: num_samples, default_value: '1', data_type: int}
  - {typename: bool, name: replacement, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MultinomialInferMeta
    param: [x, num_samples, replacement]
  kernel:
    func: [multinomial]
    param: [x, num_samples, replacement]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {multinomial: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: multiplex
  inputs:
  - typename: Tensor[]
    name: inputs
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MultiplexInferMeta
    param: [inputs, index]
  kernel:
    func: [multiplex]
    param: [inputs, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {multiplex: null}
    force_backend: null
  inplace: null
  view: null
  backward: multiplex_grad
- name: mv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: vec
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: MvInferMeta
    param: [x, vec]
  kernel:
    func: [mv]
    param: [x, vec]
    backend: null
    layout: null
    data_type: null
    dispatch: {mv: null}
    force_backend: null
  inplace: null
  view: null
  backward: mv_grad
- name: nanmedian
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: bool, name: keepdim, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: medians, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: NanmedianInferMeta
    param: [x, axis, keepdim]
  kernel:
    func: [nanmedian]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {nanmedian: null}
    force_backend: null
  inplace: null
  view: null
  backward: nanmedian_grad
- name: nearest_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  kernel:
    func: [nearest_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nearest_interp: null}
    force_backend: null
  inplace: null
  view: null
  backward: nearest_interp_grad
- name: nextafter
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ElementwiseInferMeta
    param: [x, y]
  kernel:
    func: [nextafter]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nextafter: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: nll_loss
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int64_t, name: ignore_index, default_value: '-100'}
  - {typename: str, name: reduction, default_value: '"mean"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: total_weight, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: NllLossRawInferMeta
    param: [input, label, weight, ignore_index, reduction]
  kernel:
    func: [nll_loss]
    param: [input, label, weight, ignore_index, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nll_loss: null}
    force_backend: null
  inplace: null
  view: null
  backward: nll_loss_grad
- name: nms
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: NMSInferMeta
    param: [x, threshold]
  kernel:
    func: [nms]
    param: [x, threshold]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {nms: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: nonzero
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: NonZeroInferMeta
    param: [condition]
  kernel:
    func: [nonzero]
    param: [condition]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [condition]
      to_complex_flag: [false]
    dispatch: {nonzero: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: npu_identity
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: format, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [npu_identity]
    param: [x, format]
    backend: null
    layout: null
    data_type: null
    dispatch: {npu_identity: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: numel
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: true
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: size, optional: false, intermediate: false}
  no_need_buffer: [x]
  data_transform:
    skip_transform: [x]
  infer_meta:
    func: NumelInferMeta
    param: [x]
  kernel:
    func: [numel]
    param: [x]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {numel: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: overlap_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: OverlapAddInferMeta
    param: [x, hop_length, axis]
  kernel:
    func: [overlap_add]
    param: [x, hop_length, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {overlap_add: null}
    force_backend: null
  inplace: null
  view: null
  backward: overlap_add_grad
- name: p_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: porder, default_value: '2'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: float, name: epsilon, default_value: 1.0e-12f}
  - {typename: bool, name: keepdim, default_value: 'false'}
  - {typename: bool, name: asvector, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: PNormInferMeta
    param: [x, porder, axis, epsilon, keepdim, asvector]
  kernel:
    func: [p_norm]
    param: [x, porder, axis, epsilon, keepdim, asvector]
    backend: null
    layout: null
    data_type: null
    dispatch: {p_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: p_norm_grad
- name: pad3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: paddings, data_type: 'std::vector<int64_t>'}
  - {typename: str, name: mode, default_value: '"constant"'}
  - {typename: float, name: pad_value, default_value: '0.0'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: Pad3dInferMeta
    param: [x, paddings, mode, pad_value, data_format]
  kernel:
    func: [pad3d]
    param: [x, paddings, mode, pad_value, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pad3d: null}
    force_backend: null
  inplace: null
  view: null
  backward: pad3d_grad
- name: pixel_shuffle
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: upscale_factor, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: PixelShuffleInferMeta
    param: [x, upscale_factor, data_format]
  kernel:
    func: [pixel_shuffle]
    param: [x, upscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_shuffle: null}
    force_backend: null
  inplace: null
  view: null
  backward: pixel_shuffle_grad
- name: poisson
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [poisson]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {poisson: null}
    force_backend: null
  inplace: null
  view: null
  backward: poisson_grad
- name: polygamma
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [polygamma]
    param: [x, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {polygamma: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: polygamma_grad
- name: pow
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: y, default_value: 1.0f, data_type: float}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [pow]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {pow: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: pow_grad
- name: prelu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: alpha
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  - {typename: str, name: mode, default_value: '"all"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: PReluInferMeta
    param: [x, alpha, data_format, mode]
  kernel:
    func: [prelu]
    param: [x, alpha, data_format, mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {prelu: null}
    force_backend: null
  inplace: null
  view: null
  backward: prelu_grad
- name: prior_box
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: image
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'float[]', name: min_sizes}
  - {typename: 'float[]', name: max_sizes, default_value: '{}'}
  - {typename: 'float[]', name: aspect_ratios, default_value: '{}'}
  - {typename: 'float[]', name: variances, default_value: '{}'}
  - {typename: bool, name: flip, default_value: 'true'}
  - {typename: bool, name: clip, default_value: 'true'}
  - {typename: float, name: step_w, default_value: '0.0'}
  - {typename: float, name: step_h, default_value: '0.0'}
  - {typename: float, name: offset, default_value: '0.5'}
  - {typename: bool, name: min_max_aspect_ratios_order, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: var, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: PriorBoxInferMeta
    param: [input, image, min_sizes, max_sizes, aspect_ratios, variances, flip, clip,
      step_w, step_h, offset, min_max_aspect_ratios_order]
  kernel:
    func: [prior_box]
    param: [input, image, min_sizes, max_sizes, aspect_ratios, variances, flip, clip,
      step_w, step_h, offset, min_max_aspect_ratios_order]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {prior_box: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: psroi_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: int, name: output_channels, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: PsroiPoolInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, output_channels, spatial_scale]
  kernel:
    func: [psroi_pool]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, output_channels, spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {psroi_pool: null}
    force_backend: null
  inplace: null
  view: null
  backward: psroi_pool_grad
- name: put_along_axis
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  - {typename: str, name: reduce, default_value: '"assign"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [arr]
  kernel:
    func: [put_along_axis]
    param: [arr, indices, values, axis, reduce]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {put_along_axis: null}
    force_backend: null
  inplace: {out: arr}
  view: null
  backward: put_along_axis_grad
- name: qr
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: mode, default_value: '"reduced"'}
  outputs:
  - {typename: Tensor, name: q, optional: false, intermediate: false}
  - {typename: Tensor, name: r, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: QrInferMeta
    param: [x, mode]
  kernel:
    func: [qr]
    param: [x, mode]
    backend: null
    layout: null
    data_type: null
    dispatch: {qr: null}
    force_backend: null
  inplace: null
  view: null
  backward: qr_grad
- name: quant_for_compress
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: bits, default_value: '8'}
  - {typename: str, name: layout, default_value: '"weight_only"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: scale, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: QuantForCompressInferMeta
    param: [x, bits, layout]
  kernel:
    func: [quant_for_compress]
    param: [x, bits, layout]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {quant_for_compress: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: real
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {real: null}
    force_backend: null
  inplace: null
  view: null
  backward: real_grad
- name: reciprocal
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [reciprocal]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {reciprocal: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: reciprocal_grad
- name: reindex_graph
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: neighbors
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: count
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hashtable_value
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: hashtable_index
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: reindex_src, optional: false, intermediate: false}
  - {typename: Tensor, name: reindex_dst, optional: false, intermediate: false}
  - {typename: Tensor, name: out_nodes, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: GraphReindexInferMeta
    param: [x, neighbors, count, hashtable_value, hashtable_index]
  kernel:
    func: [graph_reindex]
    param: [x, neighbors, count, hashtable_value, hashtable_index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {graph_reindex: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [relu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: relu_grad
- name: relu6
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [relu6]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu6: null}
    force_backend: null
  inplace: null
  view: null
  backward: relu6_grad
- name: renorm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: p}
  - {typename: int, name: axis}
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [renorm]
    param: [x, p, axis, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch: {renorm: null}
    force_backend: null
  inplace: null
  view: null
  backward: renorm_grad
- name: reverse
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ReverseInferMeta
    param: [x, axis]
  kernel:
    func: [reverse]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {reverse: null}
    force_backend: null
  inplace: null
  view: null
  backward: reverse_grad
- name: rms_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: residual
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: norm_bias
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon}
  - {typename: int, name: begin_norm_axis}
  - {typename: float, name: quant_scale}
  - {typename: int, name: quant_round_type}
  - {typename: float, name: quant_max_bound}
  - {typename: float, name: quant_min_bound}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: residual_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RmsNormInferMeta
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, begin_norm_axis, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
  kernel:
    func: [rms_norm]
    param: [x, bias, residual, norm_weight, norm_bias, epsilon, begin_norm_axis, quant_scale,
      quant_round_type, quant_max_bound, quant_min_bound]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {rms_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: rmsprop_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean_square
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: moment
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mean_grad
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: epsilon, default_value: 1.0e-10f}
  - {typename: float, name: decay, default_value: 0.9f}
  - {typename: float, name: momentum, default_value: 0.0f}
  - {typename: bool, name: centered, default_value: 'false'}
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: moment_out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_square_out, optional: false, intermediate: false}
  - {typename: Tensor, name: mean_grad_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_outs, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RmspropInferMeta
    param: [param, mean_square, grad, moment, learning_rate, mean_grad, master_param,
      epsilon, decay, momentum, centered, multi_precision]
  kernel:
    func: [rmsprop, rmsprop_dense_param_sparse_grad]
    param: [param, mean_square, grad, moment, learning_rate, mean_grad, master_param,
      epsilon, decay, momentum, centered, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      rmsprop:
      - [dense, dense, dense, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense]
      rmsprop_dense_param_sparse_grad:
      - [dense, dense, selected_rows, dense, dense, dense, dense]
      - [dense, dense, dense, dense, dense]
    force_backend: null
  inplace: {param_out: param, moment_out: moment, mean_square_out: mean_square, mean_grad_out: mean_grad,
    master_param_outs: master_param}
  view: null
  backward: null
- name: roi_align
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  - {typename: int, name: sampling_ratio, default_value: '-1'}
  - {typename: bool, name: aligned, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RoiAlignInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale, sampling_ratio,
      aligned]
  kernel:
    func: [roi_align]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale, sampling_ratio,
      aligned]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roi_align: null}
    force_backend: null
  inplace: null
  view: null
  backward: roi_align_grad
- name: roi_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: boxes_num
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: pooled_height, default_value: '1'}
  - {typename: int, name: pooled_width, default_value: '1'}
  - {typename: float, name: spatial_scale, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: arg_max, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RoiPoolInferMeta
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale]
  kernel:
    func: [roi_pool]
    param: [x, boxes, boxes_num, pooled_height, pooled_width, spatial_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roi_pool: null}
    force_backend: null
  inplace: null
  view: null
  backward: roi_pool_grad
- name: roll
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: shifts, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: RollInferMeta
    param: [x, shifts, axis]
  kernel:
    func: [roll]
    param: [x, shifts, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roll: null}
    force_backend: null
  inplace: null
  view: null
  backward: roll_grad
- name: round
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [round]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {round: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: round_grad
- name: rsqrt
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [rsqrt]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: rsqrt_grad
- name: scale
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar, name: scale, default_value: '1.0', data_type: float}
  - {typename: float, name: bias, default_value: '0.0'}
  - {typename: bool, name: bias_after_scale, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [scale, scale_sr]
    param: [x, scale, bias, bias_after_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch:
      scale:
      - [dense]
      - [dense]
      scale_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: {out: x}
  view: null
  backward: scale_grad
- name: scatter
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: overwrite, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ScatterInferMeta
    param: [x, index, updates, overwrite]
  kernel:
    func: [scatter]
    param: [x, index, updates, overwrite]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: scatter_grad
- name: scatter_nd_add
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: updates
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ScatterNdAddInferMeta
    param: [x, index, updates]
  kernel:
    func: [scatter_nd_add]
    param: [x, index, updates]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter_nd_add: null}
    force_backend: null
  inplace: null
  view: null
  backward: scatter_nd_add_grad
- name: searchsorted
  inputs:
  - typename: Tensor
    name: sorted_sequence
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: values
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: out_int32, default_value: 'false'}
  - {typename: bool, name: right, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SearchsortedInferMeta
    param: [sorted_sequence, values, out_int32, right]
  kernel:
    func: [searchsorted]
    param: [sorted_sequence, values, out_int32, right]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [sorted_sequence]
      to_complex_flag: [false]
    dispatch: {searchsorted: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: segment_pool
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: segment_ids
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: pooltype, default_value: '"SUM"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: summed_ids, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SegmentPoolInferMeta
    param: [x, segment_ids, pooltype]
  kernel:
    func: [segment_pool]
    param: [x, segment_ids, pooltype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {segment_pool: null}
    force_backend: null
  inplace: null
  view: null
  backward: segment_pool_grad
- name: selu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale, default_value: '1.0507009873554804934193349852946'}
  - {typename: float, name: alpha, default_value: '1.6732632423543772848170429916717'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [selu]
    param: [x, scale, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {selu: null}
    force_backend: null
  inplace: null
  view: null
  backward: selu_grad
- name: send_u_recv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: reduce_op, default_value: '"SUM"'}
  - {typename: IntArray, name: out_size, default_value: '{0}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dst_count, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SendURecvInferMeta
    param: [x, src_index, dst_index, reduce_op, out_size]
  kernel:
    func: [send_u_recv]
    param: [x, src_index, dst_index, reduce_op, out_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_u_recv: null}
    force_backend: null
  inplace: null
  view: null
  backward: send_u_recv_grad
- name: send_ue_recv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  - {typename: str, name: reduce_op, default_value: '"SUM"'}
  - {typename: IntArray, name: out_size, default_value: '{0}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: dst_count, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SendUERecvInferMeta
    param: [x, y, src_index, dst_index, message_op, reduce_op, out_size]
  kernel:
    func: [send_ue_recv]
    param: [x, y, src_index, dst_index, message_op, reduce_op, out_size]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_ue_recv: null}
    force_backend: null
  inplace: null
  view: null
  backward: send_ue_recv_grad
- name: send_uv
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: src_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: dst_index
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SendUVInferMeta
    param: [x, y, src_index, dst_index, message_op]
  kernel:
    func: [send_uv]
    param: [x, y, src_index, dst_index, message_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_uv: null}
    force_backend: null
  inplace: null
  view: null
  backward: send_uv_grad
- name: sgd_
  inputs:
  - typename: Tensor
    name: param
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: learning_rate
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: true}
  - typename: Tensor
    name: grad
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: master_param
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: bool, name: multi_precision, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: param_out, optional: false, intermediate: false}
  - {typename: Tensor, name: master_param_out, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform:
    support_trans_dtype: [learning_rate]
  infer_meta:
    func: SgdInferMeta
    param: [param, learning_rate, grad, master_param, multi_precision]
  kernel:
    func: [sgd, sgd_dense_param_sparse_grad, sgd_sparse_param_sparse_grad]
    param: [param, learning_rate, grad, master_param, multi_precision]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [param]
      to_complex_flag: [false]
    dispatch:
      sgd:
      - [dense, dense, dense, dense]
      - [dense, dense]
      sgd_dense_param_sparse_grad:
      - [dense, dense, selected_rows, dense]
      - [dense, dense]
      sgd_sparse_param_sparse_grad:
      - [selected_rows, dense, selected_rows, selected_rows]
      - [selected_rows, selected_rows]
    force_backend: null
  inplace: {param_out: param, master_param_out: master_param}
  view: null
  backward: null
- name: shadow_output
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: str, name: name}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [shadow_output]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {shadow_output: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: shape
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [input]
  infer_meta:
    func: ShapeInferMeta
    param: [input]
  kernel:
    func: [shape, shape_sr]
    param: [input]
    backend: null
    layout: null
    data_type: null
    dispatch:
      shape:
      - [dense]
      - [dense]
      shape_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: shard_index
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: index_num}
  - {typename: int, name: nshards}
  - {typename: int, name: shard_id}
  - {typename: int, name: ignore_value, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ShardIndexInferMeta
    param: [input, index_num, nshards, shard_id, ignore_value]
  kernel:
    func: [shard_index]
    param: [input, index_num, nshards, shard_id, ignore_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {shard_index: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: sigmoid
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: sigmoid_grad
- name: sigmoid_cross_entropy_with_logits
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: pos_weight
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: normalize, default_value: 'false'}
  - {typename: int, name: ignore_index, default_value: '-100'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SigmoidCrossEntropyWithLogitsInferMeta
    param: [x, label, pos_weight, normalize, ignore_index]
  kernel:
    func: [sigmoid_cross_entropy_with_logits]
    param: [x, label, pos_weight, normalize, ignore_index]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid_cross_entropy_with_logits: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: sigmoid_cross_entropy_with_logits_grad
- name: sign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sign: null}
    force_backend: null
  inplace: null
  view: null
  backward: sign_grad
- name: silu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [silu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {silu: null}
    force_backend: null
  inplace: null
  view: null
  backward: silu_grad
- name: sin
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: sin_grad
- name: sinh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sinh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: sinh_grad
- name: slogdet
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [slogdet]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {slogdet: null}
    force_backend: null
  inplace: null
  view: null
  backward: slogdet_grad
- name: softplus
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: threshold, default_value: 20.0f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softplus]
    param: [x, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus: null}
    force_backend: null
  inplace: null
  view: null
  backward: softplus_grad
- name: softshrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softshrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softshrink: null}
    force_backend: null
  inplace: null
  view: null
  backward: softshrink_grad
- name: softsign
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softsign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {softsign: null}
    force_backend: null
  inplace: null
  view: null
  backward: softsign_grad
- name: solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SolveInferMeta
    param: [x, y]
  kernel:
    func: [solve]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {solve: null}
    force_backend: null
  inplace: null
  view: null
  backward: solve_grad
- name: spectral_norm
  inputs:
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: u
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: v
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: dim, default_value: '0'}
  - {typename: int, name: power_iters, default_value: '1'}
  - {typename: float, name: eps, default_value: 1e-12f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SpectralNormInferMeta
    param: [weight, u, v, dim, power_iters, eps]
  kernel:
    func: [spectral_norm]
    param: [weight, u, v, dim, power_iters, eps]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [weight]
      to_complex_flag: [false]
    dispatch: {spectral_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: spectral_norm_grad
- name: sqrt
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sqrt, sqrt_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      sqrt:
      - [dense]
      - [dense]
      sqrt_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: {out: x}
  view: null
  backward: sqrt_grad
- name: square
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [square, square_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      square:
      - [dense]
      - [dense]
      square_sr:
      - [selected_rows]
      - [selected_rows]
    force_backend: null
  inplace: null
  view: null
  backward: square_grad
- name: squared_l2_norm
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SquaredL2NormInferMeta
    param: [x]
  kernel:
    func: [squared_l2_norm]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {squared_l2_norm: null}
    force_backend: null
  inplace: null
  view: null
  backward: squared_l2_norm_grad
- name: squeeze
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SqueezeWithXShapeInferMeta
    param: [x, axis]
  kernel:
    func: [squeeze]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {squeeze: null}
    force_backend: null
  inplace: {out: x}
  view: {out: x}
  backward: squeeze_grad
- name: stack
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: StackInferMeta
    param: [x, axis]
  kernel:
    func: [stack]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {stack: null}
    force_backend: null
  inplace: null
  view: null
  backward: stack_grad
- name: stanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale_a, default_value: 0.67f}
  - {typename: float, name: scale_b, default_value: 1.7159f}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [stanh]
    param: [x, scale_a, scale_b]
    backend: null
    layout: null
    data_type: null
    dispatch: {stanh: null}
    force_backend: null
  inplace: null
  view: null
  backward: stanh_grad
- name: svd
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: full_matrices, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: u, optional: false, intermediate: false}
  - {typename: Tensor, name: s, optional: false, intermediate: false}
  - {typename: Tensor, name: vh, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: SvdInferMeta
    param: [x, full_matrices]
  kernel:
    func: [svd]
    param: [x, full_matrices]
    backend: null
    layout: null
    data_type: null
    dispatch: {svd: null}
    force_backend: null
  inplace: null
  view: null
  backward: svd_grad
- name: take_along_axis
  inputs:
  - typename: Tensor
    name: arr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: TakeAlongAxisInferMeta
    param: [arr, indices, axis]
  kernel:
    func: [take_along_axis]
    param: [arr, indices, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {take_along_axis: null}
    force_backend: null
  inplace: null
  view: null
  backward: take_along_axis_grad
- name: tan
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tan: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: tan_grad
- name: tanh
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: tanh_grad
- name: tanh_shrink
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tanh_shrink]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_shrink: null}
    force_backend: null
  inplace: null
  view: null
  backward: tanh_shrink_grad
- name: temporal_shift
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: seg_num}
  - {typename: float, name: shift_ratio, default_value: 0.25f}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: TemporalShiftInferMeta
    param: [x, seg_num, shift_ratio, data_format]
  kernel:
    func: [temporal_shift]
    param: [x, seg_num, shift_ratio, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {temporal_shift: null}
    force_backend: null
  inplace: null
  view: null
  backward: temporal_shift_grad
- name: tensor_unfold
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: int64_t, name: axis}
  - {typename: int64_t, name: size}
  - {typename: int64_t, name: step}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  kernel:
    func: [tensor_unfold]
    param: [input, axis, size, step]
    backend: null
    layout: null
    data_type: null
    dispatch: {tensor_unfold: null}
    force_backend: null
  inplace: null
  view: null
  backward: tensor_unfold_grad
- name: thresholded_relu
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: threshold, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [thresholded_relu]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {thresholded_relu: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: thresholded_relu_grad
- name: topk
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: Scalar(int), name: k, default_value: '1', data_type: int}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: largest, default_value: 'true'}
  - {typename: bool, name: sorted, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: indices, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: TopKInferMeta
    param: [x, k, axis, largest, sorted]
  kernel:
    func: [topk]
    param: [x, k, axis, largest, sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {topk: null}
    force_backend: null
  inplace: null
  view: null
  backward: topk_grad
- name: trace
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: TraceInferMeta
    param: [x, offset, axis1, axis2]
  kernel:
    func: [trace]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {trace: null}
    force_backend: null
  inplace: null
  view: null
  backward: trace_grad
- name: triangular_solve
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: upper, default_value: 'true'}
  - {typename: bool, name: transpose, default_value: 'false'}
  - {typename: bool, name: unitriangular, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: TriangularSolveInferMeta
    param: [x, y, upper, transpose, unitriangular]
  kernel:
    func: [triangular_solve]
    param: [x, y, upper, transpose, unitriangular]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {triangular_solve: null}
    force_backend: null
  inplace: null
  view: null
  backward: triangular_solve_grad
- name: trilinear_interp
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: out_size
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor[]
    name: size_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: scale_tensor
    optional: true
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  attrs:
  - {typename: str, name: data_layout, default_value: '"NCHW"'}
  - {typename: int, name: out_d, default_value: '0'}
  - {typename: int, name: out_h, default_value: '0'}
  - {typename: int, name: out_w, default_value: '0'}
  - {typename: 'float[]', name: scale, default_value: '{}'}
  - {typename: str, name: interp_method, default_value: '"bilinear"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  - {typename: int, name: align_mode, default_value: '1'}
  outputs:
  - {typename: Tensor, name: output, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [out_size, size_tensor, scale_tensor]
  infer_meta:
    func: InterpolateInferMeta
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
  kernel:
    func: [trilinear_interp]
    param: [x, out_size, size_tensor, scale_tensor, data_layout, out_d, out_h, out_w,
      scale, interp_method, align_corners, align_mode]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {trilinear_interp: null}
    force_backend: null
  inplace: null
  view: null
  backward: trilinear_interp_grad
- name: trunc
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  kernel:
    func: [trunc]
    param: [input]
    backend: null
    layout: null
    data_type: null
    dispatch: {trunc: null}
    force_backend: null
  inplace: {out: input}
  view: null
  backward: trunc_grad
- name: unbind
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: 'axis<0 ? input.dims()[input.dims().size()+axis]:input.dims()[axis]',
    optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnbindInferMeta
    param: [input, axis]
  kernel:
    func: [unbind]
    param: [input, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {unbind: null}
    force_backend: null
  inplace: null
  view: null
  backward: unbind_grad
- name: unfold
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnfoldInferMeta
    param: [x, kernel_sizes, strides, paddings, dilations]
  kernel:
    func: [unfold]
    param: [x, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {unfold: null}
    force_backend: null
  inplace: null
  view: null
  backward: unfold_grad
- name: uniform_inplace
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: min, default_value: '-1.0'}
  - {typename: float, name: max, default_value: '1.0'}
  - {typename: int, name: seed, default_value: '0'}
  - {typename: int, name: diag_num, default_value: '0'}
  - {typename: int, name: diag_step, default_value: '0'}
  - {typename: float, name: diag_val, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UniformRandomInplaceInferMeta
    param: [x, min, max, seed, diag_num, diag_step, diag_val]
  kernel:
    func: [uniform_inplace]
    param: [x, min, max, seed, diag_num, diag_step, diag_val]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {uniform_inplace: null}
    force_backend: null
  inplace: {out: x}
  view: null
  backward: uniform_inplace_grad
- name: unique_consecutive
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: return_inverse, default_value: 'false'}
  - {typename: bool, name: return_counts, default_value: 'false'}
  - {typename: 'int[]', name: axis, default_value: '{}'}
  - {typename: int, name: dtype, default_value: '5'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: index, optional: true, intermediate: false}
  - {typename: Tensor, name: counts, optional: true, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UniqueConsecutiveInferMeta
    param: [x, return_inverse, return_counts, axis, dtype]
  kernel:
    func: [unique_consecutive]
    param: [x, return_inverse, return_counts, axis, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unique_consecutive: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: unpool3d
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: indices
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: ksize}
  - {typename: 'int[]', name: strides, default_value: '{1,1,1}'}
  - {typename: 'int[]', name: paddings, default_value: '{0,0,0}'}
  - {typename: 'int[]', name: output_size, default_value: '{0,0,0}'}
  - {typename: str, name: data_format, default_value: '"NCDHW"'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: Unpool3dInferMeta
    param: [x, indices, ksize, strides, paddings, output_size, data_format]
  kernel:
    func: [unpool3d]
    param: [x, indices, ksize, strides, paddings, output_size, data_format]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unpool3d: null}
    force_backend: null
  inplace: null
  view: null
  backward: unpool3d_grad
- name: unsqueeze
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  - {typename: Tensor, name: xshape, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnsqueezeWithXShapeInferMeta
    param: [x, axis]
  kernel:
    func: [unsqueeze]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unsqueeze: null}
    force_backend: null
  inplace: {out: x}
  view: {out: x}
  backward: unsqueeze_grad
- name: unstack
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  - {typename: int, name: num, default_value: '0'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: num, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: UnStackInferMeta
    param: [x, axis, num]
  kernel:
    func: [unstack]
    param: [x, axis, num]
    backend: null
    layout: null
    data_type: null
    dispatch: {unstack: null}
    force_backend: null
  inplace: null
  view: null
  backward: unstack_grad
- name: update_loss_scaling_
  inputs:
  - typename: Tensor[]
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: found_infinite
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: true, support_trans_dtype: false}
  - typename: Tensor
    name: prev_loss_scaling
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: in_good_steps
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  - typename: Tensor
    name: in_bad_steps
    optional: false
    no_need_buffer: false
    data_transform: {skip_trans_args: false, support_trans_dtype: false}
  attrs:
  - {typename: int, name: incr_every_n_steps}
  - {typename: int, name: decr_every_n_nan_or_inf}
  - {typename: float, name: incr_ratio}
  - {typename: float, name: decr_ratio}
  - {typename: Scalar, name: stop_update, default_value: 'false', data_type: float}
  outputs:
  - {typename: 'Tensor[]', name: out, size: x.size(), optional: false, intermediate: false}
  - {typename: Tensor, name: loss_scaling, optional: false, intermediate: false}
  - {typename: Tensor, name: out_good_steps, optional: false, intermediate: false}
  - {typename: Tensor, name: out_bad_steps, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform:
    skip_transform: [found_infinite]
  infer_meta:
    func: UpdateLossScalingInferMeta
    param: [x, found_infinite, prev_loss_scaling, in_good_steps, in_bad_steps]
  kernel:
    func: [update_loss_scaling]
    param: [x, found_infinite, prev_loss_scaling, in_good_steps, in_bad_steps, incr_every_n_steps,
      decr_every_n_nan_or_inf, incr_ratio, decr_ratio, stop_update]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {update_loss_scaling: null}
    force_backend: null
  inplace: {out: x, loss_scaling: prev_loss_scaling, out_good_steps: in_good_steps,
    out_bad_steps: in_bad_steps}
  view: null
  backward: null
- name: variable_length_memory_efficient_attention
  inputs:
  - typename: Tensor
    name: query
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: key
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: value
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: kv_seq_lens
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: mask
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: float, name: scale}
  - {typename: bool, name: causal}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: VariableLengthMemoryEfficientAttentionInferMeta
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal]
  kernel:
    func: [variable_length_memory_efficient_attention]
    param: [query, key, value, seq_lens, kv_seq_lens, mask, scale, causal]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [query]
      to_complex_flag: [false]
    dispatch: {variable_length_memory_efficient_attention: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: view_dtype
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: DataType, name: dtype}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  kernel:
    func: [view_dtype]
    param: [input, dtype]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {view_dtype: null}
    force_backend: null
  inplace: null
  view: null
  backward: view_dtype_grad
- name: view_shape
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: true
    data_transform: {}
  attrs:
  - {typename: 'int64_t[]', name: dims, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: [input]
  data_transform: null
  infer_meta:
    func: StridedUnChangedInferMeta
    param: [input]
  kernel:
    func: [view_shape]
    param: [input, dims]
    backend: null
    layout: null
    data_type: null
    dispatch: {view_shape: null}
    force_backend: null
  inplace: null
  view: null
  backward: view_shape_grad
- name: viterbi_decode
  inputs:
  - typename: Tensor
    name: potentials
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: transition_params
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: bool, name: include_bos_eos_tag, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: scores, optional: false, intermediate: false}
  - {typename: Tensor, name: path, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: ViterbiDecodeInferMeta
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
  kernel:
    func: [viterbi_decode]
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [potentials]
      to_complex_flag: [false]
    dispatch: {viterbi_decode: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: warpctc
  inputs:
  - typename: Tensor
    name: logits
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: logits_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: labels_length
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: bool, name: norm_by_times, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: warpctcgrad, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: WarpctcInferMeta
    param: [logits, label, logits_length, labels_length, blank, norm_by_times]
  kernel:
    func: [warpctc]
    param: [logits, label, logits_length, labels_length, blank, norm_by_times]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [logits]
      to_complex_flag: [false]
    dispatch: {warpctc: null}
    force_backend: null
  inplace: null
  view: null
  backward: warpctc_grad
- name: warprnnt
  inputs:
  - typename: Tensor
    name: input
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: label_lengths
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: float, name: fastemit_lambda, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: warprnntgrad, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: WarprnntInferMeta
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
  kernel:
    func: [warprnnt]
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {warprnnt: null}
    force_backend: null
  inplace: null
  view: null
  backward: warprnnt_grad
- name: weight_only_matmul
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: weight_scale
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: WeightOnlyMatmulInferMeta
    param: [x, weight, weight_scale]
  kernel:
    func: [weight_only_matmul]
    param: [x, weight, weight_scale]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {weight_only_matmul: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: weighted_sample_neighbors
  inputs:
  - typename: Tensor
    name: row
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: colptr
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: edge_weight
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: input_nodes
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: eids
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: int, name: sample_size}
  - {typename: bool, name: return_eids}
  outputs:
  - {typename: Tensor, name: out_neighbors, optional: false, intermediate: false}
  - {typename: Tensor, name: out_count, optional: false, intermediate: false}
  - {typename: Tensor, name: out_eids, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: WeightedSampleNeighborsInferMeta
    param: [row, colptr, edge_weight, input_nodes, eids, sample_size, return_eids]
  kernel:
    func: [weighted_sample_neighbors]
    param: [row, colptr, edge_weight, input_nodes, eids, sample_size, return_eids]
    backend: null
    layout: null
    data_type: null
    dispatch: {weighted_sample_neighbors: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: where
  inputs:
  - typename: Tensor
    name: condition
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: y
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: WhereInferMeta
    param: [condition, x, y]
  kernel:
    func: [where]
    param: [condition, x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {where: null}
    force_backend: null
  inplace: null
  view: null
  backward: where_grad
- name: yolo_box
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: img_size
    optional: false
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: anchors, default_value: '{}'}
  - {typename: int, name: class_num, default_value: '1'}
  - {typename: float, name: conf_thresh, default_value: '0.01'}
  - {typename: int, name: downsample_ratio, default_value: '32'}
  - {typename: bool, name: clip_bbox, default_value: 'true'}
  - {typename: float, name: scale_x_y, default_value: '1.0'}
  - {typename: bool, name: iou_aware, default_value: 'false'}
  - {typename: float, name: iou_aware_factor, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: boxes, optional: false, intermediate: false}
  - {typename: Tensor, name: scores, optional: false, intermediate: false}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: YoloBoxInferMeta
    param: [x, img_size, anchors, class_num, conf_thresh, downsample_ratio, clip_bbox,
      scale_x_y, iou_aware, iou_aware_factor]
  kernel:
    func: [yolo_box]
    param: [x, img_size, anchors, class_num, conf_thresh, downsample_ratio, clip_bbox,
      scale_x_y, iou_aware, iou_aware_factor]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_box: null}
    force_backend: null
  inplace: null
  view: null
  backward: null
- name: yolo_loss
  inputs:
  - typename: Tensor
    name: x
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_box
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_label
    optional: false
    no_need_buffer: false
    data_transform: {}
  - typename: Tensor
    name: gt_score
    optional: true
    no_need_buffer: false
    data_transform: {}
  attrs:
  - {typename: 'int[]', name: anchors, default_value: '{}'}
  - {typename: 'int[]', name: anchor_mask, default_value: '{}'}
  - {typename: int, name: class_num, default_value: '1'}
  - {typename: float, name: ignore_thresh, default_value: '0.7'}
  - {typename: int, name: downsample_ratio, default_value: '32'}
  - {typename: bool, name: use_label_smooth, default_value: 'true'}
  - {typename: float, name: scale_x_y, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: loss, optional: false, intermediate: false}
  - {typename: Tensor, name: objectness_mask, optional: false, intermediate: true}
  - {typename: Tensor, name: gt_match_mask, optional: false, intermediate: true}
  no_need_buffer: null
  data_transform: null
  infer_meta:
    func: YoloLossInferMeta
    param: [x, gt_box, gt_label, gt_score, anchors, anchor_mask, class_num, ignore_thresh,
      downsample_ratio, use_label_smooth, scale_x_y]
  kernel:
    func: [yolo_loss]
    param: [x, gt_box, gt_label, gt_score, anchors, anchor_mask, class_num, ignore_thresh,
      downsample_ratio, use_label_smooth, scale_x_y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {yolo_loss: null}
    force_backend: null
  inplace: null
  view: null
  backward: yolo_loss_grad
