- name: acos
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acos: null}
  inplace: null
  backward: acos_grad
- name: acosh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [acosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {acosh: null}
  inplace: null
  backward: acosh_grad
- name: addmm
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: AddmmInferMeta
    param: [input, x, y, beta, alpha]
  kernel:
    func: [addmm]
    param: [input, x, y, beta, alpha]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {addmm: null}
  inplace: null
  backward: addmm_grad
- name: allclose
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar, name: rtol, default_value: '"1e-5"', data_type: float}
  - {typename: Scalar, name: atol, default_value: '"1e-8"', data_type: float}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: AllValueCompareInferMeta
    param: [x, y]
  kernel:
    func: [allclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {allclose: null}
  inplace: null
  backward: null
- name: angle
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [angle]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {angle: null}
  inplace: null
  backward: angle_grad
- name: argsort
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: descending, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: indices, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ArgsortInferMeta
    param: [x, axis, descending]
  kernel:
    func: [argsort]
    param: [x, axis, descending]
    backend: null
    layout: null
    data_type: null
    dispatch: {argsort: null}
  inplace: null
  backward: argsort_grad
- name: as_complex
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: AsComplexInferMeta
    param: [x]
  kernel:
    func: [as_complex]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_complex: null}
  inplace: null
  backward: as_complex_grad
- name: as_real
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: AsRealInferMeta
    param: [x]
  kernel:
    func: [as_real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {as_real: null}
  inplace: null
  backward: as_real_grad
- name: asin
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asin: null}
  inplace: null
  backward: asin_grad
- name: asinh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [asinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {asinh: null}
  inplace: null
  backward: asinh_grad
- name: atan
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan: null}
  inplace: null
  backward: atan_grad
- name: atan2
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: Atan2InferMeta
    param: [x, y]
  kernel:
    func: [atan2]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {atan2: null}
  inplace: null
  backward: atan2_grad
- name: atanh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [atanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {atanh: null}
  inplace: null
  backward: atanh_grad
- name: bernoulli
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [bernoulli]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {bernoulli: null}
  inplace: null
  backward: null
- name: bmm
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: BmmInferMeta
    param: [x, y]
  kernel:
    func: [bmm]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {bmm: null}
  inplace: null
  backward: bmm_grad
- name: ceil
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [ceil]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {ceil: null}
  inplace: {out: x}
  backward: ceil_grad
- name: celu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [celu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {celu: null}
  inplace: null
  backward: celu_grad
- name: cholesky
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CholeskyInferMeta
    param: [x, upper]
  kernel:
    func: [cholesky]
    param: [x, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky: null}
  inplace: null
  backward: cholesky_grad
- name: cholesky_solve
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: upper, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CholeskySolveInferMeta
    param: [x, y, upper]
  kernel:
    func: [cholesky_solve]
    param: [x, y, upper]
    backend: null
    layout: null
    data_type: null
    dispatch: {cholesky_solve: null}
  inplace: null
  backward: cholesky_solve_grad
- name: clip
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar(float), name: min, data_type: float}
  - {typename: Scalar(float), name: max, data_type: float}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [clip]
    param: [x, min, max]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {clip: null}
  inplace: {out: x}
  backward: clip_grad
- name: complex
  inputs:
  - {typename: Tensor, name: real, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: imag, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ComplexInferMeta
    param: [real, imag]
  kernel:
    func: [complex]
    param: [real, imag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [real]
      to_complex_flag: [false]
    dispatch: {complex: null}
  inplace: null
  backward: complex_grad
- name: conj
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [conj]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {conj: null}
  inplace: null
  backward: conj_grad
- name: cos
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cos]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cos: null}
  inplace: null
  backward: cos_grad
- name: cosh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [cosh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {cosh: null}
  inplace: null
  backward: cosh_grad
- name: crop
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: shape, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: IntArray, name: offsets, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CropInferMeta
    param: [x, shape, offsets]
  kernel:
    func: [crop]
    param: [x, shape, offsets]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {crop: null}
  inplace: null
  backward: crop_grad
- name: cross
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis, default_value: '9'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CrossInferMeta
    param: [x, y, axis]
  kernel:
    func: [cross]
    param: [x, y, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {cross: null}
  inplace: null
  backward: cross_grad
- name: det
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [determinant]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {determinant: null}
  inplace: null
  backward: det_grad
- name: diag
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: float, name: padding_value, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: DiagInferMeta
    param: [x, offset, padding_value]
  kernel:
    func: [diag]
    param: [x, offset, padding_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag: null}
  inplace: null
  backward: diag_grad
- name: diag_embed
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '-2'}
  - {typename: int, name: dim2, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: DiagEmbedInferMeta
    param: [input, offset, dim1, dim2]
  kernel:
    func: [diag_embed]
    param: [input, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diag_embed: null}
  inplace: null
  backward: null
- name: diagonal
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: DiagonalInferMeta
    param: [x, offset, axis1, axis2]
  kernel:
    func: [diagonal]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {diagonal: null}
  inplace: null
  backward: diagonal_grad
- name: digamma
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [digamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {digamma: null}
  inplace: null
  backward: digamma_grad
- name: dist
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: p, default_value: '2.0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: DistInferMeta
    param: [x, y, p]
  kernel:
    func: [dist]
    param: [x, y, p]
    backend: null
    layout: null
    data_type: null
    dispatch: {dist: null}
  inplace: null
  backward: dist_grad
- name: dot
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: DotInferMeta
    param: [x, y]
  kernel:
    func: [dot]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {dot: null}
  inplace: null
  backward: dot_grad
- name: eig
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out_w, intermediate: false}
  - {typename: Tensor, name: out_v, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: EigInferMeta
    param: [x]
  kernel:
    func: [eig]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eig: null}
  inplace: null
  backward: eig_grad
- name: eigh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: UPLO, default_value: '"L"'}
  outputs:
  - {typename: Tensor, name: out_w, intermediate: false}
  - {typename: Tensor, name: out_v, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: EighInferMeta
    param: [x, UPLO]
  kernel:
    func: [eigh]
    param: [x, UPLO]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigh: null}
  inplace: null
  backward: eigh_grad
- name: eigvals
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: EigvalsInferMeta
    param: [x]
  kernel:
    func: [eigvals]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {eigvals: null}
  inplace: null
  backward: null
- name: elu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: alpha, default_value: 1.0f}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [elu]
    param: [x, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {elu: null}
  inplace: {out: x}
  backward: elu_grad
- name: equal_all
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: CompareAllInferMeta
    param: [x, y]
  kernel:
    func: [equal_all]
    param: [x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {equal_all: null}
  inplace: null
  backward: null
- name: erf
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erf]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erf: null}
  inplace: null
  backward: erf_grad
- name: erfinv
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [erfinv]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {erfinv: null}
  inplace: {out: x}
  backward: erfinv_grad
- name: exp
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [exp]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {exp: null}
  inplace: {out: x}
  backward: exp_grad
- name: expm1
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [expm1]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {expm1: null}
  inplace: null
  backward: expm1_grad
- name: fft_c2c
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FFTC2CInferMeta
    param: [x, axes, normalization, forward]
  kernel:
    func: [fft_c2c]
    param: [x, axes, normalization, forward]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2c: null}
  inplace: null
  backward: fft_c2c_grad
- name: fft_c2r
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: int64_t, name: last_dim_size, default_value: 0L}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FFTC2RInferMeta
    param: [x, axes, normalization, forward, last_dim_size]
  kernel:
    func: [fft_c2r]
    param: [x, axes, normalization, forward, last_dim_size]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_c2r: null}
  inplace: null
  backward: fft_c2r_grad
- name: fft_r2c
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int64_t[]', name: axes}
  - {typename: str, name: normalization}
  - {typename: bool, name: forward}
  - {typename: bool, name: onesided}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FFTR2CInferMeta
    param: [x, axes, normalization, forward, onesided]
  kernel:
    func: [fft_r2c]
    param: [x, axes, normalization, forward, onesided]
    backend: null
    layout: null
    data_type: null
    dispatch: {fft_r2c: null}
  inplace: null
  backward: fft_r2c_grad
- name: fill_diagonal
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: value, default_value: '0'}
  - {typename: int, name: offset, default_value: '0'}
  - {typename: bool, name: wrap, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FillDiagonalInferMeta
    param: [x, value, offset, wrap]
  kernel:
    func: [fill_diagonal]
    param: [x, value, offset, wrap]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {fill_diagonal: null}
  inplace: {out: x}
  backward: fill_diagonal_grad
- name: fill_diagonal_tensor
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int64_t, name: offset, default_value: '0'}
  - {typename: int, name: dim1, default_value: '0'}
  - {typename: int, name: dim2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FillDiagonalTensorInferMeta
    param: [x, y, offset, dim1, dim2]
  kernel:
    func: [fill_diagonal_tensor]
    param: [x, y, offset, dim1, dim2]
    backend: null
    layout: null
    data_type: null
    dispatch: {fill_diagonal_tensor: null}
  inplace: {out: x}
  backward: fill_diagonal_tensor_grad
- name: flip
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: axis}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FlipInferMeta
    param: [x, axis]
  kernel:
    func: [flip]
    param: [x, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {flip: null}
  inplace: null
  backward: flip_grad
- name: floor
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [floor]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {floor: null}
  inplace: {out: x}
  backward: floor_grad
- name: fold
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: output_sizes}
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FoldInferMeta
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
  kernel:
    func: [fold]
    param: [x, output_sizes, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {fold: null}
  inplace: null
  backward: fold_grad
- name: frame
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: frame_length}
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: FrameInferMeta
    param: [x, frame_length, hop_length, axis]
  kernel:
    func: [frame]
    param: [x, frame_length, hop_length, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {frame: null}
  inplace: null
  backward: frame_grad
- name: gather_nd
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GatherNdInferMeta
    param: [x, index]
  kernel:
    func: [gather_nd]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {gather_nd: null}
  inplace: null
  backward: gather_nd_grad
- name: gather_tree
  inputs:
  - {typename: Tensor, name: ids, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: parents, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GatherTreeMeta
    param: [ids, parents]
  kernel:
    func: [gather_tree]
    param: [ids, parents]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [ids]
      to_complex_flag: [false]
    dispatch: {gather_tree: null}
  inplace: null
  backward: null
- name: gelu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: approximate, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [gelu]
    param: [x, approximate]
    backend: null
    layout: null
    data_type: null
    dispatch: {gelu: null}
  inplace: null
  backward: gelu_grad
- name: grid_sample
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: grid, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: mode, default_value: '"bilinear"'}
  - {typename: str, name: padding_mode, default_value: '"zeros"'}
  - {typename: bool, name: align_corners, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GridSampleBaseInferMeta
    param: [x, grid]
  kernel:
    func: [grid_sample]
    param: [x, grid, mode, padding_mode, align_corners]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {grid_sample: null}
  inplace: null
  backward: grid_sample_grad
- name: gumbel_softmax
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: temperature, default_value: '1.0'}
  - {typename: bool, name: hard, default_value: 'false'}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: GumbelSoftmaxInferMeta
    param: [x, temperature, hard, axis]
  kernel:
    func: [gumbel_softmax]
    param: [x, temperature, hard, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {gumbel_softmax: null}
  inplace: null
  backward: gumbel_softmax_grad
- name: hardshrink
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hard_shrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_shrink: null}
  inplace: null
  backward: hardshrink_grad
- name: hardsigmoid
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: slope, default_value: '0.2'}
  - {typename: float, name: offset, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hard_sigmoid]
    param: [x, slope, offset]
    backend: null
    layout: null
    data_type: null
    dispatch: {hard_sigmoid: null}
  inplace: null
  backward: hardsigmoid_grad
- name: hardtanh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: t_min, default_value: '0'}
  - {typename: float, name: t_max, default_value: '24'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [hardtanh]
    param: [x, t_min, t_max]
    backend: null
    layout: null
    data_type: null
    dispatch: {hardtanh: null}
  inplace: null
  backward: hardtanh_grad
- name: histogram
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int64_t, name: bins, default_value: '100'}
  - {typename: int, name: min, default_value: '0'}
  - {typename: int, name: max, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: HistogramInferMeta
    param: [input, bins, min, max]
  kernel:
    func: [histogram]
    param: [input, bins, min, max]
    backend: null
    layout: null
    data_type: null
    dispatch: {histogram: null}
  inplace: null
  backward: null
- name: imag
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [imag]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {imag: null}
  inplace: null
  backward: imag_grad
- name: index_sample
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IndexSampleInferMeta
    param: [x, index]
  kernel:
    func: [index_sample]
    param: [x, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_sample: null}
  inplace: null
  backward: index_sample_grad
- name: index_select
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IndexSelectInferMeta
    param: [x, index, axis]
  kernel:
    func: [index_select]
    param: [x, index, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {index_select: null}
  inplace: null
  backward: index_select_grad
- name: inverse
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: InverseInferMeta
    param: [x]
  kernel:
    func: [inverse]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {inverse: null}
  inplace: null
  backward: inverse_grad
- name: is_empty
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IsEmptyInferMeta
    param: [x]
  kernel:
    func: [is_empty]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {is_empty: null}
  inplace: null
  backward: null
- name: isclose
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar, name: rtol, default_value: '"1e-5"', data_type: float}
  - {typename: Scalar, name: atol, default_value: '"1e-8"', data_type: float}
  - {typename: bool, name: equal_nan, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ValueCompareInferMeta
    param: [x, y]
  kernel:
    func: [isclose]
    param: [x, y, rtol, atol, equal_nan]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {isclose: null}
  inplace: null
  backward: null
- name: isfinite
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isfinite, infinite_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isfinite:
      - [dense]
      - [dense]
      infinite_sr:
      - [selected_rows]
      - [selected_rows]
  inplace: null
  backward: null
- name: isinf
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isinf, isinf_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isinf:
      - [dense]
      - [dense]
      isinf_sr:
      - [selected_rows]
      - [selected_rows]
  inplace: null
  backward: null
- name: isnan
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: IsfiniteInferMeta
    param: [x]
  kernel:
    func: [isnan, isnan_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      isnan:
      - [dense]
      - [dense]
      isnan_sr:
      - [selected_rows]
      - [selected_rows]
  inplace: null
  backward: null
- name: kthvalue
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: k, default_value: '1'}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: indices, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: KthvalueInferMeta
    param: [x, k, axis, keepdim]
  kernel:
    func: [kthvalue]
    param: [x, k, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {kthvalue: null}
  inplace: null
  backward: kthvalue_grad
- name: label_smooth
  inputs:
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: prior_dist, optional: true, no_need_buffer: false}
  attrs:
  - {typename: float, name: epsilon, default_value: 0.0f}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [label]
  kernel:
    func: [label_smooth]
    param: [label, prior_dist, epsilon]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [label]
      to_complex_flag: [false]
    dispatch: {label_smooth: null}
  inplace: null
  backward: label_smooth_grad
- name: leaky_relu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: negative_slope, default_value: 0.02f}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [leaky_relu]
    param: [x, negative_slope]
    backend: null
    layout: null
    data_type: null
    dispatch: {leaky_relu: null}
  inplace: null
  backward: leaky_relu_grad
- name: lerp
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: weight, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: LerpInferMeta
    param: [x, y, weight]
  kernel:
    func: [lerp]
    param: [x, y, weight]
    backend: null
    layout: null
    data_type: null
    dispatch: {lerp: null}
  inplace: {out: x}
  backward: lerp_grad
- name: lgamma
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [lgamma]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {lgamma: null}
  inplace: null
  backward: lgamma_grad
- name: log
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log: null}
  inplace: null
  backward: log_grad
- name: log10
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log10]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log10: null}
  inplace: null
  backward: log10_grad
- name: log1p
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log1p]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log1p: null}
  inplace: null
  backward: log1p_grad
- name: log2
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [log2]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {log2: null}
  inplace: null
  backward: log2_grad
- name: log_loss
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: epsilon}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: LogLossInferMeta
    param: [input, label, epsilon]
  kernel:
    func: [log_loss]
    param: [input, label, epsilon]
    backend: null
    layout: null
    data_type: null
    dispatch: {log_loss: null}
  inplace: null
  backward: log_loss_grad
- name: logit
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: eps, default_value: 1e-6f}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logit]
    param: [x, eps]
    backend: null
    layout: null
    data_type: null
    dispatch: {logit: null}
  inplace: null
  backward: logit_grad
- name: logsigmoid
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [logsigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {logsigmoid: null}
  inplace: null
  backward: logsigmoid_grad
- name: lu_unpack
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: unpack_ludata, default_value: 'true'}
  - {typename: bool, name: unpack_pivots, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: pmat, intermediate: false}
  - {typename: Tensor, name: l, intermediate: false}
  - {typename: Tensor, name: u, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: LUUnpackInferMeta
    param: [x, y, unpack_ludata, unpack_pivots]
  kernel:
    func: [lu_unpack]
    param: [x, y, unpack_ludata, unpack_pivots]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {lu_unpack: null}
  inplace: null
  backward: lu_unpack_grad
- name: masked_select
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: mask, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MaskedSelectInferMeta
    param: [x, mask]
  kernel:
    func: [masked_select]
    param: [x, mask]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {masked_select: null}
  inplace: null
  backward: masked_select_grad
- name: matrix_power
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: n}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MatrixPowerInferMeta
    param: [x, n]
  kernel:
    func: [matrix_power]
    param: [x, n]
    backend: null
    layout: null
    data_type: null
    dispatch: {matrix_power: null}
  inplace: null
  backward: matrix_power_grad
- name: maxout
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: groups}
  - {typename: int, name: axis, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MaxOutInferMeta
    param: [x, groups, axis]
  kernel:
    func: [maxout]
    param: [x, groups, axis]
    backend: null
    layout: null
    data_type: null
    dispatch: {maxout: null}
  inplace: null
  backward: maxout_grad
- name: meshgrid
  inputs:
  - {typename: 'Tensor[]', name: inputs, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: 'Tensor[]', name: out, size: inputs.size(), intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MeshgridInferMeta
    param: [inputs]
  kernel:
    func: [meshgrid]
    param: [inputs]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {meshgrid: null}
  inplace: null
  backward: meshgrid_grad
- name: mode
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: keepdim, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: indices, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ModeInferMeta
    param: [x, axis, keepdim]
  kernel:
    func: [mode]
    param: [x, axis, keepdim]
    backend: null
    layout: null
    data_type: null
    dispatch: {mode: null}
  inplace: null
  backward: mode_grad
- name: multi_dot
  inputs:
  - {typename: 'Tensor[]', name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MultiDotInferMeta
    param: [x]
  kernel:
    func: [multi_dot]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {multi_dot: null}
  inplace: null
  backward: multi_dot_grad
- name: multinomial
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar(int), name: num_samples, default_value: '1', data_type: int}
  - {typename: bool, name: replacement, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MultinomialInferMeta
    param: [x, num_samples, replacement]
  kernel:
    func: [multinomial]
    param: [x, num_samples, replacement]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {multinomial: null}
  inplace: null
  backward: null
- name: multiplex
  inputs:
  - {typename: 'Tensor[]', name: inputs, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MultiplexInferMeta
    param: [inputs, index]
  kernel:
    func: [multiplex]
    param: [inputs, index]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [inputs]
      to_complex_flag: [false]
    dispatch: {multiplex: null}
  inplace: null
  backward: multiplex_grad
- name: mv
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: vec, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: MvInferMeta
    param: [x, vec]
  kernel:
    func: [mv]
    param: [x, vec]
    backend: null
    layout: null
    data_type: null
    dispatch: {mv: null}
  inplace: null
  backward: mv_grad
- name: nll_loss
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: weight, optional: true, no_need_buffer: false}
  attrs:
  - {typename: int64_t, name: ignore_index, default_value: '-100'}
  - {typename: str, name: reduction, default_value: '"mean"'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: total_weight, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: NllLossRawInferMeta
    param: [input, label, weight, ignore_index, reduction]
  kernel:
    func: [nll_loss]
    param: [input, label, weight, ignore_index, reduction]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {nll_loss: null}
  inplace: null
  backward: nll_loss_grad
- name: npu_identity
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: format, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [npu_identity]
    param: [x, format]
    backend: null
    layout: null
    data_type: null
    dispatch: {npu_identity: null}
  inplace: null
  backward: null
- name: overlap_add
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: hop_length}
  - {typename: int, name: axis, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: OverlapAddInferMeta
    param: [x, hop_length, axis]
  kernel:
    func: [overlap_add]
    param: [x, hop_length, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {overlap_add: null}
  inplace: null
  backward: overlap_add_grad
- name: pixel_shuffle
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: upscale_factor, default_value: '1'}
  - {typename: str, name: data_format, default_value: '"NCHW"'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: PixelShuffleInferMeta
    param: [x, upscale_factor, data_format]
  kernel:
    func: [pixel_shuffle]
    param: [x, upscale_factor, data_format]
    backend: null
    layout: null
    data_type: null
    dispatch: {pixel_shuffle: null}
  inplace: null
  backward: pixel_shuffle_grad
- name: poisson
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [poisson]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {poisson: null}
  inplace: null
  backward: poisson_grad
- name: put_along_axis
  inputs:
  - {typename: Tensor, name: arr, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: values, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  - {typename: str, name: reduce, default_value: '"assign"'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [arr]
  kernel:
    func: [put_along_axis]
    param: [arr, indices, values, axis, reduce]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {put_along_axis: null}
  inplace: {out: arr}
  backward: put_along_axis_grad
- name: qr
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: mode, default_value: '"reduced"'}
  outputs:
  - {typename: Tensor, name: q, intermediate: false}
  - {typename: Tensor, name: r, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: QrInferMeta
    param: [x, mode]
  kernel:
    func: [qr]
    param: [x, mode]
    backend: null
    layout: null
    data_type: null
    dispatch: {qr: null}
  inplace: null
  backward: qr_grad
- name: real
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RealAndImagInferMeta
    param: [x]
  kernel:
    func: [real]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {real: null}
  inplace: null
  backward: real_grad
- name: reciprocal
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [reciprocal]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {reciprocal: null}
  inplace: {out: x}
  backward: reciprocal_grad
- name: relu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [relu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {relu: null}
  inplace: {out: x}
  backward: relu_grad
- name: renorm
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: p}
  - {typename: int, name: axis}
  - {typename: float, name: max_norm}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [renorm]
    param: [x, p, axis, max_norm]
    backend: null
    layout: null
    data_type: null
    dispatch: {renorm: null}
  inplace: null
  backward: renorm_grad
- name: roll
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: shifts, default_value: '{}', data_type: 'std::vector<int64_t>'}
  - {typename: 'int64_t[]', name: axis, default_value: '{}'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: RollInferMeta
    param: [x, shifts, axis]
  kernel:
    func: [roll]
    param: [x, shifts, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {roll: null}
  inplace: null
  backward: roll_grad
- name: round
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [round]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {round: null}
  inplace: {out: x}
  backward: round_grad
- name: rsqrt
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [rsqrt]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {rsqrt: null}
  inplace: {out: x}
  backward: rsqrt_grad
- name: scatter
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: updates, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: overwrite, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ScatterInferMeta
    param: [x, index, updates, overwrite]
  kernel:
    func: [scatter]
    param: [x, index, updates, overwrite]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter: null}
  inplace: {out: x}
  backward: scatter_grad
- name: scatter_nd_add
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: updates, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ScatterNdAddInferMeta
    param: [x, index, updates]
  kernel:
    func: [scatter_nd_add]
    param: [x, index, updates]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {scatter_nd_add: null}
  inplace: null
  backward: scatter_nd_add_grad
- name: searchsorted
  inputs:
  - {typename: Tensor, name: sorted_sequence, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: values, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: out_int32, default_value: 'false'}
  - {typename: bool, name: right, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: SearchsortedInferMeta
    param: [sorted_sequence, values, out_int32, right]
  kernel:
    func: [searchsorted]
    param: [sorted_sequence, values, out_int32, right]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [sorted_sequence]
      to_complex_flag: [false]
    dispatch: {searchsorted: null}
  inplace: null
  backward: null
- name: selu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: scale, default_value: '1.0507009873554804934193349852946'}
  - {typename: float, name: alpha, default_value: '1.6732632423543772848170429916717'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [selu]
    param: [x, scale, alpha]
    backend: null
    layout: null
    data_type: null
    dispatch: {selu: null}
  inplace: null
  backward: selu_grad
- name: send_uv
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: src_index, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: dst_index, optional: false, no_need_buffer: false}
  attrs:
  - {typename: str, name: message_op, default_value: '"ADD"'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: SendUVInferMeta
    param: [x, y, src_index, dst_index, message_op]
  kernel:
    func: [send_uv]
    param: [x, y, src_index, dst_index, message_op]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {send_uv: null}
  inplace: null
  backward: send_uv_grad
- name: shard_index
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: index_num}
  - {typename: int, name: nshards}
  - {typename: int, name: shard_id}
  - {typename: int, name: ignore_value, default_value: '-1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ShardIndexInferMeta
    param: [input, index_num, nshards, shard_id, ignore_value]
  kernel:
    func: [shard_index]
    param: [input, index_num, nshards, shard_id, ignore_value]
    backend: null
    layout: null
    data_type: null
    dispatch: {shard_index: null}
  inplace: null
  backward: null
- name: sigmoid
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sigmoid]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sigmoid: null}
  inplace: null
  backward: sigmoid_grad
- name: silu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [silu]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {silu: null}
  inplace: null
  backward: silu_grad
- name: sin
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sin]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sin: null}
  inplace: null
  backward: sin_grad
- name: sinh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sinh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {sinh: null}
  inplace: null
  backward: sinh_grad
- name: softplus
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: beta, default_value: '1.0'}
  - {typename: float, name: threshold, default_value: 20.0f}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softplus]
    param: [x, beta, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softplus: null}
  inplace: null
  backward: softplus_grad
- name: softshrink
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold, default_value: '0.5'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softshrink]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {softshrink: null}
  inplace: null
  backward: softshrink_grad
- name: softsign
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [softsign]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {softsign: null}
  inplace: null
  backward: softsign_grad
- name: solve
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: SolveInferMeta
    param: [x, y]
  kernel:
    func: [solve]
    param: [x, y]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {solve: null}
  inplace: null
  backward: solve_grad
- name: sqrt
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [sqrt, sqrt_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      sqrt:
      - [dense]
      - [dense]
      sqrt_sr:
      - [selected_rows]
      - [selected_rows]
  inplace: {out: x}
  backward: sqrt_grad
- name: square
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [square, square_sr]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch:
      square:
      - [dense]
      - [dense]
      square_sr:
      - [selected_rows]
      - [selected_rows]
  inplace: null
  backward: square_grad
- name: squeeze
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: xshape, intermediate: true}
  no_need_buffer: null
  infer_meta:
    func: SqueezeWithXShapeInferMeta
    param: [x, axis]
  kernel:
    func: [squeeze_with_xshape]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {squeeze_with_xshape: null}
  inplace: {out: x}
  backward: squeeze_grad
- name: svd
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: full_matrices, default_value: 'false'}
  outputs:
  - {typename: Tensor, name: u, intermediate: false}
  - {typename: Tensor, name: s, intermediate: false}
  - {typename: Tensor, name: vh, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: SvdInferMeta
    param: [x, full_matrices]
  kernel:
    func: [svd]
    param: [x, full_matrices]
    backend: null
    layout: null
    data_type: null
    dispatch: {svd: null}
  inplace: null
  backward: svd_grad
- name: take_along_axis
  inputs:
  - {typename: Tensor, name: arr, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: indices, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: TakeAlongAxisInferMeta
    param: [arr, indices, axis]
  kernel:
    func: [take_along_axis]
    param: [arr, indices, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [arr]
      to_complex_flag: [false]
    dispatch: {take_along_axis: null}
  inplace: null
  backward: take_along_axis_grad
- name: tan
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tan]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tan: null}
  inplace: null
  backward: tan_grad
- name: tanh
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tanh]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh: null}
  inplace: {out: x}
  backward: tanh_grad
- name: tanh_shrink
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [tanh_shrink]
    param: [x]
    backend: null
    layout: null
    data_type: null
    dispatch: {tanh_shrink: null}
  inplace: null
  backward: tanh_shrink_grad
- name: thresholded_relu
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: float, name: threshold, default_value: '1.0'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [x]
  kernel:
    func: [thresholded_relu]
    param: [x, threshold]
    backend: null
    layout: null
    data_type: null
    dispatch: {thresholded_relu: null}
  inplace: null
  backward: thresholded_relu_grad
- name: topk
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: Scalar(int), name: k, default_value: '1', data_type: int}
  - {typename: int, name: axis, default_value: '-1'}
  - {typename: bool, name: largest, default_value: 'true'}
  - {typename: bool, name: sorted, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: indices, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: TopKInferMeta
    param: [x, k, axis, largest, sorted]
  kernel:
    func: [topk]
    param: [x, k, axis, largest, sorted]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {topk: null}
  inplace: null
  backward: topk_grad
- name: trace
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: offset, default_value: '0'}
  - {typename: int, name: axis1, default_value: '0'}
  - {typename: int, name: axis2, default_value: '1'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: TraceInferMeta
    param: [x, offset, axis1, axis2]
  kernel:
    func: [trace]
    param: [x, offset, axis1, axis2]
    backend: null
    layout: null
    data_type: null
    dispatch: {trace: null}
  inplace: null
  backward: trace_grad
- name: trunc
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnchangedInferMeta
    param: [input]
  kernel:
    func: [trunc]
    param: [input]
    backend: null
    layout: null
    data_type: null
    dispatch: {trunc: null}
  inplace: null
  backward: trunc_grad
- name: unfold
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: 'int[]', name: kernel_sizes}
  - {typename: 'int[]', name: strides}
  - {typename: 'int[]', name: paddings}
  - {typename: 'int[]', name: dilations}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnfoldInferMeta
    param: [x, kernel_sizes, strides, paddings, dilations]
  kernel:
    func: [unfold]
    param: [x, kernel_sizes, strides, paddings, dilations]
    backend: null
    layout: null
    data_type: null
    dispatch: {unfold: null}
  inplace: null
  backward: unfold_grad
- name: unsqueeze
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: IntArray, name: axis, default_value: '{}', data_type: 'std::vector<int64_t>'}
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  - {typename: Tensor, name: xshape, intermediate: true}
  no_need_buffer: null
  infer_meta:
    func: UnsqueezeWithXShapeInferMeta
    param: [x, axis]
  kernel:
    func: [unsqueeze_with_xshape]
    param: [x, axis]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [x]
      to_complex_flag: [false]
    dispatch: {unsqueeze_with_xshape: null}
  inplace: {out: x}
  backward: unsqueeze_grad
- name: unstack
  inputs:
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: axis, default_value: '0'}
  - {typename: int, name: num, default_value: '0'}
  outputs:
  - {typename: 'Tensor[]', name: out, size: num, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: UnStackInferMeta
    param: [x, axis, num]
  kernel:
    func: [unstack]
    param: [x, axis, num]
    backend: null
    layout: null
    data_type: null
    dispatch: {unstack: null}
  inplace: null
  backward: unstack_grad
- name: viterbi_decode
  inputs:
  - {typename: Tensor, name: potentials, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: transition_params, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: lengths, optional: false, no_need_buffer: false}
  attrs:
  - {typename: bool, name: include_bos_eos_tag, default_value: 'true'}
  outputs:
  - {typename: Tensor, name: scores, intermediate: false}
  - {typename: Tensor, name: path, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: ViterbiDecodeInferMeta
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
  kernel:
    func: [viterbi_decode]
    param: [potentials, transition_params, lengths, include_bos_eos_tag]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [potentials]
      to_complex_flag: [false]
    dispatch: {viterbi_decode: null}
  inplace: null
  backward: null
- name: warprnnt
  inputs:
  - {typename: Tensor, name: input, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: input_lengths, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: label_lengths, optional: false, no_need_buffer: false}
  attrs:
  - {typename: int, name: blank, default_value: '0'}
  - {typename: float, name: fastemit_lambda, default_value: '0.0'}
  outputs:
  - {typename: Tensor, name: loss, intermediate: false}
  - {typename: Tensor, name: warprnntgrad, intermediate: true}
  no_need_buffer: null
  infer_meta:
    func: WarprnntInferMeta
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
  kernel:
    func: [warprnnt]
    param: [input, label, input_lengths, label_lengths, blank, fastemit_lambda]
    backend: null
    layout: null
    data_type:
      ordered: false
      candidates: [input]
      to_complex_flag: [false]
    dispatch: {warprnnt: null}
  inplace: null
  backward: warprnnt_grad
- name: where
  inputs:
  - {typename: Tensor, name: condition, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: x, optional: false, no_need_buffer: false}
  - {typename: Tensor, name: y, optional: false, no_need_buffer: false}
  attrs: []
  outputs:
  - {typename: Tensor, name: out, intermediate: false}
  no_need_buffer: null
  infer_meta:
    func: WhereInferMeta
    param: [condition, x, y]
  kernel:
    func: [where]
    param: [condition, x, y]
    backend: null
    layout: null
    data_type: null
    dispatch: {where: null}
  inplace: null
  backward: where_grad
