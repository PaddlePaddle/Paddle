include(operators)

# clean cache and pybind_file content first when rebuild
unset(GLOB_OP_LIB CACHE)
unset(OP_LIBRARY CACHE)
set(pybind_file ${PADDLE_BINARY_DIR}/paddle/fluid/pybind/pybind.h.tmp CACHE INTERNAL "pybind.h file")
set(pybind_file_final ${PADDLE_BINARY_DIR}/paddle/fluid/pybind/pybind.h)
file(WRITE ${pybind_file} "// Generated by the paddle/fluid/operators/CMakeLists.txt.  DO NOT EDIT!\n\n")

copy_if_different(${pybind_file} ${pybind_file_final})

add_subdirectory(math)
add_subdirectory(controlflow)
add_subdirectory(detection)
add_subdirectory(elementwise)
add_subdirectory(fused)
add_subdirectory(metrics)
add_subdirectory(optimizers)
add_subdirectory(reduce_ops)
add_subdirectory(sequence_ops)
add_subdirectory(jit)

if(WITH_DISTRIBUTE)
    add_subdirectory(distributed)
    add_subdirectory(distributed_ops)
    add_subdirectory(collective)
endif()

add_subdirectory(amp)

add_subdirectory(reader)

if (NOT WIN32)
    add_subdirectory(nccl)
endif()

if (WITH_GPU AND TENSORRT_FOUND)
    add_subdirectory(tensorrt)
endif()

if (WITH_LITE)
    add_subdirectory(lite)
endif()

SET(OP_HEADER_DEPS xxhash executor)

if (WITH_GPU)
    if (${CMAKE_CUDA_COMPILER_VERSION} LESS 11.0)
        SET(OP_HEADER_DEPS ${OP_HEADER_DEPS} cub)
    endif()
endif()

SET(OP_PREFETCH_DEPS "")
if (WITH_DISTRIBUTE)
    SET(OP_PREFETCH_DEPS ${OP_PREFETCH_DEPS} parameter_prefetch)
endif()

SET(OP_MKL_DEPS "")
if (NOT WITH_MKL OR NOT WITH_AVX)
    SET(OP_MKL_DEPS ${OP_MKL_DEPS} match_matrix_tensor_op)
    SET(OP_MKL_DEPS ${OP_MKL_DEPS} var_conv_2d_op)
endif()
if(WITH_COVERAGE OR WIN32 OR WITH_NV_JETSON)
    SET(OP_MKL_DEPS ${OP_MKL_DEPS} pyramid_hash_op)
endif()

if(WITH_UNITY_BUILD)
    register_unity_group(cc add_position_encoding_op.cc addmm_op.cc affine_channel_op.cc affine_grid_op.cc allclose_op.cc argsort_op.cc array_to_lod_tensor_op.cc assert_op.cc assign_op.cc assign_value_op.cc attention_lstm_op.cc average_accumulates_op.cc batch_fc_op.cc bce_loss_op.cc bce_loss_op.cc beam_search_op.cc beam_search_decode_op.cc bernoulli_op.cc bilateral_slice_op.cc)
    register_unity_group(cc mkldnn/batch_norm_mkldnn_op.cc bilinear_tensor_product_op.cc bmm_op.cc bpr_loss_op.cc cast_op.cc cholesky_op.cc chunk_eval_op.cc chunk_eval_op.cc clip_by_norm_op.cc clip_op.cc coalesce_tensor_op.cc crop_tensor_op.cc)
    register_unity_group(cc center_loss_op.cc mkldnn/concat_mkldnn_op.cc conv_op.cc mkldnn/conv_mkldnn_op.cc conv_transpose_op.cc mkldnn/conv_transpose_mkldnn_op.cc correlation_op.cc cos_sim_op.cc crf_decoding_op.cc crop_op.cc)
    register_unity_group(cc cross_entropy_op.cc cross_op.cc ctc_align_op.cc cudnn_lstm_op.cc cumsum_op.cc cvm_op.cc data_norm_op.cc deformable_conv_op.cc deformable_conv_v1_op.cc deformable_psroi_pooling_op.cc delete_var_op.cc dequantize_abs_max_op.cc dequantize_op.cc mkldnn/dequantize_mkldnn_op.cc)
    register_unity_group(cc dequeue_op.cc detection_map_op.cc dgc_clip_by_norm_op.cc diag_embed_op.cc diag_op.cc diag_v2_op.cc dot_op.cc edit_distance_op.cc empty_op.cc enqueue_op.cc erf_op.cc)
    register_unity_group(cc expand_v2_op.cc eye_op.cc fake_dequantize_op.cc fc_op.cc mkldnn/fc_mkldnn_op.cc fill_any_like_op.cc fill_constant_batch_size_like_op.cc fill_constant_op.cc fill_op.cc fill_zeros_like_op.cc filter_by_instag_op.cc)
    register_unity_group(cc expand_v2_op.cc flatten_op.cc flip_op.cc fsp_op.cc gather_nd_op.cc gather_op.cc gather_tree_op.cc gaussian_random_batch_size_like_op.cc gaussian_random_op.cc mkldnn/gaussian_random_mkldnn_op.cc grid_sampler_op.cc group_norm_op.cc gru_op.cc)
    register_unity_group(cc hash_op.cc hierarchical_sigmoid_op.cc hinge_loss_op.cc histogram_op.cc huber_loss_op.cc im2sequence_op.cc increment_op.cc index_sample_op.cc index_select_op.cc interpolate_op.cc isfinite_v2_op.cc)
    register_unity_group(cc inplace_abn_op interpolate_v2_op.cc inverse_op.cc is_empty_op.cc isfinite_op.cc kron_op.cc l1_norm_op.cc label_smooth_op.cc layer_norm_op.cc mkldnn/layer_norm_mkldnn_op.cc mkldnn/layer_norm_mkldnn_op.cc linspace_op.cc load_combine_op.cc load_op.cc)
    register_unity_group(cc lod_array_length_op.cc lod_rank_table_op.cc lod_reset_op.cc lod_tensor_to_array_op.cc log_softmax_op.cc lookup_table_dequant_op.cc lrn_op.cc mkldnn/lrn_mkldnn_op.cc lstm_unit_op.cc lstmp_op.cc)
    register_unity_group(cc log_loss_op.cc lookup_table_v2_op.cc margin_rank_loss_op.cc masked_select_op.cc match_matrix_tensor_op.cc matmul_op.cc mkldnn/matmul_mkldnn_op.cc max_sequence_len_op.cc maxout_op.cc merge_lod_tensor_op.cc merge_selected_rows_op.cc meshgrid_op.cc)
    register_unity_group(cc concat_op.cc conv_shift_op.cc dequantize_log_op.cc dropout_op.cc expand_op.cc fake_quantize_op.cc gelu_op.cc get_tensor_from_selected_rows_op.cc lookup_table_op.cc matmul_v2_op.cc)
    register_unity_group(cc mean_iou_op.cc mean_op.cc minus_op.cc mish_op.cc mul_op.cc multinomial_op.cc multiplex_op.cc mv_op.cc nce_op.cc nll_loss_op.cc norm_op.cc one_hot_op.cc one_hot_v2_op.cc p_norm_op.cc pad2d_op.cc pad3d_op.cc pad_constant_like_op.cc pad_op.cc)
    register_unity_group(cc modified_huber_loss_op.cc mkldnn/mul_mkldnn_op.cc partial_concat_op.cc partial_sum_op.cc pixel_shuffle_op.cc pool_op.cc mkldnn/pool_mkldnn_op.cc pool_with_index_op.cc positive_negative_pair_op.cc prelu_op.cc print_op.cc prroi_pool_op.cc psroi_pool_op.cc pull_box_extended_sparse_op.cc pull_box_sparse_op.cc pull_sparse_op.cc pull_sparse_v2_op.cc)
    register_unity_group(cc push_dense_op.cc quantize_op.cc mkldnn/quantize_mkldnn_op.cc queue_generator_op.cc randint_op.cc random_crop_op.cc randperm_op.cc range_op.cc rank_attention_op.cc rank_loss_op.cc recurrent_op.cc reorder_lod_tensor_by_rank_op.cc requantize_op.cc mkldnn/requantize_mkldnn_op.cc reshape_op.cc reverse_op.cc)
    register_unity_group(cc rnn_memory_helper_op.cc roi_align_op.cc roll_op.cc run_program_op.cc sample_logits_op.cc sampling_id_op.cc save_combine_op.cc save_op.cc scale_op.cc scatter_nd_add_op.cc scatter_op.cc seed_op.cc segment_pool_op.cc select_input_op.cc select_output_op.cc)
    register_unity_group(cc roi_pool_op.cc selu_op.cc shape_op.cc shard_index_op.cc shrink_rnn_memory_op.cc shuffle_batch_op.cc shuffle_channel_op.cc sigmoid_cross_entropy_with_logits_op.cc sign_op.cc similarity_focus_op.cc size_op.cc slice_op.cc softmax_op.cc mkldnn/softmax_mkldnn_op.cc)
    register_unity_group(cc space_to_depth_op.cc spectral_norm_op.cc split_lod_tensor_op.cc split_op.cc split_selected_rows_op.cc spp_op.cc squared_l2_norm_op.cc squeeze_op.cc stack_op.cc strided_slice_op.cc sum_op.cc mkldnn/sum_mkldnn_op.cc tdm_child_op.cc tdm_sampler_op.cc teacher_student_sigmoid_loss_op.cc temporal_shift_op.cc)
    register_unity_group(cc row_conv_op.cc tensor_array_to_tensor_op.cc tile_op.cc top_k_v2_op.cc trace_op.cc transpose_op.cc mkldnn/transpose_mkldnn_op.cc tree_conv_op.cc tril_triu_op.cc truncated_gaussian_random_op.cc unbind_op.cc unfold_op.cc)
    register_unity_group(cc smooth_l1_loss_op.cc smooth_l1_loss_op.cc squared_l2_distance_op.cc uniform_random_batch_size_like_op.cc uniform_random_op.cc unique_op.cc unique_with_counts_op.cc unpool_op.cc unsqueeze_op.cc unstack_op.cc var_conv_2d_op.cc where_index_op.cc where_op.cc)
endif()
register_operators(EXCLUDES py_func_op warpctc_op dgc_op lstm_op
    sync_batch_norm_op ${OP_MKL_DEPS} DEPS ${OP_HEADER_DEPS} ${OP_PREFETCH_DEPS})

if (WITH_GPU)
    # warpctc_op needs cudnn 7 above
    if (${CUDNN_MAJOR_VERSION} VERSION_LESS 7)
        op_library(warpctc_op DEPS dynload_warpctc sequence_padding sequence_scale SRCS warpctc_op.cc warpctc_op.cu.cc)
    else()
        op_library(warpctc_op DEPS dynload_warpctc sequence_padding sequence_scale)
    endif()
    op_library(sync_batch_norm_op)
    file(APPEND ${pybind_file} "USE_CUDA_ONLY_OP(sync_batch_norm);\n")
else()
    op_library(warpctc_op DEPS dynload_warpctc sequence_padding sequence_scale)
endif()
op_library(lstm_op DEPS ${OP_HEADER_DEPS} ${OP_PREFETCH_DEPS} lstm_compute)

set(COMMON_OP_DEPS ${OP_HEADER_DEPS})

if (WITH_DGC)
    op_library(dgc_op DEPS dgc)
    file(APPEND ${pybind_file} "USE_CUDA_ONLY_OP(dgc);\n")
    set(COMMON_OP_DEPS ${COMMON_OP_DEPS} dgc)
endif()

cc_library(common_infer_shape_functions SRCS common_infer_shape_functions.cc DEPS operator)

set(COMMON_OP_DEPS ${COMMON_OP_DEPS} selected_rows_functor selected_rows
lod_tensor maxouting unpooling pooling lod_rank_table context_project
sequence_pooling segment_pooling executor device_memory_aligment generator)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} dynload_warpctc)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} sequence_padding sequence_scale cos_sim_functor memory jit_kernel_helper concat_and_split cross_entropy softmax vol2col im2col sampler sample_prob tree2col)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} sequence2batch lstm_compute matrix_bit_code gru_compute activation_functions beam_search fc matrix_inverse)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} box_wrapper boost)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} common_infer_shape_functions)
if (WITH_GPU)
  set(COMMON_OP_DEPS ${COMMON_OP_DEPS} depthwise_conv prelu bert_encoder_functor)
endif()
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} device_memory_aligment)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} layer)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} tensor_formatter)
set(COMMON_OP_DEPS ${COMMON_OP_DEPS} op_version_registry)

# FIXME(typhoonzero): operator deps may not needed.
# op_library(lod_tensor_to_array_op DEPS lod_rank_table_op)
# op_library(array_to_lod_tensor_op DEPS lod_rank_table_op)
# op_library(unsqueeze_op DEPS reshape_op)
# op_library(squeeze_op DEPS reshape_op)
# op_library(flatten_op DEPS reshape_op)
# op_library(unstack_op DEPS stack_op)
# op_library(tensor_array_to_tensor_op DEPS concat_op)

set(OPERATOR_DEPS ${OPERATOR_DEPS} ${COMMON_OP_DEPS})
set(GLOB_OPERATOR_DEPS ${OPERATOR_DEPS} CACHE INTERNAL "Global Op dependencies")

cc_test(test_common_infer_shape_functions SRCS test_common_infer_shape_functions.cc DEPS common_infer_shape_functions ${COMMON_OP_DEPS} activation_op elementwise_add_op softmax_op softmax)
cc_test(assign_op_test SRCS assign_op_test.cc DEPS assign_op)
cc_test(gather_test SRCS gather_test.cc DEPS tensor)
cc_test(scatter_test SRCS scatter_test.cc DEPS tensor math_function)
cc_test(beam_search_decode_op_test SRCS beam_search_decode_op_test.cc DEPS lod_tensor)
cc_test(strided_memcpy_test SRCS strided_memcpy_test.cc DEPS tensor memory)
cc_test(save_load_op_test SRCS save_load_op_test.cc DEPS save_op load_op)
cc_test(save_load_combine_op_test SRCS save_load_combine_op_test.cc DEPS save_combine_op load_combine_op)
nv_test(dropout_op_test SRCS dropout_op_test.cc DEPS dropout_op tensor generator)
if (WITH_GPU)
    nv_test(test_leaky_relu_grad_grad_functor SRCS test_leaky_relu_grad_grad_functor.cc test_leaky_relu_grad_grad_functor.cu DEPS tensor device_context eigen3)
else()
    cc_test(test_leaky_relu_grad_grad_functor SRCS test_leaky_relu_grad_grad_functor.cc DEPS tensor device_context eigen3)
endif()

cc_library(tensor_formatter SRCS tensor_formatter.cc DEPS ${OP_HEADER_DEPS})
if (WITH_PYTHON)
  cc_library(py_func_op SRCS py_func_op.cc DEPS op_registry python pybind)
endif()

set(GLOB_OP_LIB ${OP_LIBRARY} CACHE INTERNAL "Global OP library")
add_subdirectory(benchmark)

cc_test(op_debug_string_test SRCS op_debug_string_test.cc DEPS elementwise_add_op)

if(WITH_MKLDNN)
include(mkldnn/inplace_op_tests.cmake)
include(mkldnn/nhwc_op_tests.cmake)
endif()

if(WITH_UNITY_BUILD)
    target_link_libraries(paddle_operators_unity ${OP_HEADER_DEPS} ${OP_PREFETCH_DEPS} ${COMMON_OP_DEPS})
endif()
