- op : broadcast
  args : (Tensor x, int64_t[] broadcast_axes,  int64_t[] out_shape)
  output : Tensor(out)
  infer_meta :
    func : CINNBroadcastInferMeta
    param : [x, broadcast_axes, out_shape]
  kernel :
    func : expand
    param : [x, broadcast_axes]

- op : reduce_max
  args : (Tensor x, int64_t[] dim,  bool keep_dim)
  output : Tensor(out)
  infer_meta :
    func : ReduceInferMeta
  kernel :
    func : frobenius_norm

- op : reduce_sum
  args : (Tensor x, int64_t[] dim,  bool keep_dim)
  output : Tensor(out)
  infer_meta :
    func : ReduceInferMeta
  kernel :
    func : frobenius_norm

- op : reshape
  args : (Tensor x, int[] shape)
  output : Tensor(out)
  infer_meta :
    func : ReshapeInferMeta
  kernel :
    func : reshape

- op : scale
  args : (Tensor x, float scale=1.0, float bias=0.0, bool bias_after_scale=true)
  output : Tensor(out)
  infer_meta :
    func : UnchangedInferMeta
    param : [x]
  kernel :
    func : scale

- op : slice
  args : (Tensor x, int64_t[] axes, int64_t[] starts, int64_t[] ends, int64_t[] infer_flags, int64_t[] decrease_axis)
  output : Tensor
  infer_meta :
    func : SliceRawInferMeta
  kernel :
    func : slice

- op : uniform_random
  args : (int64_t[] shape,  float min, float max, int seed, DataType dtype, int diag_num = 0, int diag_step=0, float diag_val=1.0)
  output : Tensor(out)
  infer_meta :
    func : CreateVecShapeInferMeta
    param : [shape, dtype]
  kernel :
    func : full_int_array
    param : [shape, dtype]
