- op : broadcast
  args : (Tensor x, int64_t[] broadcast_axes,  int64_t[] out_shape)
  output : Tensor(out)
  infer_meta :
    func : CINNBroadcastInferMeta
    param : [x, broadcast_axes, out_shape]
  kernel :
    func : expand
    param : [x, broadcast_axes]

- op : reduce_max
  args : (Tensor x, int64_t[] dim,  bool keep_dim)
  output : Tensor(out)
  infer_meta :
    func : ReduceInferMeta
  kernel :
    func : frobenius_norm

- op : reduce_sum
  args : (Tensor x, int64_t[] dim,  bool keep_dim)
  output : Tensor(out)
  infer_meta :
    func : ReduceInferMeta
  kernel :
    func : frobenius_norm

- op : uniform_random_batch_size_like
  args : (Tensor input, int[] shape, int input_dim_idx=0, int output_dim_idx=0, float min=-1.0f, float max=1.0f, int seed=0,  int diag_step=0, float diag_val=1.0f, DataType dtype=DataType::FLOAT32)
  output : Tensor(out)
  infer_meta :
    func : BatchSizeLikeInferMeta
    param : [input,shape,input_dim_idx,output_dim_idx]
  kernel :
    func : uniform_random_batch_size_like
    data_type : dtype
