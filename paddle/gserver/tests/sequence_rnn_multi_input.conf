#edit-mode: -*- python -*-
# Copyright (c) 2016 Baidu, Inc. All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from paddle.trainer_config_helpers import *

######################## data source ################################
define_py_data_sources2(train_list='gserver/tests/Sequence/dummy.list',
                        test_list=None,
                        module='rnn_data_provider',
                        obj='process_seq2')


settings(batch_size=2, learning_rate=0.01)
######################## network configure ################################
dict_dim = 10
word_dim = 8
hidden_dim = 8
label_dim = 3

data = data_layer(name="word", size=dict_dim)

emb = embedding_layer(input=data, size=word_dim)

def step(y, wid):
    z = embedding_layer(input=wid, size=word_dim)
    mem = memory(name="rnn_state", size=hidden_dim)
    out = fc_layer(input=[y, z, mem],
                    size=hidden_dim,
                    act=TanhActivation(),
                    bias_attr=True,
                    name="rnn_state")
    return out

out = recurrent_group(
    name="rnn",
    step=step,
    input=[emb, data])

rep = last_seq(input=out)
prob = fc_layer(size=label_dim,
                input=rep,
                act=SoftmaxActivation(),
                bias_attr=True)

outputs(classification_cost(input=prob,
                            label=data_layer(name="label", size=label_dim)))
