// Copyright (c) 2023 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "paddle/ir/pattern_rewrite/drr/drr_rewrite_pattern.h"

// NOTE(zhangbo9674): File pd_op.h is generated by op_gen.py, see details in
// paddle/fluid/ir/dialect/CMakeLists.txt.
#include "paddle/fluid/ir/dialect/pd_op.h"

namespace ir {

struct RemoveRedundentReshapeFunctor {
  void operator()(ir::DrrPatternContext *ctx) {
    // Source patterns：待匹配的子图
    SourcePattern pat = ctx->SourcePattern();
    const auto &reshape = pat.Op("reshape");
    // 匹配两个重叠reshape, 对输入输出张量分别设置为 arg0 和 ret，方便后面加约束
    pat.Tensor("ret") = reshape(reshape(pat.Tensor("arg0")));

    // Constrains：约束规则
    // 要求 arg0 和 ret 的 shape 相同， 其中
    // Tensor.shape的类型是抽象层面的PatternShape, 而不是普通 Shape
    // RequireEqual:封装的通用API，用户无需关心基础数据结构
    pat.RequireEqual(pat.Tensor("ret").shape(), pat.Tensor("arg0").shape());
    // RequireNativeCall:用于处理基础API不能提供的操作，其中的lambda表达式会在Pass运行期执行，因此会与底层数据结构相关
    pat.RequireNativeCall([](MatchContext *match_ctx) -> bool {
      // MatchContext拿到的已经是实际值，而非PatternShape，因此需指定实际类型
      return match_ctx->Tensor("ret").shape<std::vector<int>>() ==
             match_ctx->Tensor("arg0").shape<std::vector<int>>();
    });

    // Result patterns：要替换为的子图
    ResultPattern res = pat.ResultPattern();
    // 使用 arg0 替换 ret
    // 所有 ret 参数均在Source Pattern中使用，对 ret 的替换等同于对 ret 的
    // producer op的删除
    res.Tensor("ret").Assign(res.Tensor("arg0"));
  }
};

class RemoveRedundentReshapePattern
    : public ir::DrrRewritePattern<paddle::dialect::ReshapeOp,
                                   RemoveRedundentReshapeFunctor> {
 public:
  using DrrRewritePattern<paddle::dialect::ReshapeOp,
                          RemoveRedundentReshapeFunctor>::DrrRewritePattern;
};

}  // namespace ir
